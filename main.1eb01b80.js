!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=27)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(11)},,function(e,t,n){"use strict";e.exports=n(17)},function(e,t,n){"use strict";var r=n(3),i={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},o={};function s(e){return r.isMemo(e)?l:o[e.$$typeof]||i}o[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},o[r.Memo]=l;var u=Object.defineProperty,c=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var i=p(n);i&&i!==h&&e(t,i,r)}var l=c(n);d&&(l=l.concat(d(n)));for(var o=s(t),m=s(n),v=0;v<l.length;++v){var g=l[v];if(!(a[g]||r&&r[g]||m&&m[g]||o&&o[g])){var y=f(n,g);try{u(t,g,y)}catch(e){}}}}return t}},function(e,t,n){"use strict";(function(e,r){var i,a=n(8);i="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var l=Object(a.a)(i);t.a=l}).call(this,n(18),n(19)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,o,s=l(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))i.call(n,c)&&(s[c]=n[c]);if(r){o=r(n);for(var d=0;d<o.length;d++)a.call(n,o[d])&&(s[o[d]]=n[o[d]])}}return s}},function(e,t,n){},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},,function(e,t,n){"use strict";
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),i="function"==typeof Symbol&&Symbol.for,a=i?Symbol.for("react.element"):60103,l=i?Symbol.for("react.portal"):60106,o=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,u=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,d=i?Symbol.for("react.context"):60110,f=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,h=i?Symbol.for("react.memo"):60115,m=i?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function C(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},C.prototype=w.prototype;var x=E.prototype=new C;x.constructor=E,r(x,w.prototype),x.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,i={},l=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!k.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:a,type:e,key:l,ref:o,props:i,_owner:T.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var M=/\/+/g,O=[];function L(e,t,n,r){if(O.length){var i=O.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function z(e,t,n){return null==e?0:function e(t,n,r,i){var o=typeof t;"undefined"!==o&&"boolean"!==o||(t=null);var s=!1;if(null===t)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case a:case l:s=!0}}if(s)return r(i,t,""===n?"."+I(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var c=n+I(o=t[u],u);s+=e(o,c,r,i)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=v&&t[v]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),u=0;!(o=t.next()).done;)s+=e(o=o.value,c=n+I(o,u++),r,i);else if("object"===o)throw r=""+t,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return s}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),r.push(e))}function R(e,t,n,r,i){var a="";null!=n&&(a=(""+n).replace(M,"$&/")+"/"),z(e,D,t=L(t,a,r,i)),N(t)}var F={current:null};function j(){var e=F.current;if(null===e)throw Error(g(321));return e}var B={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return R(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;z(e,A,t=L(null,null,t,n)),N(t)},count:function(e){return z(e,(function(){return null}),null)},toArray:function(e){var t=[];return R(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=o,t.Profiler=u,t.PureComponent=E,t.StrictMode=s,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var i=r({},e.props),l=e.key,o=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,s=T.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)S.call(t,c)&&!k.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){u=Array(c);for(var d=0;d<c;d++)u[d]=arguments[d+2];i.children=u}return{$$typeof:a,type:e.type,key:l,ref:o,props:i,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return j().useCallback(e,t)},t.useContext=function(e,t){return j().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return j().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return j().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return j().useLayoutEffect(e,t)},t.useMemo=function(e,t){return j().useMemo(e,t)},t.useReducer=function(e,t,n){return j().useReducer(e,t,n)},t.useRef=function(e){return j().useRef(e)},t.useState=function(e){return j().useState(e)},t.version="16.14.0"},function(e,t,n){"use strict";
/** @license React v16.14.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),i=n(6),a=n(12);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function o(e,t,n,r,i,a,l,o,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var s=!1,u=null,c=!1,d=null,f={onError:function(e){s=!0,u=e}};function p(e,t,n,r,i,a,l,c,d){s=!1,u=null,o.apply(f,arguments)}var h=null,m=null,v=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,i,a,o,f,h){if(p.apply(this,arguments),s){if(!s)throw Error(l(198));var m=u;s=!1,u=null,c||(c=!0,d=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function w(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!E[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in E[n]=t,n=t.eventTypes){var i=void 0,a=n[r],o=t,s=r;if(x.hasOwnProperty(s))throw Error(l(99,s));x[s]=a;var u=a.phasedRegistrationNames;if(u){for(i in u)u.hasOwnProperty(i)&&C(u[i],o,s);i=!0}else a.registrationName?(C(a.registrationName,o,s),i=!0):i=!1;if(!i)throw Error(l(98,r,e))}}}}function C(e,t,n){if(T[e])throw Error(l(100,e));T[e]=t,S[e]=t.eventTypes[n].dependencies}var E=[],x={},T={},S={};function k(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,M=null,O=null;function L(e){if(e=m(e)){if("function"!=typeof _)throw Error(l(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function N(e){M?O?O.push(e):O=[e]:M=e}function z(){if(M){var e=M,t=O;if(O=M=null,L(e),t)for(e=0;e<t.length;e++)L(t[e])}}function I(e,t){return e(t)}function A(e,t,n,r,i){return e(t,n,r,i)}function D(){}var R=I,F=!1,j=!1;function B(){null===M&&null===O||(D(),z())}function V(e,t,n){if(j)return e(t,n);j=!0;try{return R(e,t,n)}finally{j=!1,B()}}var $=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,W={},U={};function G(e,t,n,r,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new G(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new G(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new G(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new G(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new G(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new G(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new G(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new G(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new G(e,5,!1,e.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Q,Y);q[t]=new G(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Q,Y);q[t]=new G(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Q,Y);q[t]=new G(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new G(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new G("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new G(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function K(e,t,n,r){var i=q.hasOwnProperty(t)?q[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!H.call(U,e)||!H.call(W,e)&&($.test(e)?U[e]=!0:(W[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,ie=J?Symbol.for("react.profiler"):60114,ae=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,oe=J?Symbol.for("react.concurrent_mode"):60111,se=J?Symbol.for("react.forward_ref"):60112,ue=J?Symbol.for("react.suspense"):60113,ce=J?Symbol.for("react.suspense_list"):60120,de=J?Symbol.for("react.memo"):60115,fe=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case ue:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ae:return"Context.Provider";case se:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case de:return ve(e.type);case pe:return ve(e.render);case fe:if(e=1===e._status?e._result:null)return ve(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,a=ve(e.type);n=null,r&&(n=ve(r.type)),r=a,a="",i?a=" (at "+i.fileName.replace(Z,"")+":"+i.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ce(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ee(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&K(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ke(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Me(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ne(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ze(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",Ae="http://www.w3.org/2000/svg";function De(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?De(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,je=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ae||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ve(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $e={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},He={},We={};function Ue(e){if(He[e])return He[e];if(!$e[e])return e;var t,n=$e[e];for(t in n)if(n.hasOwnProperty(t)&&t in We)return He[e]=n[t];return e}P&&(We=document.createElement("div").style,"AnimationEvent"in window||(delete $e.animationend.animation,delete $e.animationiteration.animation,delete $e.animationstart.animation),"TransitionEvent"in window||delete $e.transitionend.transition);var Ge=Ue("animationend"),qe=Ue("animationiteration"),Qe=Ue("animationstart"),Ye=Ue("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ke=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Ke.get(e);return void 0===t&&(t=new Map,Ke.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(l(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){n=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===n)return tt(i),e;if(a===r)return tt(i),t;a=a.sibling}throw Error(l(188))}if(n.return!==r.return)n=i,r=a;else{for(var o=!1,s=i.child;s;){if(s===n){o=!0,n=i,r=a;break}if(s===r){o=!0,r=i,n=a;break}s=s.sibling}if(!o){for(s=a.child;s;){if(s===n){o=!0,n=a,r=i;break}if(s===r){o=!0,r=a,n=i;break}s=s.sibling}if(!o)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var at=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ot(e){if(null!==e&&(at=rt(at,e)),e=at,at=null,e){if(it(e,lt),at)throw Error(l(95));if(c)throw e=d,c=!1,d=null,e}}function st(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var i=ct.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=st(e.nativeEvent);r=e.topLevelType;var a=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var o=null,s=0;s<E.length;s++){var u=E[s];u&&(u=u.extractEvents(r,t,a,i,l))&&(o=rt(o,u))}ot(o)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Qt(t,"scroll",!0);break;case"focus":case"blur":Qt(t,"focus",!0),Qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&Qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&qt(e,t)}n.set(e,null)}}var mt,vt,gt,yt=!1,bt=[],wt=null,Ct=null,Et=null,xt=new Map,Tt=new Map,St=[],kt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function Mt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":Ct=null;break;case"mouseover":case"mouseout":Et=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Ot(e,t,n,r,i,a){return null===e||e.nativeEvent!==a?(e=_t(t,n,r,i,a),null!==t&&(null!==(t=_n(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function Lt(e){var t=Pn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){gt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function zt(e,t,n){Nt(e)&&n.delete(t)}function It(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&mt(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Nt(wt)&&(wt=null),null!==Ct&&Nt(Ct)&&(Ct=null),null!==Et&&Nt(Et)&&(Et=null),xt.forEach(zt),Tt.forEach(zt)}function At(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,It)))}function Dt(e){function t(t){return At(t,e)}if(0<bt.length){At(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&At(wt,e),null!==Ct&&At(Ct,e),null!==Et&&At(Et,e),xt.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Lt(n),null===n.blockedOn&&St.shift()}var Rt={},Ft=new Map,jt=new Map,Bt=["abort","abort",Ge,"animationEnd",qe,"animationIteration",Qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function Vt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],a="on"+(i[0].toUpperCase()+i.slice(1));a={phasedRegistrationNames:{bubbled:a,captured:a+"Capture"},dependencies:[r],eventPriority:t},jt.set(r,t),Ft.set(r,a),Rt[i]=a}}Vt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Vt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Vt(Bt,2);for(var $t="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<$t.length;Ht++)jt.set($t[Ht],0);var Wt=a.unstable_UserBlockingPriority,Ut=a.unstable_runWithPriority,Gt=!0;function qt(e,t){Qt(t,e,!1)}function Qt(e,t,n){var r=jt.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Kt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){F||D();var i=Kt,a=F;F=!0;try{A(i,e,t,n,r)}finally{(F=a)||B()}}function Xt(e,t,n,r){Ut(Wt,Kt.bind(null,e,t,n,r))}function Kt(e,t,n,r){if(Gt)if(0<bt.length&&-1<kt.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var i=Zt(e,t,n,r);if(null===i)Mt(e,r);else if(-1<kt.indexOf(e))e=_t(i,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return wt=Ot(wt,e,t,n,r,i),!0;case"dragenter":return Ct=Ot(Ct,e,t,n,r,i),!0;case"mouseover":return Et=Ot(Et,e,t,n,r,i),!0;case"pointerover":var a=i.pointerId;return xt.set(a,Ot(xt.get(a)||null,e,t,n,r,i)),!0;case"gotpointercapture":return a=i.pointerId,Tt.set(a,Ot(Tt.get(a)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){Mt(e,r),e=ft(e,r,null,t);try{V(pt,e)}finally{dt(e)}}}}function Zt(e,t,n,r){if(null!==(n=Pn(n=st(r)))){var i=Je(n);if(null===i)n=null;else{var a=i.tag;if(13===a){if(null!==(n=et(i)))return n;n=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=ft(e,r,n,t);try{V(pt,e)}finally{dt(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var on=Ie;function sn(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,vn=null;function gn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function Cn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function En(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+xn,Sn="__reactEventHandlers$"+xn,kn="__reactContainere$"+xn;function Pn(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[kn]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=En(e);null!==e;){if(n=e[Tn])return n;e=En(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[Tn]||e[kn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Mn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function On(e){return e[Sn]||null}function Ln(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function zn(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Ln(t);for(t=n.length;0<t--;)zn(n[t],"captured",e);for(t=0;t<n.length;t++)zn(n[t],"bubbled",e)}}function An(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Dn(e){e&&e.dispatchConfig.registrationName&&An(e._targetInst,null,e)}function Rn(e){it(e,In)}var Fn=null,jn=null,Bn=null;function Vn(){if(Bn)return Bn;var e,t,n=jn,r=n.length,i="value"in Fn?Fn.value:Fn.textContent,a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===i[a-t];t++);return Bn=i.slice(e,1<t?1-t:void 0)}function $n(){return!0}function Hn(){return!1}function Wn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:Hn,this.isPropagationStopped=Hn,this}function Un(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function Gn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qn(e){e.eventPool=[],e.getPooled=Un,e.release=Gn}i(Wn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Wn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Wn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return i(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,qn(n),n},qn(Wn);var Qn=Wn.extend({data:null}),Yn=Wn.extend({data:null}),Xn=[9,13,27,32],Kn=P&&"CompositionEvent"in window,Zn=null;P&&"documentMode"in document&&(Zn=document.documentMode);var Jn=P&&"TextEvent"in window&&!Zn,er=P&&(!Kn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ar(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var lr=!1;var or={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Kn)e:{switch(e){case"compositionstart":var a=nr.compositionStart;break e;case"compositionend":a=nr.compositionEnd;break e;case"compositionupdate":a=nr.compositionUpdate;break e}a=void 0}else lr?ir(e,n)&&(a=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=nr.compositionStart);return a?(er&&"ko"!==n.locale&&(lr||a!==nr.compositionStart?a===nr.compositionEnd&&lr&&(i=Vn()):(jn="value"in(Fn=r)?Fn.value:Fn.textContent,lr=!0)),a=Qn.getPooled(a,t,n,r),i?a.data=i:null!==(i=ar(n))&&(a.data=i),Rn(a),i=a):i=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ar(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(lr)return"compositionend"===e||!Kn&&ir(e,t)?(e=Vn(),Bn=jn=Fn=null,lr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,Rn(t)):t=null,null===i?t:null===t?i:[i,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ur(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(e,t,n){return(e=Wn.getPooled(cr.change,e,t,n)).type="change",N(n),Rn(e),e}var fr=null,pr=null;function hr(e){ot(e)}function mr(e){if(Ce(Mn(e)))return e}function vr(e,t){if("change"===e)return t}var gr=!1;function yr(){fr&&(fr.detachEvent("onpropertychange",br),pr=fr=null)}function br(e){if("value"===e.propertyName&&mr(pr))if(e=dr(pr,e,st(e)),F)ot(e);else{F=!0;try{I(hr,e)}finally{F=!1,B()}}}function wr(e,t,n){"focus"===e?(yr(),pr=n,(fr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function Cr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function Er(e,t){if("click"===e)return mr(t)}function xr(e,t){if("input"===e||"change"===e)return mr(t)}P&&(gr=ut("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:cr,_isInputEventSupported:gr,extractEvents:function(e,t,n,r){var i=t?Mn(t):window,a=i.nodeName&&i.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===i.type)var l=vr;else if(ur(i))if(gr)l=xr;else{l=Cr;var o=wr}else(a=i.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(l=Er);if(l&&(l=l(e,t)))return dr(l,n,r);o&&o(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Pe(i,"number",i.value)}},Sr=Wn.extend({view:null,detail:null}),kr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kr[e])&&!!t[e]}function _r(){return Pr}var Mr=0,Or=0,Lr=!1,Nr=!1,zr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Mr;return Mr=e.screenX,Lr?"mousemove"===e.type?e.screenX-t:0:(Lr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Or;return Or=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),Ir=zr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ar={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Dr={eventTypes:Ar,extractEvents:function(e,t,n,r,i){var a="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(a&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!l&&!a)return null;(a=r.window===r?r:(a=r.ownerDocument)?a.defaultView||a.parentWindow:window,l)?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null;if(l===t)return null;if("mouseout"===e||"mouseover"===e)var o=zr,s=Ar.mouseLeave,u=Ar.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(o=Ir,s=Ar.pointerLeave,u=Ar.pointerEnter,c="pointer");if(e=null==l?a:Mn(l),a=null==t?a:Mn(t),(s=o.getPooled(s,l,n,r)).type=c+"leave",s.target=e,s.relatedTarget=a,(n=o.getPooled(u,t,n,r)).type=c+"enter",n.target=a,n.relatedTarget=e,c=t,(r=l)&&c)e:{for(u=c,l=0,e=o=r;e;e=Ln(e))l++;for(e=0,t=u;t;t=Ln(t))e++;for(;0<l-e;)o=Ln(o),l--;for(;0<e-l;)u=Ln(u),e--;for(;l--;){if(o===u||o===u.alternate)break e;o=Ln(o),u=Ln(u)}o=null}else o=null;for(u=o,o=[];r&&r!==u&&(null===(l=r.alternate)||l!==u);)o.push(r),r=Ln(r);for(r=[];c&&c!==u&&(null===(l=c.alternate)||l!==u);)r.push(c),c=Ln(c);for(c=0;c<o.length;c++)An(o[c],"bubbled",s);for(c=r.length;0<c--;)An(r[c],"captured",n);return 0==(64&i)?[s]:[s,n]}};var Rr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function jr(e,t){if(Rr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Rr(e[n[r]],t[n[r]]))return!1;return!0}var Br=P&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,Hr=null,Wr=null,Ur=!1;function Gr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Ur||null==$r||$r!==cn(n)?null:("selectionStart"in(n=$r)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wr&&jr(Wr,n)?null:(Wr=n,(e=Wn.getPooled(Vr.select,Hr,e,t)).type="select",e.target=$r,Rn(e),e))}var qr={eventTypes:Vr,extractEvents:function(e,t,n,r,i,a){if(!(a=!(i=a||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Ze(i),a=S.onSelect;for(var l=0;l<a.length;l++)if(!i.has(a[l])){i=!1;break e}i=!0}a=!i}if(a)return null;switch(i=t?Mn(t):window,e){case"focus":(ur(i)||"true"===i.contentEditable)&&($r=i,Hr=t,Wr=null);break;case"blur":Wr=Hr=$r=null;break;case"mousedown":Ur=!0;break;case"contextmenu":case"mouseup":case"dragend":return Ur=!1,Gr(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return Gr(n,r)}return null}},Qr=Wn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Wn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Sr.extend({relatedTarget:null});function Kr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=Sr.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Kr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Kr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Kr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=zr.extend({dataTransfer:null}),ni=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ri=Wn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=zr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ai={eventTypes:Rt,extractEvents:function(e,t,n,r){var i=Ft.get(e);if(!i)return null;switch(e){case"keypress":if(0===Kr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=zr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case Ge:case qe:case Qe:e=Qr;break;case Ye:e=ri;break;case"scroll":e=Sr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Wn}return Rn(t=e.getPooled(i,t,n,r)),t}};if(y)throw Error(l(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=On,m=_n,v=Mn,k({SimpleEventPlugin:ai,EnterLeaveEventPlugin:Dr,ChangeEventPlugin:Tr,SelectEventPlugin:qr,BeforeInputEventPlugin:or});var li=[],oi=-1;function si(e){0>oi||(e.current=li[oi],li[oi]=null,oi--)}function ui(e,t){oi++,li[oi]=e.current,e.current=t}var ci={},di={current:ci},fi={current:!1},pi=ci;function hi(e,t){var n=e.type.contextTypes;if(!n)return ci;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function mi(e){return null!=(e=e.childContextTypes)}function vi(){si(fi),si(di)}function gi(e,t,n){if(di.current!==ci)throw Error(l(168));ui(di,t),ui(fi,n)}function yi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(l(108,ve(t)||"Unknown",a));return i({},n,{},r)}function bi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ci,pi=di.current,ui(di,e),ui(fi,fi.current),!0}function wi(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=yi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,si(fi),si(di),ui(di,e)):si(fi),ui(fi,n)}var Ci=a.unstable_runWithPriority,Ei=a.unstable_scheduleCallback,xi=a.unstable_cancelCallback,Ti=a.unstable_requestPaint,Si=a.unstable_now,ki=a.unstable_getCurrentPriorityLevel,Pi=a.unstable_ImmediatePriority,_i=a.unstable_UserBlockingPriority,Mi=a.unstable_NormalPriority,Oi=a.unstable_LowPriority,Li=a.unstable_IdlePriority,Ni={},zi=a.unstable_shouldYield,Ii=void 0!==Ti?Ti:function(){},Ai=null,Di=null,Ri=!1,Fi=Si(),ji=1e4>Fi?Si:function(){return Si()-Fi};function Bi(){switch(ki()){case Pi:return 99;case _i:return 98;case Mi:return 97;case Oi:return 96;case Li:return 95;default:throw Error(l(332))}}function Vi(e){switch(e){case 99:return Pi;case 98:return _i;case 97:return Mi;case 96:return Oi;case 95:return Li;default:throw Error(l(332))}}function $i(e,t){return e=Vi(e),Ci(e,t)}function Hi(e,t,n){return e=Vi(e),Ei(e,t,n)}function Wi(e){return null===Ai?(Ai=[e],Di=Ei(Pi,Gi)):Ai.push(e),Ni}function Ui(){if(null!==Di){var e=Di;Di=null,xi(e)}Gi()}function Gi(){if(!Ri&&null!==Ai){Ri=!0;var e=0;try{var t=Ai;$i(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ai=null}catch(t){throw null!==Ai&&(Ai=Ai.slice(e+1)),Ei(Pi,Ui),t}finally{Ri=!1}}}function qi(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Qi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Yi={current:null},Xi=null,Ki=null,Zi=null;function Ji(){Zi=Ki=Xi=null}function ea(e){var t=Yi.current;si(Yi),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function na(e,t){Xi=e,Zi=Ki=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ml=!0),e.firstContext=null)}function ra(e,t){if(Zi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ki){if(null===Xi)throw Error(l(308));Ki=t,Xi.dependencies={expirationTime:0,firstContext:t,responders:null}}else Ki=Ki.next=t;return e._currentValue}var ia=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function oa(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function sa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ua(e,t){var n=e.alternate;null!==n&&la(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function ca(e,t,n,r){var a=e.updateQueue;ia=!1;var l=a.baseQueue,o=a.shared.pending;if(null!==o){if(null!==l){var s=l.next;l.next=o.next,o.next=s}l=o,a.shared.pending=null,null!==(s=e.alternate)&&(null!==(s=s.updateQueue)&&(s.baseQueue=o))}if(null!==l){s=l.next;var u=a.baseState,c=0,d=null,f=null,p=null;if(null!==s)for(var h=s;;){if((o=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(f=p=m,d=u):p=p.next=m,o>c&&(c=o)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),as(o,h.suspenseConfig);e:{var v=e,g=h;switch(o=t,m=n,g.tag){case 1:if("function"==typeof(v=g.payload)){u=v.call(m,u,o);break e}u=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(o="function"==typeof(v=g.payload)?v.call(m,u,o):v))break e;u=i({},u,o);break e;case 2:ia=!0}}null!==h.callback&&(e.effectTag|=32,null===(o=a.effects)?a.effects=[h]:o.push(h))}if(null===(h=h.next)||h===s){if(null===(o=a.shared.pending))break;h=l.next=o.next,o.next=s,a.baseQueue=l=o,a.shared.pending=null}}null===p?d=u:p.next=f,a.baseState=d,a.baseQueue=p,ls(c),e.expirationTime=c,e.memoizedState=u}}function da(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(l(191,r));r.call(i)}}}var fa=X.ReactCurrentBatchConfig,pa=(new r.Component).refs;function ha(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var ma={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Go(),i=fa.suspense;(i=oa(r=qo(r,e,i),i)).payload=t,null!=n&&(i.callback=n),sa(e,i),Qo(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Go(),i=fa.suspense;(i=oa(r=qo(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),sa(e,i),Qo(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Go(),r=fa.suspense;(r=oa(n=qo(n,e,r),r)).tag=2,null!=t&&(r.callback=t),sa(e,r),Qo(e,n)}};function va(e,t,n,r,i,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!t.prototype||!t.prototype.isPureReactComponent||(!jr(n,r)||!jr(i,a))}function ga(e,t,n){var r=!1,i=ci,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(i=mi(t)?pi:di.current,a=(r=null!=(r=t.contextTypes))?hi(e,i):ci),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ma,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ma.enqueueReplaceState(t,t.state,null)}function ba(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=pa,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?i.context=ra(a):(a=mi(t)?pi:di.current,i.context=hi(e,a)),ca(e,n,i,r),i.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ha(e,t,a,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&ma.enqueueReplaceState(i,i.state,null),ca(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var wa=Array.isArray;function Ca(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===pa&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ea(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function xa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=ks(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function o(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Ms(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=Ca(e,t,n),r.return=e,r):((r=Ps(n.type,n.key,n.props,null,e.mode,r)).ref=Ca(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Os(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=_s(n,e.mode,r,a)).return=e,t):((t=i(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ms(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Ps(t.type,t.key,t.props,null,e.mode,n)).ref=Ca(e,null,t),n.return=e,n;case te:return(t=Os(t,e.mode,n)).return=e,t}if(wa(t)||me(t))return(t=_s(t,e.mode,n,null)).return=e,t;Ea(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?d(e,t,n.props.children,r,i):u(e,t,n,r):null;case te:return n.key===i?c(e,t,n,r):null}if(wa(n)||me(n))return null!==i?null:d(e,t,n,r,null);Ea(e,n)}return null}function h(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?d(t,e,r.props.children,i,r.key):u(t,e,r,i);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(wa(r)||me(r))return d(t,e=e.get(n)||null,r,i,null);Ea(t,r)}return null}function m(i,l,o,s){for(var u=null,c=null,d=l,m=l=0,v=null;null!==d&&m<o.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var g=p(i,d,o[m],s);if(null===g){null===d&&(d=v);break}e&&d&&null===g.alternate&&t(i,d),l=a(g,l,m),null===c?u=g:c.sibling=g,c=g,d=v}if(m===o.length)return n(i,d),u;if(null===d){for(;m<o.length;m++)null!==(d=f(i,o[m],s))&&(l=a(d,l,m),null===c?u=d:c.sibling=d,c=d);return u}for(d=r(i,d);m<o.length;m++)null!==(v=h(d,i,m,o[m],s))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),l=a(v,l,m),null===c?u=v:c.sibling=v,c=v);return e&&d.forEach((function(e){return t(i,e)})),u}function v(i,o,s,u){var c=me(s);if("function"!=typeof c)throw Error(l(150));if(null==(s=c.call(s)))throw Error(l(151));for(var d=c=null,m=o,v=o=0,g=null,y=s.next();null!==m&&!y.done;v++,y=s.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(i,m,y.value,u);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(i,m),o=a(b,o,v),null===d?c=b:d.sibling=b,d=b,m=g}if(y.done)return n(i,m),c;if(null===m){for(;!y.done;v++,y=s.next())null!==(y=f(i,y.value,u))&&(o=a(y,o,v),null===d?c=y:d.sibling=y,d=y);return c}for(m=r(i,m);!y.done;v++,y=s.next())null!==(y=h(m,i,v,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),o=a(y,o,v),null===d?c=y:d.sibling=y,d=y);return e&&m.forEach((function(e){return t(i,e)})),c}return function(e,r,a,s){var u="object"==typeof a&&null!==a&&a.type===ne&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case ee:e:{for(c=a.key,u=r;null!==u;){if(u.key===c){switch(u.tag){case 7:if(a.type===ne){n(e,u.sibling),(r=i(u,a.props.children)).return=e,e=r;break e}break;default:if(u.elementType===a.type){n(e,u.sibling),(r=i(u,a.props)).ref=Ca(e,u,a),r.return=e,e=r;break e}}n(e,u);break}t(e,u),u=u.sibling}a.type===ne?((r=_s(a.props.children,e.mode,s,a.key)).return=e,e=r):((s=Ps(a.type,a.key,a.props,null,e.mode,s)).ref=Ca(e,r,a),s.return=e,e=s)}return o(e);case te:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=i(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Os(a,e.mode,s)).return=e,e=r}return o(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,a)).return=e,e=r):(n(e,r),(r=Ms(a,e.mode,s)).return=e,e=r),o(e);if(wa(a))return m(e,r,a,s);if(me(a))return v(e,r,a,s);if(c&&Ea(e,a),void 0===a&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Ta=xa(!0),Sa=xa(!1),ka={},Pa={current:ka},_a={current:ka},Ma={current:ka};function Oa(e){if(e===ka)throw Error(l(174));return e}function La(e,t){switch(ui(Ma,t),ui(_a,e),ui(Pa,ka),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}si(Pa),ui(Pa,t)}function Na(){si(Pa),si(_a),si(Ma)}function za(e){Oa(Ma.current);var t=Oa(Pa.current),n=Re(t,e.type);t!==n&&(ui(_a,e),ui(Pa,n))}function Ia(e){_a.current===e&&(si(Pa),si(_a))}var Aa={current:0};function Da(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ra(e,t){return{responder:e,props:t}}var Fa=X.ReactCurrentDispatcher,ja=X.ReactCurrentBatchConfig,Ba=0,Va=null,$a=null,Ha=null,Wa=!1;function Ua(){throw Error(l(321))}function Ga(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Rr(e[n],t[n]))return!1;return!0}function qa(e,t,n,r,i,a){if(Ba=a,Va=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Fa.current=null===e||null===e.memoizedState?vl:gl,e=n(r,i),t.expirationTime===Ba){a=0;do{if(t.expirationTime=0,!(25>a))throw Error(l(301));a+=1,Ha=$a=null,t.updateQueue=null,Fa.current=yl,e=n(r,i)}while(t.expirationTime===Ba)}if(Fa.current=ml,t=null!==$a&&null!==$a.next,Ba=0,Ha=$a=Va=null,Wa=!1,t)throw Error(l(300));return e}function Qa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ha?Va.memoizedState=Ha=e:Ha=Ha.next=e,Ha}function Ya(){if(null===$a){var e=Va.alternate;e=null!==e?e.memoizedState:null}else e=$a.next;var t=null===Ha?Va.memoizedState:Ha.next;if(null!==t)Ha=t,$a=e;else{if(null===e)throw Error(l(310));e={memoizedState:($a=e).memoizedState,baseState:$a.baseState,baseQueue:$a.baseQueue,queue:$a.queue,next:null},null===Ha?Va.memoizedState=Ha=e:Ha=Ha.next=e}return Ha}function Xa(e,t){return"function"==typeof t?t(e):t}function Ka(e){var t=Ya(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=$a,i=r.baseQueue,a=n.pending;if(null!==a){if(null!==i){var o=i.next;i.next=a.next,a.next=o}r.baseQueue=i=a,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var s=o=a=null,u=i;do{var c=u.expirationTime;if(c<Ba){var d={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(o=s=d,a=r):s=s.next=d,c>Va.expirationTime&&(Va.expirationTime=c,ls(c))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),as(c,u.suspenseConfig),r=u.eagerReducer===e?u.eagerState:e(r,u.action);u=u.next}while(null!==u&&u!==i);null===s?a=r:s.next=o,Rr(r,t.memoizedState)||(Ml=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Za(e){var t=Ya(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,a=t.memoizedState;if(null!==i){n.pending=null;var o=i=i.next;do{a=e(a,o.action),o=o.next}while(o!==i);Rr(a,t.memoizedState)||(Ml=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function Ja(e){var t=Qa();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xa,lastRenderedState:e}).dispatch=hl.bind(null,Va,e),[t.memoizedState,e]}function el(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Va.updateQueue)?(t={lastEffect:null},Va.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function tl(){return Ya().memoizedState}function nl(e,t,n,r){var i=Qa();Va.effectTag|=e,i.memoizedState=el(1|t,n,void 0,void 0===r?null:r)}function rl(e,t,n,r){var i=Ya();r=void 0===r?null:r;var a=void 0;if(null!==$a){var l=$a.memoizedState;if(a=l.destroy,null!==r&&Ga(r,l.deps))return void el(t,n,a,r)}Va.effectTag|=e,i.memoizedState=el(1|t,n,a,r)}function il(e,t){return nl(516,4,e,t)}function al(e,t){return rl(516,4,e,t)}function ll(e,t){return rl(4,2,e,t)}function ol(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function sl(e,t,n){return n=null!=n?n.concat([e]):null,rl(4,2,ol.bind(null,t,e),n)}function ul(){}function cl(e,t){return Qa().memoizedState=[e,void 0===t?null:t],e}function dl(e,t){var n=Ya();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ga(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function fl(e,t){var n=Ya();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ga(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function pl(e,t,n){var r=Bi();$i(98>r?98:r,(function(){e(!0)})),$i(97<r?97:r,(function(){var r=ja.suspense;ja.suspense=void 0===t?null:t;try{e(!1),n()}finally{ja.suspense=r}}))}function hl(e,t,n){var r=Go(),i=fa.suspense;i={expirationTime:r=qo(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var a=t.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),t.pending=i,a=e.alternate,e===Va||null!==a&&a===Va)Wa=!0,i.expirationTime=Ba,Va.expirationTime=Ba;else{if(0===e.expirationTime&&(null===a||0===a.expirationTime)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,o=a(l,n);if(i.eagerReducer=a,i.eagerState=o,Rr(o,l))return}catch(e){}Qo(e,r)}}var ml={readContext:ra,useCallback:Ua,useContext:Ua,useEffect:Ua,useImperativeHandle:Ua,useLayoutEffect:Ua,useMemo:Ua,useReducer:Ua,useRef:Ua,useState:Ua,useDebugValue:Ua,useResponder:Ua,useDeferredValue:Ua,useTransition:Ua},vl={readContext:ra,useCallback:cl,useContext:ra,useEffect:il,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,nl(4,2,ol.bind(null,t,e),n)},useLayoutEffect:function(e,t){return nl(4,2,e,t)},useMemo:function(e,t){var n=Qa();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Qa();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=hl.bind(null,Va,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Qa().memoizedState=e},useState:Ja,useDebugValue:ul,useResponder:Ra,useDeferredValue:function(e,t){var n=Ja(e),r=n[0],i=n[1];return il((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{i(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ja(!1),n=t[0];return t=t[1],[cl(pl.bind(null,t,e),[t,e]),n]}},gl={readContext:ra,useCallback:dl,useContext:ra,useEffect:al,useImperativeHandle:sl,useLayoutEffect:ll,useMemo:fl,useReducer:Ka,useRef:tl,useState:function(){return Ka(Xa)},useDebugValue:ul,useResponder:Ra,useDeferredValue:function(e,t){var n=Ka(Xa),r=n[0],i=n[1];return al((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{i(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ka(Xa),n=t[0];return t=t[1],[dl(pl.bind(null,t,e),[t,e]),n]}},yl={readContext:ra,useCallback:dl,useContext:ra,useEffect:al,useImperativeHandle:sl,useLayoutEffect:ll,useMemo:fl,useReducer:Za,useRef:tl,useState:function(){return Za(Xa)},useDebugValue:ul,useResponder:Ra,useDeferredValue:function(e,t){var n=Za(Xa),r=n[0],i=n[1];return al((function(){var n=ja.suspense;ja.suspense=void 0===t?null:t;try{i(e)}finally{ja.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Za(Xa),n=t[0];return t=t[1],[dl(pl.bind(null,t,e),[t,e]),n]}},bl=null,wl=null,Cl=!1;function El(e,t){var n=Ts(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function xl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Tl(e){if(Cl){var t=wl;if(t){var n=t;if(!xl(e,t)){if(!(t=Cn(n.nextSibling))||!xl(e,t))return e.effectTag=-1025&e.effectTag|2,Cl=!1,void(bl=e);El(bl,n)}bl=e,wl=Cn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Cl=!1,bl=e}}function Sl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;bl=e}function kl(e){if(e!==bl)return!1;if(!Cl)return Sl(e),Cl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=wl;t;)El(e,t),t=Cn(t.nextSibling);if(Sl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){wl=Cn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}wl=null}}else wl=bl?Cn(e.stateNode.nextSibling):null;return!0}function Pl(){wl=bl=null,Cl=!1}var _l=X.ReactCurrentOwner,Ml=!1;function Ol(e,t,n,r){t.child=null===e?Sa(t,null,n,r):Ta(t,e.child,n,r)}function Ll(e,t,n,r,i){n=n.render;var a=t.ref;return na(t,i),r=qa(e,t,n,r,a,i),null===e||Ml?(t.effectTag|=1,Ol(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),ql(e,t,i))}function Nl(e,t,n,r,i,a){if(null===e){var l=n.type;return"function"!=typeof l||Ss(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ps(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,zl(e,t,l,r,i,a))}return l=e.child,i<a&&(i=l.memoizedProps,(n=null!==(n=n.compare)?n:jr)(i,r)&&e.ref===t.ref)?ql(e,t,a):(t.effectTag|=1,(e=ks(l,r)).ref=t.ref,e.return=t,t.child=e)}function zl(e,t,n,r,i,a){return null!==e&&jr(e.memoizedProps,r)&&e.ref===t.ref&&(Ml=!1,i<a)?(t.expirationTime=e.expirationTime,ql(e,t,a)):Al(e,t,n,r,a)}function Il(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Al(e,t,n,r,i){var a=mi(n)?pi:di.current;return a=hi(t,a),na(t,i),n=qa(e,t,n,r,a,i),null===e||Ml?(t.effectTag|=1,Ol(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),ql(e,t,i))}function Dl(e,t,n,r,i){if(mi(n)){var a=!0;bi(t)}else a=!1;if(na(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),ga(t,n,r),ba(t,n,r,i),r=!0;else if(null===e){var l=t.stateNode,o=t.memoizedProps;l.props=o;var s=l.context,u=n.contextType;"object"==typeof u&&null!==u?u=ra(u):u=hi(t,u=mi(n)?pi:di.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;d||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(o!==r||s!==u)&&ya(t,l,r,u),ia=!1;var f=t.memoizedState;l.state=f,ca(t,r,l,i),s=t.memoizedState,o!==r||f!==s||fi.current||ia?("function"==typeof c&&(ha(t,n,c,r),s=t.memoizedState),(o=ia||va(t,n,o,r,f,s,u))?(d||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),l.props=r,l.state=s,l.context=u,r=o):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,la(e,t),o=t.memoizedProps,l.props=t.type===t.elementType?o:Qi(t.type,o),s=l.context,"object"==typeof(u=n.contextType)&&null!==u?u=ra(u):u=hi(t,u=mi(n)?pi:di.current),(d="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(o!==r||s!==u)&&ya(t,l,r,u),ia=!1,s=t.memoizedState,l.state=s,ca(t,r,l,i),f=t.memoizedState,o!==r||s!==f||fi.current||ia?("function"==typeof c&&(ha(t,n,c,r),f=t.memoizedState),(c=ia||va(t,n,o,r,s,f,u))?(d||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,f,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,f,u)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||o===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),l.props=r,l.state=f,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||o===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Rl(e,t,n,r,a,i)}function Rl(e,t,n,r,i,a){Il(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return i&&wi(t,n,!1),ql(e,t,a);r=t.stateNode,_l.current=t;var o=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Ta(t,e.child,null,a),t.child=Ta(t,null,o,a)):Ol(e,t,o,a),t.memoizedState=r.state,i&&wi(t,n,!0),t.child}function Fl(e){var t=e.stateNode;t.pendingContext?gi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&gi(0,t.context,!1),La(e,t.containerInfo)}var jl,Bl,Vl,$l={dehydrated:null,retryTime:0};function Hl(e,t,n){var r,i=t.mode,a=t.pendingProps,l=Aa.current,o=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(o=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(l|=1),ui(Aa,1&l),null===e){if(void 0!==a.fallback&&Tl(t),o){if(o=a.fallback,(a=_s(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=_s(o,i,n,null)).return=t,a.sibling=n,t.memoizedState=$l,t.child=a,n}return i=a.children,t.memoizedState=null,t.child=Sa(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,o){if(a=a.fallback,(n=ks(e,e.pendingProps)).return=t,0==(2&t.mode)&&(o=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=o;null!==o;)o.return=n,o=o.sibling;return(i=ks(i,a)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=$l,t.child=n,i}return n=Ta(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,o){if(o=a.fallback,(a=_s(null,i,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=_s(o,i,n,null)).return=t,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,t.memoizedState=$l,t.child=a,n}return t.memoizedState=null,t.child=Ta(t,e,a.children,n)}function Wl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ta(e.return,t)}function Ul(e,t,n,r,i,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=i,l.lastEffect=a)}function Gl(e,t,n){var r=t.pendingProps,i=r.revealOrder,a=r.tail;if(Ol(e,t,r.children,n),0!=(2&(r=Aa.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wl(e,n);else if(19===e.tag)Wl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ui(Aa,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===Da(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Ul(t,!1,i,n,a,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===Da(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Ul(t,!0,n,null,a,t.lastEffect);break;case"together":Ul(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ql(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ls(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=ks(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ks(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ql(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Yl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return mi(t.type)&&vi(),null;case 3:return Na(),si(fi),si(di),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!kl(t)||(t.effectTag|=4),null;case 5:Ia(t),n=Oa(Ma.current);var a=t.type;if(null!==e&&null!=t.stateNode)Bl(e,t,a,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Oa(Pa.current),kl(t)){r=t.stateNode,a=t.type;var o=t.memoizedProps;switch(r[Tn]=t,r[Sn]=o,a){case"iframe":case"object":case"embed":qt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)qt(Xe[e],r);break;case"source":qt("error",r);break;case"img":case"image":case"link":qt("error",r),qt("load",r);break;case"form":qt("reset",r),qt("submit",r);break;case"details":qt("toggle",r);break;case"input":xe(r,o),qt("invalid",r),sn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!o.multiple},qt("invalid",r),sn(n,"onChange");break;case"textarea":Le(r,o),qt("invalid",r),sn(n,"onChange")}for(var s in an(a,o),e=null,o)if(o.hasOwnProperty(s)){var u=o[s];"children"===s?"string"==typeof u?r.textContent!==u&&(e=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(e=["children",""+u]):T.hasOwnProperty(s)&&null!=u&&sn(n,s)}switch(a){case"input":we(r),ke(r,o,!0);break;case"textarea":we(r),ze(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(s=9===n.nodeType?n:n.ownerDocument,e===on&&(e=De(a)),e===on?"script"===a?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(a,{is:r.is}):(e=s.createElement(a),"select"===a&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,a),e[Tn]=t,e[Sn]=r,jl(e,t),t.stateNode=e,s=ln(a,r),a){case"iframe":case"object":case"embed":qt("load",e),u=r;break;case"video":case"audio":for(u=0;u<Xe.length;u++)qt(Xe[u],e);u=r;break;case"source":qt("error",e),u=r;break;case"img":case"image":case"link":qt("error",e),qt("load",e),u=r;break;case"form":qt("reset",e),qt("submit",e),u=r;break;case"details":qt("toggle",e),u=r;break;case"input":xe(e,r),u=Ee(e,r),qt("invalid",e),sn(n,"onChange");break;case"option":u=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},u=i({},r,{value:void 0}),qt("invalid",e),sn(n,"onChange");break;case"textarea":Le(e,r),u=Oe(e,r),qt("invalid",e),sn(n,"onChange");break;default:u=r}an(a,u);var c=u;for(o in c)if(c.hasOwnProperty(o)){var d=c[o];"style"===o?nn(e,d):"dangerouslySetInnerHTML"===o?null!=(d=d?d.__html:void 0)&&je(e,d):"children"===o?"string"==typeof d?("textarea"!==a||""!==d)&&Be(e,d):"number"==typeof d&&Be(e,""+d):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(T.hasOwnProperty(o)?null!=d&&sn(n,o):null!=d&&K(e,o,d,s))}switch(a){case"input":we(e),ke(e,r,!1);break;case"textarea":we(e),ze(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Me(e,!!r.multiple,n,!1):null!=r.defaultValue&&Me(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof u.onClick&&(e.onclick=un)}gn(a,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Vl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Oa(Ma.current),Oa(Pa.current),kl(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return si(Aa),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&kl(t):(r=null!==(a=e.memoizedState),n||null===a||null!==(a=e.child.sibling)&&(null!==(o=t.firstEffect)?(t.firstEffect=a,a.nextEffect=o):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Aa.current)?Po===wo&&(Po=Co):(Po!==wo&&Po!==Co||(Po=Eo),0!==No&&null!==To&&(zs(To,ko),Is(To,No)))),(n||r)&&(t.effectTag|=4),null);case 4:return Na(),null;case 10:return ea(t),null;case 17:return mi(t.type)&&vi(),null;case 19:if(si(Aa),null===(r=t.memoizedState))return null;if(a=0!=(64&t.effectTag),null===(o=r.rendering)){if(a)Ql(r,!1);else if(Po!==wo||null!==e&&0!=(64&e.effectTag))for(o=t.child;null!==o;){if(null!==(e=Da(o))){for(t.effectTag|=64,Ql(r,!1),null!==(a=e.updateQueue)&&(t.updateQueue=a,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)o=n,(a=r).effectTag&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(e=a.alternate)?(a.childExpirationTime=0,a.expirationTime=o,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null):(a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,o=e.dependencies,a.dependencies=null===o?null:{expirationTime:o.expirationTime,firstContext:o.firstContext,responders:o.responders}),r=r.sibling;return ui(Aa,1&Aa.current|2),t.child}o=o.sibling}}else{if(!a)if(null!==(e=Da(o))){if(t.effectTag|=64,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ql(r,!0),null===r.tail&&"hidden"===r.tailMode&&!o.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ji()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,a=!0,Ql(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(o.sibling=t.child,t.child=o):(null!==(n=r.last)?n.sibling=o:t.child=o,r.last=o)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=ji()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ji(),n.sibling=null,t=Aa.current,ui(Aa,a?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Xl(e){switch(e.tag){case 1:mi(e.type)&&vi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Na(),si(fi),si(di),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Ia(e),null;case 13:return si(Aa),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return si(Aa),null;case 4:return Na(),null;case 10:return ea(e),null;default:return null}}function Kl(e,t){return{value:e,source:t,stack:ge(t)}}jl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bl=function(e,t,n,r,a){var l=e.memoizedProps;if(l!==r){var o,s,u=t.stateNode;switch(Oa(Pa.current),e=null,n){case"input":l=Ee(u,l),r=Ee(u,r),e=[];break;case"option":l=_e(u,l),r=_e(u,r),e=[];break;case"select":l=i({},l,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":l=Oe(u,l),r=Oe(u,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(u.onclick=un)}for(o in an(n,r),n=null,l)if(!r.hasOwnProperty(o)&&l.hasOwnProperty(o)&&null!=l[o])if("style"===o)for(s in u=l[o])u.hasOwnProperty(s)&&(n||(n={}),n[s]="");else"dangerouslySetInnerHTML"!==o&&"children"!==o&&"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(T.hasOwnProperty(o)?e||(e=[]):(e=e||[]).push(o,null));for(o in r){var c=r[o];if(u=null!=l?l[o]:void 0,r.hasOwnProperty(o)&&c!==u&&(null!=c||null!=u))if("style"===o)if(u){for(s in u)!u.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in c)c.hasOwnProperty(s)&&u[s]!==c[s]&&(n||(n={}),n[s]=c[s])}else n||(e||(e=[]),e.push(o,n)),n=c;else"dangerouslySetInnerHTML"===o?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(o,c)):"children"===o?u===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(o,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&(T.hasOwnProperty(o)?(null!=c&&sn(a,o),e||u===c||(e=[])):(e=e||[]).push(o,c))}n&&(e=e||[]).push("style",n),a=e,(t.updateQueue=a)&&(t.effectTag|=4)}},Vl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Zl="function"==typeof WeakSet?WeakSet:Set;function Jl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function eo(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ys(e,t)}else t.current=null}function to(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function no(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ro(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function io(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ro(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Qi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&da(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}da(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Dt(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function ao(e,t,n){switch("function"==typeof Es&&Es(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;$i(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){ys(i,e)}}e=e.next}while(e!==r)}))}break;case 1:eo(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){ys(e,t)}}(t,n);break;case 5:eo(t);break;case 4:uo(e,t,n)}}function lo(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&lo(t)}function oo(e){return 5===e.tag||3===e.tag||4===e.tag}function so(e){e:{for(var t=e.return;null!==t;){if(oo(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Be(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||oo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=un));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,a=5===i||6===i;if(a)t=a?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function uo(e,t,n){for(var r,i,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(r=o.stateNode,o.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var s=e,u=a,c=n,d=u;;)if(ao(s,d,c),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break e;for(;null===d.sibling;){if(null===d.return||d.return===u)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}i?(s=r,u=a.stateNode,8===s.nodeType?s.parentNode.removeChild(u):s.removeChild(u)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,i=!0,a.child.return=a,a=a.child;continue}}else if(ao(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function co(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void no(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),ln(e,i),t=ln(e,r),i=0;i<a.length;i+=2){var o=a[i],s=a[i+1];"style"===o?nn(n,s):"dangerouslySetInnerHTML"===o?je(n,s):"children"===o?Be(n,s):K(n,o,s,t)}switch(e){case"input":Se(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Me(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Me(n,!!r.multiple,r.defaultValue,!0):Me(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Dt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Io=ji()),null!==n)e:for(e=n;;){if(5===e.tag)a=e.stateNode,r?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,a.style.display=tn("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void fo(t);case 19:return void fo(t);case 17:return}throw Error(l(163))}function fo(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zl),t.forEach((function(t){var r=ws.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var po="function"==typeof WeakMap?WeakMap:Map;function ho(e,t,n){(n=oa(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Do||(Do=!0,Ro=r),Jl(e,t)},n}function mo(e,t,n){(n=oa(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return Jl(e,t),r(i)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fo?Fo=new Set([this]):Fo.add(this),Jl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vo,go=Math.ceil,yo=X.ReactCurrentDispatcher,bo=X.ReactCurrentOwner,wo=0,Co=3,Eo=4,xo=0,To=null,So=null,ko=0,Po=wo,_o=null,Mo=1073741823,Oo=1073741823,Lo=null,No=0,zo=!1,Io=0,Ao=null,Do=!1,Ro=null,Fo=null,jo=!1,Bo=null,Vo=90,$o=null,Ho=0,Wo=null,Uo=0;function Go(){return 0!=(48&xo)?1073741821-(ji()/10|0):0!==Uo?Uo:Uo=1073741821-(ji()/10|0)}function qo(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Bi();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&xo))return ko;if(null!==n)e=qi(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=qi(e,150,100);break;case 97:case 96:e=qi(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==To&&e===ko&&--e,e}function Qo(e,t){if(50<Ho)throw Ho=0,Wo=null,Error(l(185));if(null!==(e=Yo(e,t))){var n=Bi();1073741823===t?0!=(8&xo)&&0==(48&xo)?Jo(e):(Ko(e),0===xo&&Ui()):Ko(e),0==(4&xo)||98!==n&&99!==n||(null===$o?$o=new Map([[e,t]]):(void 0===(n=$o.get(e))||n>t)&&$o.set(e,t))}}function Yo(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(To===i&&(ls(t),Po===Eo&&zs(i,ko)),Is(i,t)),i}function Xo(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ns(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ko(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Wi(Jo.bind(null,e));else{var t=Xo(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Go();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ni&&xi(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Wi(Jo.bind(null,e)):Hi(r,Zo.bind(null,e),{timeout:10*(1073741821-t)-ji()}),e.callbackNode=t}}}function Zo(e,t){if(Uo=0,t)return As(e,t=Go()),Ko(e),null;var n=Xo(e);if(0!==n){if(t=e.callbackNode,0!=(48&xo))throw Error(l(327));if(ms(),e===To&&n===ko||ns(e,n),null!==So){var r=xo;xo|=16;for(var i=is();;)try{ss();break}catch(t){rs(e,t)}if(Ji(),xo=r,yo.current=i,1===Po)throw t=_o,ns(e,n),zs(e,n),Ko(e),t;if(null===So)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Po,To=null,r){case wo:case 1:throw Error(l(345));case 2:As(e,2<n?2:n);break;case Co:if(zs(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(i)),1073741823===Mo&&10<(i=Io+500-ji())){if(zo){var a=e.lastPingedTime;if(0===a||a>=n){e.lastPingedTime=n,ns(e,n);break}}if(0!==(a=Xo(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(fs.bind(null,e),i);break}fs(e);break;case Eo:if(zs(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(i)),zo&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,ns(e,n);break}if(0!==(i=Xo(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Oo?r=10*(1073741821-Oo)-ji():1073741823===Mo?r=0:(r=10*(1073741821-Mo)-5e3,0>(r=(i=ji())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*go(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(fs.bind(null,e),r);break}fs(e);break;case 5:if(1073741823!==Mo&&null!==Lo){a=Mo;var o=Lo;if(0>=(r=0|o.busyMinDurationMs)?r=0:(i=0|o.busyDelayMs,r=(a=ji()-(10*(1073741821-a)-(0|o.timeoutMs||5e3)))<=i?0:i+r-a),10<r){zs(e,n),e.timeoutHandle=bn(fs.bind(null,e),r);break}}fs(e);break;default:throw Error(l(329))}if(Ko(e),e.callbackNode===t)return Zo.bind(null,e)}}return null}function Jo(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&xo))throw Error(l(327));if(ms(),e===To&&t===ko||ns(e,t),null!==So){var n=xo;xo|=16;for(var r=is();;)try{os();break}catch(t){rs(e,t)}if(Ji(),xo=n,yo.current=r,1===Po)throw n=_o,ns(e,t),zs(e,t),Ko(e),n;if(null!==So)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,To=null,fs(e),Ko(e)}return null}function es(e,t){var n=xo;xo|=1;try{return e(t)}finally{0===(xo=n)&&Ui()}}function ts(e,t){var n=xo;xo&=-2,xo|=8;try{return e(t)}finally{0===(xo=n)&&Ui()}}function ns(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==So)for(n=So.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vi();break;case 3:Na(),si(fi),si(di);break;case 5:Ia(r);break;case 4:Na();break;case 13:case 19:si(Aa);break;case 10:ea(r)}n=n.return}To=e,So=ks(e.current,null),ko=t,Po=wo,_o=null,Oo=Mo=1073741823,Lo=null,No=0,zo=!1}function rs(e,t){for(;;){try{if(Ji(),Fa.current=ml,Wa)for(var n=Va.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ba=0,Ha=$a=Va=null,Wa=!1,null===So||null===So.return)return Po=1,_o=t,So=null;e:{var i=e,a=So.return,l=So,o=t;if(t=ko,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==o&&"object"==typeof o&&"function"==typeof o.then){var s=o;if(0==(2&l.mode)){var u=l.alternate;u?(l.updateQueue=u.updateQueue,l.memoizedState=u.memoizedState,l.expirationTime=u.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var c=0!=(1&Aa.current),d=a;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var h=d.memoizedProps;f=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(f){var m=d.updateQueue;if(null===m){var v=new Set;v.add(s),d.updateQueue=v}else m.add(s);if(0==(2&d.mode)){if(d.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=oa(1073741823,null);g.tag=2,sa(l,g)}l.expirationTime=1073741823;break e}o=void 0,l=t;var y=i.pingCache;if(null===y?(y=i.pingCache=new po,o=new Set,y.set(s,o)):void 0===(o=y.get(s))&&(o=new Set,y.set(s,o)),!o.has(l)){o.add(l);var b=bs.bind(null,i,s,l);s.then(b,b)}d.effectTag|=4096,d.expirationTime=t;break e}d=d.return}while(null!==d);o=Error((ve(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}5!==Po&&(Po=2),o=Kl(o,l),d=a;do{switch(d.tag){case 3:s=o,d.effectTag|=4096,d.expirationTime=t,ua(d,ho(d,s,t));break e;case 1:s=o;var w=d.type,C=d.stateNode;if(0==(64&d.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==C&&"function"==typeof C.componentDidCatch&&(null===Fo||!Fo.has(C)))){d.effectTag|=4096,d.expirationTime=t,ua(d,mo(d,s,t));break e}}d=d.return}while(null!==d)}So=cs(So)}catch(e){t=e;continue}break}}function is(){var e=yo.current;return yo.current=ml,null===e?ml:e}function as(e,t){e<Mo&&2<e&&(Mo=e),null!==t&&e<Oo&&2<e&&(Oo=e,Lo=t)}function ls(e){e>No&&(No=e)}function os(){for(;null!==So;)So=us(So)}function ss(){for(;null!==So&&!zi();)So=us(So)}function us(e){var t=vo(e.alternate,e,ko);return e.memoizedProps=e.pendingProps,null===t&&(t=cs(e)),bo.current=null,t}function cs(e){So=e;do{var t=So.alternate;if(e=So.return,0==(2048&So.effectTag)){if(t=Yl(t,So,ko),1===ko||1!==So.childExpirationTime){for(var n=0,r=So.child;null!==r;){var i=r.expirationTime,a=r.childExpirationTime;i>n&&(n=i),a>n&&(n=a),r=r.sibling}So.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=So.firstEffect),null!==So.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=So.firstEffect),e.lastEffect=So.lastEffect),1<So.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=So:e.firstEffect=So,e.lastEffect=So))}else{if(null!==(t=Xl(So)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=So.sibling))return t;So=e}while(null!==So);return Po===wo&&(Po=5),null}function ds(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function fs(e){var t=Bi();return $i(99,ps.bind(null,e,t)),null}function ps(e,t){do{ms()}while(null!==Bo);if(0!=(48&xo))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=ds(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===To&&(So=To=null,ko=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var a=xo;xo|=32,bo.current=null,mn=Gt;var o=pn();if(hn(o)){if("selectionStart"in o)var s={start:o.selectionStart,end:o.selectionEnd};else e:{var u=(s=(s=o.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(u&&0!==u.rangeCount){s=u.anchorNode;var c=u.anchorOffset,d=u.focusNode;u=u.focusOffset;try{s.nodeType,d.nodeType}catch(e){s=null;break e}var f=0,p=-1,h=-1,m=0,v=0,g=o,y=null;t:for(;;){for(var b;g!==s||0!==c&&3!==g.nodeType||(p=f+c),g!==d||0!==u&&3!==g.nodeType||(h=f+u),3===g.nodeType&&(f+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===o)break t;if(y===s&&++m===c&&(p=f),y===d&&++v===u&&(h=f),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}s=-1===p||-1===h?null:{start:p,end:h}}else s=null}s=s||{start:0,end:0}}else s=null;vn={activeElementDetached:null,focusedElem:o,selectionRange:s},Gt=!1,Ao=i;do{try{hs()}catch(e){if(null===Ao)throw Error(l(330));ys(Ao,e),Ao=Ao.nextEffect}}while(null!==Ao);Ao=i;do{try{for(o=e,s=t;null!==Ao;){var w=Ao.effectTag;if(16&w&&Be(Ao.stateNode,""),128&w){var C=Ao.alternate;if(null!==C){var E=C.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&w){case 2:so(Ao),Ao.effectTag&=-3;break;case 6:so(Ao),Ao.effectTag&=-3,co(Ao.alternate,Ao);break;case 1024:Ao.effectTag&=-1025;break;case 1028:Ao.effectTag&=-1025,co(Ao.alternate,Ao);break;case 4:co(Ao.alternate,Ao);break;case 8:uo(o,c=Ao,s),lo(c)}Ao=Ao.nextEffect}}catch(e){if(null===Ao)throw Error(l(330));ys(Ao,e),Ao=Ao.nextEffect}}while(null!==Ao);if(E=vn,C=pn(),w=E.focusedElem,s=E.selectionRange,C!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==s&&hn(w)&&(C=s.start,void 0===(E=s.end)&&(E=C),"selectionStart"in w?(w.selectionStart=C,w.selectionEnd=Math.min(E,w.value.length)):(E=(C=w.ownerDocument||document)&&C.defaultView||window).getSelection&&(E=E.getSelection(),c=w.textContent.length,o=Math.min(s.start,c),s=void 0===s.end?o:Math.min(s.end,c),!E.extend&&o>s&&(c=s,s=o,o=c),c=fn(w,o),d=fn(w,s),c&&d&&(1!==E.rangeCount||E.anchorNode!==c.node||E.anchorOffset!==c.offset||E.focusNode!==d.node||E.focusOffset!==d.offset)&&((C=C.createRange()).setStart(c.node,c.offset),E.removeAllRanges(),o>s?(E.addRange(C),E.extend(d.node,d.offset)):(C.setEnd(d.node,d.offset),E.addRange(C))))),C=[];for(E=w;E=E.parentNode;)1===E.nodeType&&C.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<C.length;w++)(E=C[w]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Gt=!!mn,vn=mn=null,e.current=n,Ao=i;do{try{for(w=e;null!==Ao;){var x=Ao.effectTag;if(36&x&&io(w,Ao.alternate,Ao),128&x){C=void 0;var T=Ao.ref;if(null!==T){var S=Ao.stateNode;switch(Ao.tag){case 5:C=S;break;default:C=S}"function"==typeof T?T(C):T.current=C}}Ao=Ao.nextEffect}}catch(e){if(null===Ao)throw Error(l(330));ys(Ao,e),Ao=Ao.nextEffect}}while(null!==Ao);Ao=null,Ii(),xo=a}else e.current=n;if(jo)jo=!1,Bo=e,Vo=t;else for(Ao=i;null!==Ao;)t=Ao.nextEffect,Ao.nextEffect=null,Ao=t;if(0===(t=e.firstPendingTime)&&(Fo=null),1073741823===t?e===Wo?Ho++:(Ho=0,Wo=e):Ho=0,"function"==typeof Cs&&Cs(n.stateNode,r),Ko(e),Do)throw Do=!1,e=Ro,Ro=null,e;return 0!=(8&xo)||Ui(),null}function hs(){for(;null!==Ao;){var e=Ao.effectTag;0!=(256&e)&&to(Ao.alternate,Ao),0==(512&e)||jo||(jo=!0,Hi(97,(function(){return ms(),null}))),Ao=Ao.nextEffect}}function ms(){if(90!==Vo){var e=97<Vo?97:Vo;return Vo=90,$i(e,vs)}}function vs(){if(null===Bo)return!1;var e=Bo;if(Bo=null,0!=(48&xo))throw Error(l(331));var t=xo;for(xo|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:no(5,n),ro(5,n)}}catch(t){if(null===e)throw Error(l(330));ys(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return xo=t,Ui(),!0}function gs(e,t,n){sa(e,t=ho(e,t=Kl(n,t),1073741823)),null!==(e=Yo(e,1073741823))&&Ko(e)}function ys(e,t){if(3===e.tag)gs(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){gs(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fo||!Fo.has(r))){sa(n,e=mo(n,e=Kl(t,e),1073741823)),null!==(n=Yo(n,1073741823))&&Ko(n);break}}n=n.return}}function bs(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),To===e&&ko===n?Po===Eo||Po===Co&&1073741823===Mo&&ji()-Io<500?ns(e,ko):zo=!0:Ns(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ko(e)))}function ws(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=qo(t=Go(),e,null)),null!==(e=Yo(e,t))&&Ko(e)}vo=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||fi.current)Ml=!0;else{if(r<n){switch(Ml=!1,t.tag){case 3:Fl(t),Pl();break;case 5:if(za(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:mi(t.type)&&bi(t);break;case 4:La(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ui(Yi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Hl(e,t,n):(ui(Aa,1&Aa.current),null!==(t=ql(e,t,n))?t.sibling:null);ui(Aa,1&Aa.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Gl(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ui(Aa,Aa.current),!r)return null}return ql(e,t,n)}Ml=!1}}else Ml=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=hi(t,di.current),na(t,n),i=qa(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,mi(r)){var a=!0;bi(t)}else a=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,aa(t);var o=r.getDerivedStateFromProps;"function"==typeof o&&ha(t,r,o,e),i.updater=ma,t.stateNode=i,i._reactInternalFiber=t,ba(t,r,e,n),t=Rl(null,t,r,!0,a,n)}else t.tag=0,Ol(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,a=t.tag=function(e){if("function"==typeof e)return Ss(e)?1:0;if(null!=e){if((e=e.$$typeof)===se)return 11;if(e===de)return 14}return 2}(i),e=Qi(i,e),a){case 0:t=Al(null,t,i,e,n);break e;case 1:t=Dl(null,t,i,e,n);break e;case 11:t=Ll(null,t,i,e,n);break e;case 14:t=Nl(null,t,i,Qi(i.type,e),r,n);break e}throw Error(l(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Al(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 1:return r=t.type,i=t.pendingProps,Dl(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 3:if(Fl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,la(e,t),ca(t,r,null,n),(r=t.memoizedState.element)===i)Pl(),t=ql(e,t,n);else{if((i=t.stateNode.hydrate)&&(wl=Cn(t.stateNode.containerInfo.firstChild),bl=t,i=Cl=!0),i)for(n=Sa(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ol(e,t,r,n),Pl();t=t.child}return t;case 5:return za(t),null===e&&Tl(t),r=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,o=i.children,yn(r,i)?o=null:null!==a&&yn(r,a)&&(t.effectTag|=16),Il(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ol(e,t,o,n),t=t.child),t;case 6:return null===e&&Tl(t),null;case 13:return Hl(e,t,n);case 4:return La(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ta(t,null,r,n):Ol(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Ll(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 7:return Ol(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ol(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,o=t.memoizedProps,a=i.value;var s=t.type._context;if(ui(Yi,s._currentValue),s._currentValue=a,null!==o)if(s=o.value,0===(a=Rr(s,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823))){if(o.children===i.children&&!fi.current){t=ql(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.dependencies;if(null!==u){o=s.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===s.tag&&((c=oa(n,null)).tag=2,sa(s,c)),s.expirationTime<n&&(s.expirationTime=n),null!==(c=s.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ta(s.return,n),u.expirationTime<n&&(u.expirationTime=n);break}c=c.next}}else o=10===s.tag&&s.type===t.type?null:s.child;if(null!==o)o.return=s;else for(o=s;null!==o;){if(o===t){o=null;break}if(null!==(s=o.sibling)){s.return=o.return,o=s;break}o=o.return}s=o}Ol(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(i=ra(i,a.unstable_observedBits)),t.effectTag|=1,Ol(e,t,r,n),t.child;case 14:return a=Qi(i=t.type,t.pendingProps),Nl(e,t,i,a=Qi(i.type,a),r,n);case 15:return zl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Qi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,mi(r)?(e=!0,bi(t)):e=!1,na(t,n),ga(t,r,i),ba(t,r,i,n),Rl(null,t,r,!0,e,n);case 19:return Gl(e,t,n)}throw Error(l(156,t.tag))};var Cs=null,Es=null;function xs(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Ts(e,t,n,r){return new xs(e,t,n,r)}function Ss(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ks(e,t){var n=e.alternate;return null===n?((n=Ts(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ps(e,t,n,r,i,a){var o=2;if(r=e,"function"==typeof e)Ss(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case ne:return _s(n.children,i,a,t);case oe:o=8,i|=7;break;case re:o=8,i|=1;break;case ie:return(e=Ts(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=a,e;case ue:return(e=Ts(13,n,t,i)).type=ue,e.elementType=ue,e.expirationTime=a,e;case ce:return(e=Ts(19,n,t,i)).elementType=ce,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ae:o=10;break e;case le:o=9;break e;case se:o=11;break e;case de:o=14;break e;case fe:o=16,r=null;break e;case pe:o=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Ts(o,n,t,i)).elementType=e,t.type=r,t.expirationTime=a,t}function _s(e,t,n,r){return(e=Ts(7,e,r,t)).expirationTime=n,e}function Ms(e,t,n){return(e=Ts(6,e,null,t)).expirationTime=n,e}function Os(e,t,n){return(t=Ts(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ls(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ns(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function zs(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Is(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function As(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ds(e,t,n,r){var i=t.current,a=Go(),o=fa.suspense;a=qo(a,i,o);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(mi(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(l(171))}if(1===n.tag){var u=n.type;if(mi(u)){n=yi(n,u,s);break e}}n=s}else n=ci;return null===t.context?t.context=n:t.pendingContext=n,(t=oa(a,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),sa(i,t),Qo(i,a),a}function Rs(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fs(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function js(e,t){Fs(e,t),(e=e.alternate)&&Fs(e,t)}function Bs(e,t,n){var r=new Ls(e,t,n=null!=n&&!0===n.hydrate),i=Ts(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,aa(i),e[kn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);kt.forEach((function(e){ht(e,t,n)})),Pt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Vs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $s(e,t,n,r,i){var a=n._reactRootContainer;if(a){var l=a._internalRoot;if("function"==typeof i){var o=i;i=function(){var e=Rs(l);o.call(e)}}Ds(t,l,e,i)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Bs(e,0,t?{hydrate:!0}:void 0)}(n,r),l=a._internalRoot,"function"==typeof i){var s=i;i=function(){var e=Rs(l);s.call(e)}}ts((function(){Ds(t,l,e,i)}))}return Rs(l)}function Hs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ws(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Vs(t))throw Error(l(200));return Hs(e,t,null,n)}Bs.prototype.render=function(e){Ds(e,this._internalRoot,null,null)},Bs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ds(null,e,null,(function(){t[kn]=null}))},mt=function(e){if(13===e.tag){var t=qi(Go(),150,100);Qo(e,t),js(e,t)}},vt=function(e){13===e.tag&&(Qo(e,3),js(e,3))},gt=function(e){if(13===e.tag){var t=Go();Qo(e,t=qo(t,e,null)),js(e,t)}},_=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=On(r);if(!i)throw Error(l(90));Ce(r),Se(r,i)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Me(e,!!n.multiple,t,!1)}},I=es,A=function(e,t,n,r,i){var a=xo;xo|=4;try{return $i(98,e.bind(null,t,n,r,i))}finally{0===(xo=a)&&Ui()}},D=function(){0==(49&xo)&&(function(){if(null!==$o){var e=$o;$o=null,e.forEach((function(e,t){As(t,e),Ko(t)})),Ui()}}(),ms())},R=function(e,t){var n=xo;xo|=2;try{return e(t)}finally{0===(xo=n)&&Ui()}};var Us,Gs,qs={Events:[_n,Mn,On,k,x,Rn,function(e){it(e,Dn)},N,z,Kt,ot,ms,{current:!1}]};Gs=(Us={findFiberByHostInstance:Pn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Cs=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Es=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Us,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Gs?Gs(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=qs,t.createPortal=Ws,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&xo))throw Error(l(187));var n=xo;xo|=1;try{return $i(99,e.bind(null,t))}finally{xo=n,Ui()}},t.hydrate=function(e,t,n){if(!Vs(t))throw Error(l(200));return $s(null,e,t,!0,n)},t.render=function(e,t,n){if(!Vs(t))throw Error(l(200));return $s(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Vs(e))throw Error(l(40));return!!e._reactRootContainer&&(ts((function(){$s(null,null,e,!1,(function(){e._reactRootContainer=null,e[kn]=null}))})),!0)},t.unstable_batchedUpdates=es,t.unstable_createPortal=function(e,t){return Ws(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Vs(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return $s(e,t,n,!1,r)},t.version="16.14.0"},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,a,l,o;if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,u=null,c=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(c,0),e}},d=Date.now();t.unstable_now=function(){return Date.now()-d},r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(c,0))},i=function(e,t){u=setTimeout(e,t)},a=function(){clearTimeout(u)},l=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var g=p.now();t.unstable_now=function(){return p.now()-g}}var y=!1,b=null,w=-1,C=5,E=0;l=function(){return t.unstable_now()>=E},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):C=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,T=x.port2;x.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();E=e+C;try{b(!0,e)?T.postMessage(null):(y=!1,b=null)}catch(e){throw T.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,T.postMessage(null))},i=function(e,n){w=h((function(){e(t.unstable_now())}),n)},a=function(){m(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<_(i,t)))break e;e[r]=t,e[n]=i,n=r}}function k(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var a=2*(r+1)-1,l=e[a],o=a+1,s=e[o];if(void 0!==l&&0>_(l,n))void 0!==s&&0>_(s,l)?(e[r]=s,e[o]=n,r=o):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==s&&0>_(s,n)))break e;e[r]=s,e[o]=n,r=o}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var M=[],O=[],L=1,N=null,z=3,I=!1,A=!1,D=!1;function R(e){for(var t=k(O);null!==t;){if(null===t.callback)P(O);else{if(!(t.startTime<=e))break;P(O),t.sortIndex=t.expirationTime,S(M,t)}t=k(O)}}function F(e){if(D=!1,R(e),!A)if(null!==k(M))A=!0,r(j);else{var t=k(O);null!==t&&i(F,t.startTime-e)}}function j(e,n){A=!1,D&&(D=!1,a()),I=!0;var r=z;try{for(R(n),N=k(M);null!==N&&(!(N.expirationTime>n)||e&&!l());){var o=N.callback;if(null!==o){N.callback=null,z=N.priorityLevel;var s=o(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?N.callback=s:N===k(M)&&P(M),R(n)}else P(M);N=k(M)}if(null!==N)var u=!0;else{var c=k(O);null!==c&&i(F,c.startTime-n),u=!1}return u}finally{N=null,z=r,I=!1}}function B(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var V=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||I||(A=!0,r(j))},t.unstable_getCurrentPriorityLevel=function(){return z},t.unstable_getFirstCallbackNode=function(){return k(M)},t.unstable_next=function(e){switch(z){case 1:case 2:case 3:var t=3;break;default:t=z}var n=z;z=t;try{return e()}finally{z=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=V,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=z;z=e;try{return t()}finally{z=n}},t.unstable_scheduleCallback=function(e,n,l){var o=t.unstable_now();if("object"==typeof l&&null!==l){var s=l.delay;s="number"==typeof s&&0<s?o+s:o,l="number"==typeof l.timeout?l.timeout:B(e)}else l=B(e),s=o;return e={id:L++,callback:n,priorityLevel:e,startTime:s,expirationTime:l=s+l,sortIndex:-1},s>o?(e.sortIndex=s,S(O,e),null===k(M)&&e===k(O)&&(D?a():D=!0,i(F,s-o))):(e.sortIndex=l,S(M,e),A||I||(A=!0,r(j))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();R(e);var n=k(M);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=z;return function(){var n=z;z=t;try{return e.apply(this,arguments)}finally{z=n}}}},function(e,t,n){e.exports=n(15)()},function(e,t,n){"use strict";var r=n(16);function i(){}function a(){}a.resetWarningCache=i,e.exports=function(){function e(e,t,n,i,a,l){if(l!==r){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:i};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,o=r?Symbol.for("react.strict_mode"):60108,s=r?Symbol.for("react.profiler"):60114,u=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,d=r?Symbol.for("react.async_mode"):60111,f=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,C=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case d:case f:case l:case s:case o:case h:return e;default:switch(e=e&&e.$$typeof){case c:case p:case g:case v:case u:return e;default:return t}}case a:return t}}}function x(e){return E(e)===f}t.AsyncMode=d,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=i,t.ForwardRef=p,t.Fragment=l,t.Lazy=g,t.Memo=v,t.Portal=a,t.Profiler=s,t.StrictMode=o,t.Suspense=h,t.isAsyncMode=function(e){return x(e)||E(e)===d},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===c},t.isContextProvider=function(e){return E(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return E(e)===p},t.isFragment=function(e){return E(e)===l},t.isLazy=function(e){return E(e)===g},t.isMemo=function(e){return E(e)===v},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===s},t.isStrictMode=function(e){return E(e)===o},t.isSuspense=function(e){return E(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===s||e===o||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===u||e.$$typeof===c||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===C||e.$$typeof===y)},t.typeOf=E},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(1),l=n.n(a),o=(n(14),i.a.createContext(null));var s=function(e){e()},u={notify:function(){}};function c(){var e=s,t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,i=n={callback:e,next:null,prev:n};return i.prev?i.prev.next=i:t=i,function(){r&&null!==t&&(r=!1,i.next?i.next.prev=i.prev:n=i.prev,i.prev?i.prev.next=i.next:t=i.next)}}}}var d=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=u,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=c())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=u)},e}();var f=function(e){var t=e.store,n=e.context,a=e.children,l=Object(r.useMemo)((function(){var e=new d(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),s=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=l.subscription;return e.trySubscribe(),s!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[l,s]);var u=n||o;return i.a.createElement(u.Provider,{value:l},a)};n(4),n(3),"undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;var p=n(5),h=function(){return Math.random().toString(36).substring(7).split("").join(".")},m={INIT:"@@redux/INIT"+h(),REPLACE:"@@redux/REPLACE"+h(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+h()}};function v(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}var g;g=a.unstable_batchedUpdates,s=g;n(20);const y=[{id:1,text:"Возможность получать доход выше, чем по вкладу",image:i.a.createElement("svg",{width:"48",height:"56",viewBox:"0 0 48 56",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M23.3008 3.03389C22.8298 2.92995 22.3185 3.0651 21.9525 3.43934L7.42968 18.2886C6.85677 18.8744 6.85677 19.8241 7.42968 20.4099C8.00259 20.9957 8.93146 20.9957 9.50437 20.4099L21.4619 8.18361V37.533C21.4619 38.3432 22.1187 39 22.9289 39C23.7392 39 24.396 38.3432 24.396 37.533V8.04226L36.4961 20.4143C37.069 21.0001 37.9978 21.0001 38.5708 20.4143C39.1437 19.8285 39.1437 18.8788 38.5708 18.293L24.0479 3.44375C23.8357 3.22672 23.5745 3.0901 23.3008 3.03389ZM3.5 48C2.67157 48 2 48.6716 2 49.5C2 50.3284 2.67157 51 3.5 51H42.5C43.3284 51 44 50.3284 44 49.5C44 48.6716 43.3284 48 42.5 48H3.5Z",fill:"black"}))},{id:2,text:"Фиксированный срок инвестирования",image:i.a.createElement("svg",{width:"48",height:"56",viewBox:"0 0 48 56",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M43.5 6V21.7962C43.5 29.1047 40.0997 35.9972 34.3001 40.4445L23 49.1097L11.6999 40.4445C5.90032 35.9972 2.5 29.1047 2.5 21.7962V6C2.5 5.17157 3.17157 4.5 4 4.5H42C42.8284 4.5 43.5 5.17157 43.5 6Z",stroke:"black",strokeWidth:"3"}))},{id:3,text:"Получите +13% к инвестициям ежегодно",image:i.a.createElement("svg",{width:"48",height:"56",viewBox:"0 0 48 56",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("rect",{width:"2.96721",height:"54.9919",rx:"1.48361",transform:"matrix(0.699206 0.714921 -0.699206 0.714921 40.4512 7)",fill:"black"}),i.a.createElement("circle",{cx:"10.5",cy:"15.8447",r:"7",stroke:"black",strokeWidth:"3"}),i.a.createElement("circle",{cx:"34.5",cy:"39.8447",r:"7",stroke:"black",strokeWidth:"3"}))},{id:4,text:"Все инвестиции онлайн в одном приложении",image:i.a.createElement("svg",{width:"48",height:"56",viewBox:"0 0 48 56",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("rect",{x:"3.5",y:"5.5",width:"29",height:"45",rx:"2.5",stroke:"black",strokeWidth:"3"}),i.a.createElement("rect",{x:"11",y:"40",width:"14",height:"3",rx:"1.5",fill:"black"}))}];var b=()=>{const e=y.map(({id:e,text:t,image:n})=>i.a.createElement("div",{key:e,className:"offers__column"},i.a.createElement("div",{className:"offers__icon-wrap"},i.a.createElement("div",{className:"offers__icon-image"},n)),i.a.createElement("div",{className:"offers__text-wrap"},i.a.createElement("span",{className:"offers__text"},t))));return i.a.createElement("div",{className:"offers"},i.a.createElement("div",{className:"wrap"},i.a.createElement("div",{className:"offers__wrap"},e)))};function w(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function C(e,t){Object.keys(t).forEach((function(n){void 0===e[n]?e[n]=t[n]:w(t[n])&&w(e[n])&&Object.keys(t[n]).length>0?C(e[n],t[n]):e[n]=t[n]}))}function E(e){return void 0===e&&(e={}),e.navigation&&void 0===e.navigation.nextEl&&void 0===e.navigation.prevEl}function x(e){return void 0===e&&(e={}),e.pagination&&void 0===e.pagination.el}function T(e){return void 0===e&&(e={}),e.scrollbar&&void 0===e.scrollbar.el}function S(e){void 0===e&&(e="");var t=e.split(" ").map((function(e){return e.trim()})).filter((function(e){return!!e})),n=[];return t.forEach((function(e){n.indexOf(e)<0&&n.push(e)})),n.join(" ")}function k(e,t){return"undefined"==typeof window?Object(r.useEffect)(e,t):Object(r.useLayoutEffect)(e,t)}function P(){return(P=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var _=Object(r.forwardRef)((function(e,t){var n,a=void 0===e?{}:e,l=a.tag,o=void 0===l?"div":l,s=a.children,u=a.className,c=void 0===u?"":u,d=a.swiper,f=a.zoom,p=a.virtualIndex,h=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(a,["tag","children","className","swiper","zoom","virtualIndex"]),m=Object(r.useRef)(null),v=Object(r.useState)("swiper-slide"),g=v[0],y=v[1];function b(e,t,n){t===m.current&&y(n)}k((function(){if(t&&(t.current=m.current),m.current&&d){if(!d.destroyed)return d.on("_slideClass",b),function(){d&&d.off("_slideClass",b)};"swiper-slide"!==g&&y("swiper-slide")}})),k((function(){d&&m.current&&y(d.getSlideClasses(m.current))}),[d]),"function"==typeof s&&(n={isActive:g.indexOf("swiper-slide-active")>=0||g.indexOf("swiper-slide-duplicate-active")>=0,isVisible:g.indexOf("swiper-slide-visible")>=0,isDuplicate:g.indexOf("swiper-slide-duplicate")>=0,isPrev:g.indexOf("swiper-slide-prev")>=0||g.indexOf("swiper-slide-duplicate-prev")>=0,isNext:g.indexOf("swiper-slide-next")>=0||g.indexOf("swiper-slide-duplicate-next")>=0});var w=function(){return"function"==typeof s?s(n):s};return i.a.createElement(o,P({ref:m,className:S(g+(c?" "+c:"")),"data-swiper-slide-index":p},h),f?i.a.createElement("div",{className:"swiper-zoom-container","data-swiper-zoom":"number"==typeof f?f:void 0},w()):w())}));function M(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function O(e,t){void 0===e&&(e={}),void 0===t&&(t={}),Object.keys(t).forEach((function(n){void 0===e[n]?e[n]=t[n]:M(t[n])&&M(e[n])&&Object.keys(t[n]).length>0&&O(e[n],t[n])}))}_.displayName="SwiperSlide";var L={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function N(){var e="undefined"!=typeof document?document:{};return O(e,L),e}var z={document:L,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function I(){var e="undefined"!=typeof window?window:{};return O(e,z),e}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function D(e,t){return(D=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function R(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function F(e,t,n){return(F=R()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&D(i,n.prototype),i}).apply(null,arguments)}function j(e){var t="function"==typeof Map?new Map:void 0;return(j=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return F(e,arguments,A(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),D(r,e)})(e)}var B=function(e){var t,n;function r(t){var n,r,i;return n=e.call.apply(e,[this].concat(t))||this,r=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(n),i=r.__proto__,Object.defineProperty(r,"__proto__",{get:function(){return i},set:function(e){i.__proto__=e}}),n}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r}(j(Array));function V(e){void 0===e&&(e=[]);var t=[];return e.forEach((function(e){Array.isArray(e)?t.push.apply(t,V(e)):t.push(e)})),t}function $(e,t){return Array.prototype.filter.call(e,t)}function H(e,t){var n=I(),r=N(),i=[];if(!t&&e instanceof B)return e;if(!e)return new B(i);if("string"==typeof e){var a=e.trim();if(a.indexOf("<")>=0&&a.indexOf(">")>=0){var l="div";0===a.indexOf("<li")&&(l="ul"),0===a.indexOf("<tr")&&(l="tbody"),0!==a.indexOf("<td")&&0!==a.indexOf("<th")||(l="tr"),0===a.indexOf("<tbody")&&(l="table"),0===a.indexOf("<option")&&(l="select");var o=r.createElement(l);o.innerHTML=a;for(var s=0;s<o.childNodes.length;s+=1)i.push(o.childNodes[s])}else i=function(e,t){if("string"!=typeof e)return[e];for(var n=[],r=t.querySelectorAll(e),i=0;i<r.length;i+=1)n.push(r[i]);return n}(e.trim(),t||r)}else if(e.nodeType||e===n||e===r)i.push(e);else if(Array.isArray(e)){if(e instanceof B)return e;i=e}return new B(function(e){for(var t=[],n=0;n<e.length;n+=1)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(i))}H.fn=B.prototype;var W="resize scroll".split(" ");function U(e){return function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(void 0===n[0]){for(var i=0;i<this.length;i+=1)W.indexOf(e)<0&&(e in this[i]?this[i][e]():H(this[i]).trigger(e));return this}return this.on.apply(this,[e].concat(n))}}U("click"),U("blur"),U("focus"),U("focusin"),U("focusout"),U("keyup"),U("keydown"),U("keypress"),U("submit"),U("change"),U("mousedown"),U("mousemove"),U("mouseup"),U("mouseenter"),U("mouseleave"),U("mouseout"),U("mouseover"),U("touchstart"),U("touchend"),U("touchmove"),U("resize"),U("scroll");var G={addClass:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=V(t.map((function(e){return e.split(" ")})));return this.forEach((function(e){var t;(t=e.classList).add.apply(t,r)})),this},removeClass:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=V(t.map((function(e){return e.split(" ")})));return this.forEach((function(e){var t;(t=e.classList).remove.apply(t,r)})),this},hasClass:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=V(t.map((function(e){return e.split(" ")})));return $(this,(function(e){return r.filter((function(t){return e.classList.contains(t)})).length>0})).length>0},toggleClass:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=V(t.map((function(e){return e.split(" ")})));this.forEach((function(e){r.forEach((function(t){e.classList.toggle(t)}))}))},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===arguments.length)this[n].setAttribute(e,t);else for(var r in e)this[n][r]=e[r],this[n].setAttribute(r,e[r]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transitionDuration="string"!=typeof e?e+"ms":e;return this},on:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0],i=t[1],a=t[2],l=t[3];function o(e){var t=e.target;if(t){var n=e.target.dom7EventData||[];if(n.indexOf(e)<0&&n.unshift(e),H(t).is(i))a.apply(t,n);else for(var r=H(t).parents(),l=0;l<r.length;l+=1)H(r[l]).is(i)&&a.apply(r[l],n)}}function s(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),a.apply(this,t)}"function"==typeof t[1]&&(r=t[0],a=t[1],l=t[2],i=void 0),l||(l=!1);for(var u,c=r.split(" "),d=0;d<this.length;d+=1){var f=this[d];if(i)for(u=0;u<c.length;u+=1){var p=c[u];f.dom7LiveListeners||(f.dom7LiveListeners={}),f.dom7LiveListeners[p]||(f.dom7LiveListeners[p]=[]),f.dom7LiveListeners[p].push({listener:a,proxyListener:o}),f.addEventListener(p,o,l)}else for(u=0;u<c.length;u+=1){var h=c[u];f.dom7Listeners||(f.dom7Listeners={}),f.dom7Listeners[h]||(f.dom7Listeners[h]=[]),f.dom7Listeners[h].push({listener:a,proxyListener:s}),f.addEventListener(h,s,l)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0],i=t[1],a=t[2],l=t[3];"function"==typeof t[1]&&(r=t[0],a=t[1],l=t[2],i=void 0),l||(l=!1);for(var o=r.split(" "),s=0;s<o.length;s+=1)for(var u=o[s],c=0;c<this.length;c+=1){var d=this[c],f=void 0;if(!i&&d.dom7Listeners?f=d.dom7Listeners[u]:i&&d.dom7LiveListeners&&(f=d.dom7LiveListeners[u]),f&&f.length)for(var p=f.length-1;p>=0;p-=1){var h=f[p];a&&h.listener===a||a&&h.listener&&h.listener.dom7proxy&&h.listener.dom7proxy===a?(d.removeEventListener(u,h.proxyListener,l),f.splice(p,1)):a||(d.removeEventListener(u,h.proxyListener,l),f.splice(p,1))}}return this},trigger:function(){for(var e=I(),t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];for(var i=n[0].split(" "),a=n[1],l=0;l<i.length;l+=1)for(var o=i[l],s=0;s<this.length;s+=1){var u=this[s];if(e.CustomEvent){var c=new e.CustomEvent(o,{detail:a,bubbles:!0,cancelable:!0});u.dom7EventData=n.filter((function(e,t){return t>0})),u.dispatchEvent(c),u.dom7EventData=[],delete u.dom7EventData}}return this},transitionEnd:function(e){var t=this;return e&&t.on("transitionend",(function n(r){r.target===this&&(e.call(this,r),t.off("transitionend",n))})),this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){var e=I();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(this.length>0){var e=I(),t=N(),n=this[0],r=n.getBoundingClientRect(),i=t.body,a=n.clientTop||i.clientTop||0,l=n.clientLeft||i.clientLeft||0,o=n===e?e.scrollY:n.scrollTop,s=n===e?e.scrollX:n.scrollLeft;return{top:r.top+o-a,left:r.left+s-l}}return null},css:function(e,t){var n,r=I();if(1===arguments.length){if("string"!=typeof e){for(n=0;n<this.length;n+=1)for(var i in e)this[n].style[i]=e[i];return this}if(this[0])return r.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(n=0;n<this.length;n+=1)this[n].style[e]=t;return this}return this},each:function(e){return e?(this.forEach((function(t,n){e.apply(t,[t,n])})),this):this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,n,r=I(),i=N(),a=this[0];if(!a||void 0===e)return!1;if("string"==typeof e){if(a.matches)return a.matches(e);if(a.webkitMatchesSelector)return a.webkitMatchesSelector(e);if(a.msMatchesSelector)return a.msMatchesSelector(e);for(t=H(e),n=0;n<t.length;n+=1)if(t[n]===a)return!0;return!1}if(e===i)return a===i;if(e===r)return a===r;if(e.nodeType||e instanceof B){for(t=e.nodeType?[e]:e,n=0;n<t.length;n+=1)if(t[n]===a)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t=this.length;if(e>t-1)return H([]);if(e<0){var n=t+e;return H(n<0?[]:[this[n]])}return H([this[e]])},append:function(){for(var e,t=N(),n=0;n<arguments.length;n+=1){e=n<0||arguments.length<=n?void 0:arguments[n];for(var r=0;r<this.length;r+=1)if("string"==typeof e){var i=t.createElement("div");for(i.innerHTML=e;i.firstChild;)this[r].appendChild(i.firstChild)}else if(e instanceof B)for(var a=0;a<e.length;a+=1)this[r].appendChild(e[a]);else this[r].appendChild(e)}return this},prepend:function(e){var t,n,r=N();for(t=0;t<this.length;t+=1)if("string"==typeof e){var i=r.createElement("div");for(i.innerHTML=e,n=i.childNodes.length-1;n>=0;n-=1)this[t].insertBefore(i.childNodes[n],this[t].childNodes[0])}else if(e instanceof B)for(n=0;n<e.length;n+=1)this[t].insertBefore(e[n],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&H(this[0].nextElementSibling).is(e)?H([this[0].nextElementSibling]):H([]):this[0].nextElementSibling?H([this[0].nextElementSibling]):H([]):H([])},nextAll:function(e){var t=[],n=this[0];if(!n)return H([]);for(;n.nextElementSibling;){var r=n.nextElementSibling;e?H(r).is(e)&&t.push(r):t.push(r),n=r}return H(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&H(t.previousElementSibling).is(e)?H([t.previousElementSibling]):H([]):t.previousElementSibling?H([t.previousElementSibling]):H([])}return H([])},prevAll:function(e){var t=[],n=this[0];if(!n)return H([]);for(;n.previousElementSibling;){var r=n.previousElementSibling;e?H(r).is(e)&&t.push(r):t.push(r),n=r}return H(t)},parent:function(e){for(var t=[],n=0;n<this.length;n+=1)null!==this[n].parentNode&&(e?H(this[n].parentNode).is(e)&&t.push(this[n].parentNode):t.push(this[n].parentNode));return H(t)},parents:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].parentNode;r;)e?H(r).is(e)&&t.push(r):t.push(r),r=r.parentNode;return H(t)},closest:function(e){var t=this;return void 0===e?H([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].querySelectorAll(e),i=0;i<r.length;i+=1)t.push(r[i]);return H(t)},children:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].children,i=0;i<r.length;i+=1)e&&!H(r[i]).is(e)||t.push(r[i]);return H(t)},filter:function(e){return H($(this,e))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};Object.keys(G).forEach((function(e){H.fn[e]=G[e]}));var q,Q,Y,X=H;function K(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function Z(){return Date.now()}function J(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function ee(){for(var e=Object(arguments.length<=0?void 0:arguments[0]),t=1;t<arguments.length;t+=1){var n=t<0||arguments.length<=t?void 0:arguments[t];if(null!=n)for(var r=Object.keys(Object(n)),i=0,a=r.length;i<a;i+=1){var l=r[i],o=Object.getOwnPropertyDescriptor(n,l);void 0!==o&&o.enumerable&&(J(e[l])&&J(n[l])?ee(e[l],n[l]):!J(e[l])&&J(n[l])?(e[l]={},ee(e[l],n[l])):e[l]=n[l])}}return e}function te(e,t){Object.keys(t).forEach((function(n){J(t[n])&&Object.keys(t[n]).forEach((function(r){"function"==typeof t[n][r]&&(t[n][r]=t[n][r].bind(e))})),e[n]=t[n]}))}function ne(){return q||(q=function(){var e=I(),t=N();return{touch:!!("ontouchstart"in e||e.DocumentTouch&&t instanceof e.DocumentTouch),pointerEvents:!!e.PointerEvent&&"maxTouchPoints"in e.navigator&&e.navigator.maxTouchPoints>=0,observer:"MutationObserver"in e||"WebkitMutationObserver"in e,passiveListener:function(){var t=!1;try{var n=Object.defineProperty({},"passive",{get:function(){t=!0}});e.addEventListener("testPassiveListener",null,n)}catch(e){}return t}(),gestures:"ongesturestart"in e}}()),q}function re(e){return void 0===e&&(e={}),Q||(Q=function(e){var t=(void 0===e?{}:e).userAgent,n=ne(),r=I(),i=r.navigator.platform,a=t||r.navigator.userAgent,l={ios:!1,android:!1},o=r.screen.width,s=r.screen.height,u=a.match(/(Android);?[\s\/]+([\d.]+)?/),c=a.match(/(iPad).*OS\s([\d_]+)/),d=a.match(/(iPod)(.*OS\s([\d_]+))?/),f=!c&&a.match(/(iPhone\sOS|iOS)\s([\d_]+)/),p="Win32"===i,h="MacIntel"===i;return!c&&h&&n.touch&&["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(o+"x"+s)>=0&&((c=a.match(/(Version)\/([\d.]+)/))||(c=[0,1,"13_0_0"]),h=!1),u&&!p&&(l.os="android",l.android=!0),(c||f||d)&&(l.os="ios",l.ios=!0),l}(e)),Q}function ie(){return Y||(Y=function(){var e,t=I();return{isEdge:!!t.navigator.userAgent.match(/Edge/g),isSafari:(e=t.navigator.userAgent.toLowerCase(),e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0),isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)}}()),Y}var ae={name:"resize",create:function(){var e=this;ee(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(e){var t=I();t.addEventListener("resize",e.resize.resizeHandler),t.addEventListener("orientationchange",e.resize.orientationChangeHandler)},destroy:function(e){var t=I();t.removeEventListener("resize",e.resize.resizeHandler),t.removeEventListener("orientationchange",e.resize.orientationChangeHandler)}}};function le(){return(le=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var oe={attach:function(e,t){void 0===t&&(t={});var n=I(),r=this,i=new(n.MutationObserver||n.WebkitMutationObserver)((function(e){if(1!==e.length){var t=function(){r.emit("observerUpdate",e[0])};n.requestAnimationFrame?n.requestAnimationFrame(t):n.setTimeout(t,0)}else r.emit("observerUpdate",e[0])}));i.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),r.observer.observers.push(i)},init:function(){if(this.support.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach((function(e){e.disconnect()})),this.observer.observers=[]}},se={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){te(this,{observer:le({},oe,{observers:[]})})},on:{init:function(e){e.observer.init()},destroy:function(e){e.observer.destroy()}}};function ue(e){var t=N(),n=I(),r=this.touchEventsData,i=this.params,a=this.touches;if(!this.animating||!i.preventInteractionOnTransition){var l=e;l.originalEvent&&(l=l.originalEvent);var o=X(l.target);if("wrapper"!==i.touchEventsTarget||o.closest(this.wrapperEl).length)if(r.isTouchEvent="touchstart"===l.type,r.isTouchEvent||!("which"in l)||3!==l.which)if(!(!r.isTouchEvent&&"button"in l&&l.button>0))if(!r.isTouched||!r.isMoved)if(!!i.noSwipingClass&&""!==i.noSwipingClass&&l.target&&l.target.shadowRoot&&e.path&&e.path[0]&&(o=X(e.path[0])),i.noSwiping&&o.closest(i.noSwipingSelector?i.noSwipingSelector:"."+i.noSwipingClass)[0])this.allowClick=!0;else if(!i.swipeHandler||o.closest(i.swipeHandler)[0]){a.currentX="touchstart"===l.type?l.targetTouches[0].pageX:l.pageX,a.currentY="touchstart"===l.type?l.targetTouches[0].pageY:l.pageY;var s=a.currentX,u=a.currentY,c=i.edgeSwipeDetection||i.iOSEdgeSwipeDetection,d=i.edgeSwipeThreshold||i.iOSEdgeSwipeThreshold;if(!c||!(s<=d||s>=n.innerWidth-d)){if(ee(r,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),a.startX=s,a.startY=u,r.touchStartTime=Z(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,i.threshold>0&&(r.allowThresholdMove=!1),"touchstart"!==l.type){var f=!0;o.is(r.formElements)&&(f=!1),t.activeElement&&X(t.activeElement).is(r.formElements)&&t.activeElement!==o[0]&&t.activeElement.blur();var p=f&&this.allowTouchMove&&i.touchStartPreventDefault;!i.touchStartForcePreventDefault&&!p||o[0].isContentEditable||l.preventDefault()}this.emit("touchStart",l)}}}}function ce(e){var t=N(),n=this.touchEventsData,r=this.params,i=this.touches,a=this.rtlTranslate,l=e;if(l.originalEvent&&(l=l.originalEvent),n.isTouched){if(!n.isTouchEvent||"touchmove"===l.type){var o="touchmove"===l.type&&l.targetTouches&&(l.targetTouches[0]||l.changedTouches[0]),s="touchmove"===l.type?o.pageX:l.pageX,u="touchmove"===l.type?o.pageY:l.pageY;if(l.preventedByNestedSwiper)return i.startX=s,void(i.startY=u);if(!this.allowTouchMove)return this.allowClick=!1,void(n.isTouched&&(ee(i,{startX:s,startY:u,currentX:s,currentY:u}),n.touchStartTime=Z()));if(n.isTouchEvent&&r.touchReleaseOnEdges&&!r.loop)if(this.isVertical()){if(u<i.startY&&this.translate<=this.maxTranslate()||u>i.startY&&this.translate>=this.minTranslate())return n.isTouched=!1,void(n.isMoved=!1)}else if(s<i.startX&&this.translate<=this.maxTranslate()||s>i.startX&&this.translate>=this.minTranslate())return;if(n.isTouchEvent&&t.activeElement&&l.target===t.activeElement&&X(l.target).is(n.formElements))return n.isMoved=!0,void(this.allowClick=!1);if(n.allowTouchCallbacks&&this.emit("touchMove",l),!(l.targetTouches&&l.targetTouches.length>1)){i.currentX=s,i.currentY=u;var c=i.currentX-i.startX,d=i.currentY-i.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(d,2))<this.params.threshold)){var f;if(void 0===n.isScrolling)this.isHorizontal()&&i.currentY===i.startY||this.isVertical()&&i.currentX===i.startX?n.isScrolling=!1:c*c+d*d>=25&&(f=180*Math.atan2(Math.abs(d),Math.abs(c))/Math.PI,n.isScrolling=this.isHorizontal()?f>r.touchAngle:90-f>r.touchAngle);if(n.isScrolling&&this.emit("touchMoveOpposite",l),void 0===n.startMoving&&(i.currentX===i.startX&&i.currentY===i.startY||(n.startMoving=!0)),n.isScrolling)n.isTouched=!1;else if(n.startMoving){this.allowClick=!1,!r.cssMode&&l.cancelable&&l.preventDefault(),r.touchMoveStopPropagation&&!r.nested&&l.stopPropagation(),n.isMoved||(r.loop&&this.loopFix(),n.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),n.allowMomentumBounce=!1,!r.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",l)),this.emit("sliderMove",l),n.isMoved=!0;var p=this.isHorizontal()?c:d;i.diff=p,p*=r.touchRatio,a&&(p=-p),this.swipeDirection=p>0?"prev":"next",n.currentTranslate=p+n.startTranslate;var h=!0,m=r.resistanceRatio;if(r.touchReleaseOnEdges&&(m=0),p>0&&n.currentTranslate>this.minTranslate()?(h=!1,r.resistance&&(n.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+n.startTranslate+p,m))):p<0&&n.currentTranslate<this.maxTranslate()&&(h=!1,r.resistance&&(n.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-n.startTranslate-p,m))),h&&(l.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&n.currentTranslate<n.startTranslate&&(n.currentTranslate=n.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&n.currentTranslate>n.startTranslate&&(n.currentTranslate=n.startTranslate),r.threshold>0){if(!(Math.abs(p)>r.threshold||n.allowThresholdMove))return void(n.currentTranslate=n.startTranslate);if(!n.allowThresholdMove)return n.allowThresholdMove=!0,i.startX=i.currentX,i.startY=i.currentY,n.currentTranslate=n.startTranslate,void(i.diff=this.isHorizontal()?i.currentX-i.startX:i.currentY-i.startY)}r.followFinger&&!r.cssMode&&((r.freeMode||r.watchSlidesProgress||r.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),r.freeMode&&(0===n.velocities.length&&n.velocities.push({position:i[this.isHorizontal()?"startX":"startY"],time:n.touchStartTime}),n.velocities.push({position:i[this.isHorizontal()?"currentX":"currentY"],time:Z()})),this.updateProgress(n.currentTranslate),this.setTranslate(n.currentTranslate))}}}}}else n.startMoving&&n.isScrolling&&this.emit("touchMoveOpposite",l)}function de(e){var t=this,n=t.touchEventsData,r=t.params,i=t.touches,a=t.rtlTranslate,l=t.$wrapperEl,o=t.slidesGrid,s=t.snapGrid,u=e;if(u.originalEvent&&(u=u.originalEvent),n.allowTouchCallbacks&&t.emit("touchEnd",u),n.allowTouchCallbacks=!1,!n.isTouched)return n.isMoved&&r.grabCursor&&t.setGrabCursor(!1),n.isMoved=!1,void(n.startMoving=!1);r.grabCursor&&n.isMoved&&n.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var c,d=Z(),f=d-n.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(u),t.emit("tap click",u),f<300&&d-n.lastClickTime<300&&t.emit("doubleTap doubleClick",u)),n.lastClickTime=Z(),K((function(){t.destroyed||(t.allowClick=!0)})),!n.isTouched||!n.isMoved||!t.swipeDirection||0===i.diff||n.currentTranslate===n.startTranslate)return n.isTouched=!1,n.isMoved=!1,void(n.startMoving=!1);if(n.isTouched=!1,n.isMoved=!1,n.startMoving=!1,c=r.followFinger?a?t.translate:-t.translate:-n.currentTranslate,!r.cssMode)if(r.freeMode){if(c<-t.minTranslate())return void t.slideTo(t.activeIndex);if(c>-t.maxTranslate())return void(t.slides.length<s.length?t.slideTo(s.length-1):t.slideTo(t.slides.length-1));if(r.freeModeMomentum){if(n.velocities.length>1){var p=n.velocities.pop(),h=n.velocities.pop(),m=p.position-h.position,v=p.time-h.time;t.velocity=m/v,t.velocity/=2,Math.abs(t.velocity)<r.freeModeMinimumVelocity&&(t.velocity=0),(v>150||Z()-p.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=r.freeModeMomentumVelocityRatio,n.velocities.length=0;var g=1e3*r.freeModeMomentumRatio,y=t.velocity*g,b=t.translate+y;a&&(b=-b);var w,C,E=!1,x=20*Math.abs(t.velocity)*r.freeModeMomentumBounceRatio;if(b<t.maxTranslate())r.freeModeMomentumBounce?(b+t.maxTranslate()<-x&&(b=t.maxTranslate()-x),w=t.maxTranslate(),E=!0,n.allowMomentumBounce=!0):b=t.maxTranslate(),r.loop&&r.centeredSlides&&(C=!0);else if(b>t.minTranslate())r.freeModeMomentumBounce?(b-t.minTranslate()>x&&(b=t.minTranslate()+x),w=t.minTranslate(),E=!0,n.allowMomentumBounce=!0):b=t.minTranslate(),r.loop&&r.centeredSlides&&(C=!0);else if(r.freeModeSticky){for(var T,S=0;S<s.length;S+=1)if(s[S]>-b){T=S;break}b=-(b=Math.abs(s[T]-b)<Math.abs(s[T-1]-b)||"next"===t.swipeDirection?s[T]:s[T-1])}if(C&&t.once("transitionEnd",(function(){t.loopFix()})),0!==t.velocity){if(g=a?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity),r.freeModeSticky){var k=Math.abs((a?-b:b)-t.translate),P=t.slidesSizesGrid[t.activeIndex];g=k<P?r.speed:k<2*P?1.5*r.speed:2.5*r.speed}}else if(r.freeModeSticky)return void t.slideToClosest();r.freeModeMomentumBounce&&E?(t.updateProgress(w),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,l.transitionEnd((function(){t&&!t.destroyed&&n.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(r.speed),setTimeout((function(){t.setTranslate(w),l.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()}))}),0))}))):t.velocity?(t.updateProgress(b),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,l.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()})))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(r.freeModeSticky)return void t.slideToClosest();(!r.freeModeMomentum||f>=r.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var _=0,M=t.slidesSizesGrid[0],O=0;O<o.length;O+=O<r.slidesPerGroupSkip?1:r.slidesPerGroup){var L=O<r.slidesPerGroupSkip-1?1:r.slidesPerGroup;void 0!==o[O+L]?c>=o[O]&&c<o[O+L]&&(_=O,M=o[O+L]-o[O]):c>=o[O]&&(_=O,M=o[o.length-1]-o[o.length-2])}var N=(c-o[_])/M,z=_<r.slidesPerGroupSkip-1?1:r.slidesPerGroup;if(f>r.longSwipesMs){if(!r.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(N>=r.longSwipesRatio?t.slideTo(_+z):t.slideTo(_)),"prev"===t.swipeDirection&&(N>1-r.longSwipesRatio?t.slideTo(_+z):t.slideTo(_))}else{if(!r.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(u.target===t.navigation.nextEl||u.target===t.navigation.prevEl)?u.target===t.navigation.nextEl?t.slideTo(_+z):t.slideTo(_):("next"===t.swipeDirection&&t.slideTo(_+z),"prev"===t.swipeDirection&&t.slideTo(_))}}}function fe(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var n=this.allowSlideNext,r=this.allowSlidePrev,i=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=r,this.allowSlideNext=n,this.params.watchOverflow&&i!==this.snapGrid&&this.checkOverflow()}}function pe(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}function he(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var n=this.maxTranslate()-this.minTranslate();(0===n?0:(this.translate-this.minTranslate())/n)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}var me=!1;function ve(){}var ge={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,nested:!1,width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1};function ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var be={modular:{useParams:function(e){var t=this;t.modules&&Object.keys(t.modules).forEach((function(n){var r=t.modules[n];r.params&&ee(e,r.params)}))},useModules:function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach((function(n){var r=t.modules[n],i=e[n]||{};r.on&&t.on&&Object.keys(r.on).forEach((function(e){t.on(e,r.on[e])})),r.create&&r.create.bind(t)(i)}))}},eventsEmitter:{on:function(e,t,n){var r=this;if("function"!=typeof t)return r;var i=n?"unshift":"push";return e.split(" ").forEach((function(e){r.eventsListeners[e]||(r.eventsListeners[e]=[]),r.eventsListeners[e][i](t)})),r},once:function(e,t,n){var r=this;if("function"!=typeof t)return r;function i(){r.off(e,i),i.__emitterProxy&&delete i.__emitterProxy;for(var n=arguments.length,a=new Array(n),l=0;l<n;l++)a[l]=arguments[l];t.apply(r,a)}return i.__emitterProxy=t,r.on(e,i,n)},onAny:function(e,t){if("function"!=typeof e)return this;var n=t?"unshift":"push";return this.eventsAnyListeners.indexOf(e)<0&&this.eventsAnyListeners[n](e),this},offAny:function(e){if(!this.eventsAnyListeners)return this;var t=this.eventsAnyListeners.indexOf(e);return t>=0&&this.eventsAnyListeners.splice(t,1),this},off:function(e,t){var n=this;return n.eventsListeners?(e.split(" ").forEach((function(e){void 0===t?n.eventsListeners[e]=[]:n.eventsListeners[e]&&n.eventsListeners[e].forEach((function(r,i){(r===t||r.__emitterProxy&&r.__emitterProxy===t)&&n.eventsListeners[e].splice(i,1)}))})),n):n},emit:function(){var e,t,n,r=this;if(!r.eventsListeners)return r;for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];"string"==typeof a[0]||Array.isArray(a[0])?(e=a[0],t=a.slice(1,a.length),n=r):(e=a[0].events,t=a[0].data,n=a[0].context||r),t.unshift(n);var o=Array.isArray(e)?e:e.split(" ");return o.forEach((function(e){r.eventsAnyListeners&&r.eventsAnyListeners.length&&r.eventsAnyListeners.forEach((function(r){r.apply(n,[e].concat(t))})),r.eventsListeners&&r.eventsListeners[e]&&r.eventsListeners[e].forEach((function(e){e.apply(n,t)}))})),r}},update:{updateSize:function(){var e,t,n=this.$el;e=void 0!==this.params.width&&null!==this.params.width?this.params.width:n[0].clientWidth,t=void 0!==this.params.height&&null!==this.params.height?this.params.height:n[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(n.css("padding-left")||0,10)-parseInt(n.css("padding-right")||0,10),t=t-parseInt(n.css("padding-top")||0,10)-parseInt(n.css("padding-bottom")||0,10),Number.isNaN(e)&&(e=0),Number.isNaN(t)&&(t=0),ee(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=I(),t=this.params,n=this.$wrapperEl,r=this.size,i=this.rtlTranslate,a=this.wrongRTL,l=this.virtual&&t.virtual.enabled,o=l?this.virtual.slides.length:this.slides.length,s=n.children("."+this.params.slideClass),u=l?this.virtual.slides.length:s.length,c=[],d=[],f=[];function p(e,n){return!t.cssMode||n!==s.length-1}var h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(this));var m=t.slidesOffsetAfter;"function"==typeof m&&(m=t.slidesOffsetAfter.call(this));var v=this.snapGrid.length,g=this.slidesGrid.length,y=t.spaceBetween,b=-h,w=0,C=0;if(void 0!==r){var E,x;"string"==typeof y&&y.indexOf("%")>=0&&(y=parseFloat(y.replace("%",""))/100*r),this.virtualSize=-y,i?s.css({marginLeft:"",marginTop:""}):s.css({marginRight:"",marginBottom:""}),t.slidesPerColumn>1&&(E=Math.floor(u/t.slidesPerColumn)===u/this.params.slidesPerColumn?u:Math.ceil(u/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(E=Math.max(E,t.slidesPerView*t.slidesPerColumn)));for(var T,S=t.slidesPerColumn,k=E/S,P=Math.floor(u/t.slidesPerColumn),_=0;_<u;_+=1){x=0;var M=s.eq(_);if(t.slidesPerColumn>1){var O=void 0,L=void 0,N=void 0;if("row"===t.slidesPerColumnFill&&t.slidesPerGroup>1){var z=Math.floor(_/(t.slidesPerGroup*t.slidesPerColumn)),A=_-t.slidesPerColumn*t.slidesPerGroup*z,D=0===z?t.slidesPerGroup:Math.min(Math.ceil((u-z*S*t.slidesPerGroup)/S),t.slidesPerGroup);O=(L=A-(N=Math.floor(A/D))*D+z*t.slidesPerGroup)+N*E/S,M.css({"-webkit-box-ordinal-group":O,"-moz-box-ordinal-group":O,"-ms-flex-order":O,"-webkit-order":O,order:O})}else"column"===t.slidesPerColumnFill?(N=_-(L=Math.floor(_/S))*S,(L>P||L===P&&N===S-1)&&(N+=1)>=S&&(N=0,L+=1)):L=_-(N=Math.floor(_/k))*k;M.css("margin-"+(this.isHorizontal()?"top":"left"),0!==N&&t.spaceBetween&&t.spaceBetween+"px")}if("none"!==M.css("display")){if("auto"===t.slidesPerView){var R=e.getComputedStyle(M[0],null),F=M[0].style.transform,j=M[0].style.webkitTransform;if(F&&(M[0].style.transform="none"),j&&(M[0].style.webkitTransform="none"),t.roundLengths)x=this.isHorizontal()?M.outerWidth(!0):M.outerHeight(!0);else if(this.isHorizontal()){var B=parseFloat(R.getPropertyValue("width")||0),V=parseFloat(R.getPropertyValue("padding-left")||0),$=parseFloat(R.getPropertyValue("padding-right")||0),H=parseFloat(R.getPropertyValue("margin-left")||0),W=parseFloat(R.getPropertyValue("margin-right")||0),U=R.getPropertyValue("box-sizing");if(U&&"border-box"===U)x=B+H+W;else{var G=M[0],q=G.clientWidth;x=B+V+$+H+W+(G.offsetWidth-q)}}else{var Q=parseFloat(R.getPropertyValue("height")||0),Y=parseFloat(R.getPropertyValue("padding-top")||0),X=parseFloat(R.getPropertyValue("padding-bottom")||0),K=parseFloat(R.getPropertyValue("margin-top")||0),Z=parseFloat(R.getPropertyValue("margin-bottom")||0),J=R.getPropertyValue("box-sizing");if(J&&"border-box"===J)x=Q+K+Z;else{var te=M[0],ne=te.clientHeight;x=Q+Y+X+K+Z+(te.offsetHeight-ne)}}F&&(M[0].style.transform=F),j&&(M[0].style.webkitTransform=j),t.roundLengths&&(x=Math.floor(x))}else x=(r-(t.slidesPerView-1)*y)/t.slidesPerView,t.roundLengths&&(x=Math.floor(x)),s[_]&&(this.isHorizontal()?s[_].style.width=x+"px":s[_].style.height=x+"px");s[_]&&(s[_].swiperSlideSize=x),f.push(x),t.centeredSlides?(b=b+x/2+w/2+y,0===w&&0!==_&&(b=b-r/2-y),0===_&&(b=b-r/2-y),Math.abs(b)<.001&&(b=0),t.roundLengths&&(b=Math.floor(b)),C%t.slidesPerGroup==0&&c.push(b),d.push(b)):(t.roundLengths&&(b=Math.floor(b)),(C-Math.min(this.params.slidesPerGroupSkip,C))%this.params.slidesPerGroup==0&&c.push(b),d.push(b),b=b+x+y),this.virtualSize+=x+y,w=x,C+=1}}if(this.virtualSize=Math.max(this.virtualSize,r)+m,i&&a&&("slide"===t.effect||"coverflow"===t.effect)&&n.css({width:this.virtualSize+t.spaceBetween+"px"}),t.setWrapperSize&&(this.isHorizontal()?n.css({width:this.virtualSize+t.spaceBetween+"px"}):n.css({height:this.virtualSize+t.spaceBetween+"px"})),t.slidesPerColumn>1&&(this.virtualSize=(x+t.spaceBetween)*E,this.virtualSize=Math.ceil(this.virtualSize/t.slidesPerColumn)-t.spaceBetween,this.isHorizontal()?n.css({width:this.virtualSize+t.spaceBetween+"px"}):n.css({height:this.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){T=[];for(var re=0;re<c.length;re+=1){var ie=c[re];t.roundLengths&&(ie=Math.floor(ie)),c[re]<this.virtualSize+c[0]&&T.push(ie)}c=T}if(!t.centeredSlides){T=[];for(var ae=0;ae<c.length;ae+=1){var le=c[ae];t.roundLengths&&(le=Math.floor(le)),c[ae]<=this.virtualSize-r&&T.push(le)}c=T,Math.floor(this.virtualSize-r)-Math.floor(c[c.length-1])>1&&c.push(this.virtualSize-r)}if(0===c.length&&(c=[0]),0!==t.spaceBetween&&(this.isHorizontal()?i?s.filter(p).css({marginLeft:y+"px"}):s.filter(p).css({marginRight:y+"px"}):s.filter(p).css({marginBottom:y+"px"})),t.centeredSlides&&t.centeredSlidesBounds){var oe=0;f.forEach((function(e){oe+=e+(t.spaceBetween?t.spaceBetween:0)}));var se=(oe-=t.spaceBetween)-r;c=c.map((function(e){return e<0?-h:e>se?se+m:e}))}if(t.centerInsufficientSlides){var ue=0;if(f.forEach((function(e){ue+=e+(t.spaceBetween?t.spaceBetween:0)})),(ue-=t.spaceBetween)<r){var ce=(r-ue)/2;c.forEach((function(e,t){c[t]=e-ce})),d.forEach((function(e,t){d[t]=e+ce}))}}ee(this,{slides:s,snapGrid:c,slidesGrid:d,slidesSizesGrid:f}),u!==o&&this.emit("slidesLengthChange"),c.length!==v&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),d.length!==g&&this.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,n=[],r=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&this.params.slidesPerView>1)if(this.params.centeredSlides)this.visibleSlides.each((function(e){n.push(e)}));else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var i=this.activeIndex+t;if(i>this.slides.length)break;n.push(this.slides.eq(i)[0])}else n.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<n.length;t+=1)if(void 0!==n[t]){var a=n[t].offsetHeight;r=a>r?a:r}r&&this.$wrapperEl.css("height",r+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,n=this.slides,r=this.rtlTranslate;if(0!==n.length){void 0===n[0].swiperSlideOffset&&this.updateSlidesOffset();var i=-e;r&&(i=e),n.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var a=0;a<n.length;a+=1){var l=n[a],o=(i+(t.centeredSlides?this.minTranslate():0)-l.swiperSlideOffset)/(l.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var s=-(i-l.swiperSlideOffset),u=s+this.slidesSizesGrid[a];(s>=0&&s<this.size-1||u>1&&u<=this.size||s<=0&&u>=this.size)&&(this.visibleSlides.push(l),this.visibleSlidesIndexes.push(a),n.eq(a).addClass(t.slideVisibleClass))}l.progress=r?-o:o}this.visibleSlides=X(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var n=this.params,r=this.maxTranslate()-this.minTranslate(),i=this.progress,a=this.isBeginning,l=this.isEnd,o=a,s=l;0===r?(i=0,a=!0,l=!0):(a=(i=(e-this.minTranslate())/r)<=0,l=i>=1),ee(this,{progress:i,isBeginning:a,isEnd:l}),(n.watchSlidesProgress||n.watchSlidesVisibility||n.centeredSlides&&n.autoHeight)&&this.updateSlidesProgress(e),a&&!o&&this.emit("reachBeginning toEdge"),l&&!s&&this.emit("reachEnd toEdge"),(o&&!a||s&&!l)&&this.emit("fromEdge"),this.emit("progress",i)},updateSlidesClasses:function(){var e,t=this.slides,n=this.params,r=this.$wrapperEl,i=this.activeIndex,a=this.realIndex,l=this.virtual&&n.virtual.enabled;t.removeClass(n.slideActiveClass+" "+n.slideNextClass+" "+n.slidePrevClass+" "+n.slideDuplicateActiveClass+" "+n.slideDuplicateNextClass+" "+n.slideDuplicatePrevClass),(e=l?this.$wrapperEl.find("."+n.slideClass+'[data-swiper-slide-index="'+i+'"]'):t.eq(i)).addClass(n.slideActiveClass),n.loop&&(e.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+a+'"]').addClass(n.slideDuplicateActiveClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+a+'"]').addClass(n.slideDuplicateActiveClass));var o=e.nextAll("."+n.slideClass).eq(0).addClass(n.slideNextClass);n.loop&&0===o.length&&(o=t.eq(0)).addClass(n.slideNextClass);var s=e.prevAll("."+n.slideClass).eq(0).addClass(n.slidePrevClass);n.loop&&0===s.length&&(s=t.eq(-1)).addClass(n.slidePrevClass),n.loop&&(o.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass),s.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass)),this.emitSlidesClasses()},updateActiveIndex:function(e){var t,n=this.rtlTranslate?this.translate:-this.translate,r=this.slidesGrid,i=this.snapGrid,a=this.params,l=this.activeIndex,o=this.realIndex,s=this.snapIndex,u=e;if(void 0===u){for(var c=0;c<r.length;c+=1)void 0!==r[c+1]?n>=r[c]&&n<r[c+1]-(r[c+1]-r[c])/2?u=c:n>=r[c]&&n<r[c+1]&&(u=c+1):n>=r[c]&&(u=c);a.normalizeSlideIndex&&(u<0||void 0===u)&&(u=0)}if(i.indexOf(n)>=0)t=i.indexOf(n);else{var d=Math.min(a.slidesPerGroupSkip,u);t=d+Math.floor((u-d)/a.slidesPerGroup)}if(t>=i.length&&(t=i.length-1),u!==l){var f=parseInt(this.slides.eq(u).attr("data-swiper-slide-index")||u,10);ee(this,{snapIndex:t,realIndex:f,previousIndex:l,activeIndex:u}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==f&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")}else t!==s&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,n=X(e.target).closest("."+t.slideClass)[0],r=!1;if(n)for(var i=0;i<this.slides.length;i+=1)this.slides[i]===n&&(r=!0);if(!n||!r)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=n,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(X(n).attr("data-swiper-slide-index"),10):this.clickedIndex=X(n).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},translate:{getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,n=this.rtlTranslate,r=this.translate,i=this.$wrapperEl;if(t.virtualTranslate)return n?-r:r;if(t.cssMode)return r;var a=function(e,t){void 0===t&&(t="x");var n,r,i,a=I(),l=a.getComputedStyle(e,null);return a.WebKitCSSMatrix?((r=l.transform||l.webkitTransform).split(",").length>6&&(r=r.split(", ").map((function(e){return e.replace(",",".")})).join(", ")),i=new a.WebKitCSSMatrix("none"===r?"":r)):n=(i=l.MozTransform||l.OTransform||l.MsTransform||l.msTransform||l.transform||l.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(r=a.WebKitCSSMatrix?i.m41:16===n.length?parseFloat(n[12]):parseFloat(n[4])),"y"===t&&(r=a.WebKitCSSMatrix?i.m42:16===n.length?parseFloat(n[13]):parseFloat(n[5])),r||0}(i[0],e);return n&&(a=-a),a||0},setTranslate:function(e,t){var n=this.rtlTranslate,r=this.params,i=this.$wrapperEl,a=this.wrapperEl,l=this.progress,o=0,s=0;this.isHorizontal()?o=n?-e:e:s=e,r.roundLengths&&(o=Math.floor(o),s=Math.floor(s)),r.cssMode?a[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-s:r.virtualTranslate||i.transform("translate3d("+o+"px, "+s+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:s;var u=this.maxTranslate()-this.minTranslate();(0===u?0:(e-this.minTranslate())/u)!==l&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,n,r,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0),void 0===r&&(r=!0);var a=this,l=a.params,o=a.wrapperEl;if(a.animating&&l.preventInteractionOnTransition)return!1;var s,u=a.minTranslate(),c=a.maxTranslate();if(s=r&&e>u?u:r&&e<c?c:e,a.updateProgress(s),l.cssMode){var d,f=a.isHorizontal();if(0===t)o[f?"scrollLeft":"scrollTop"]=-s;else if(o.scrollTo)o.scrollTo(((d={})[f?"left":"top"]=-s,d.behavior="smooth",d));else o[f?"scrollLeft":"scrollTop"]=-s;return!0}return 0===t?(a.setTransition(0),a.setTranslate(s),n&&(a.emit("beforeTransitionStart",t,i),a.emit("transitionEnd"))):(a.setTransition(t),a.setTranslate(s),n&&(a.emit("beforeTransitionStart",t,i),a.emit("transitionStart")),a.animating||(a.animating=!0,a.onTranslateToWrapperTransitionEnd||(a.onTranslateToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd),a.onTranslateToWrapperTransitionEnd=null,delete a.onTranslateToWrapperTransitionEnd,n&&a.emit("transitionEnd"))}),a.$wrapperEl[0].addEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd))),!0}},transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var n=this.activeIndex,r=this.params,i=this.previousIndex;if(!r.cssMode){r.autoHeight&&this.updateAutoHeight();var a=t;if(a||(a=n>i?"next":n<i?"prev":"reset"),this.emit("transitionStart"),e&&n!==i){if("reset"===a)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===a?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var n=this.activeIndex,r=this.previousIndex,i=this.params;if(this.animating=!1,!i.cssMode){this.setTransition(0);var a=t;if(a||(a=n>r?"next":n<r?"prev":"reset"),this.emit("transitionEnd"),e&&n!==r){if("reset"===a)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===a?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}}},slide:{slideTo:function(e,t,n,r){if(void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0),"number"!=typeof e&&"string"!=typeof e)throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. ["+typeof e+"] given.");if("string"==typeof e){var i=parseInt(e,10);if(!isFinite(i))throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. ["+e+"] given.");e=i}var a=this,l=e;l<0&&(l=0);var o=a.params,s=a.snapGrid,u=a.slidesGrid,c=a.previousIndex,d=a.activeIndex,f=a.rtlTranslate,p=a.wrapperEl;if(a.animating&&o.preventInteractionOnTransition)return!1;var h=Math.min(a.params.slidesPerGroupSkip,l),m=h+Math.floor((l-h)/a.params.slidesPerGroup);m>=s.length&&(m=s.length-1),(d||o.initialSlide||0)===(c||0)&&n&&a.emit("beforeSlideChangeStart");var v,g=-s[m];if(a.updateProgress(g),o.normalizeSlideIndex)for(var y=0;y<u.length;y+=1)-Math.floor(100*g)>=Math.floor(100*u[y])&&(l=y);if(a.initialized&&l!==d){if(!a.allowSlideNext&&g<a.translate&&g<a.minTranslate())return!1;if(!a.allowSlidePrev&&g>a.translate&&g>a.maxTranslate()&&(d||0)!==l)return!1}if(v=l>d?"next":l<d?"prev":"reset",f&&-g===a.translate||!f&&g===a.translate)return a.updateActiveIndex(l),o.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==o.effect&&a.setTranslate(g),"reset"!==v&&(a.transitionStart(n,v),a.transitionEnd(n,v)),!1;if(o.cssMode){var b,w=a.isHorizontal(),C=-g;if(f&&(C=p.scrollWidth-p.offsetWidth-C),0===t)p[w?"scrollLeft":"scrollTop"]=C;else if(p.scrollTo)p.scrollTo(((b={})[w?"left":"top"]=C,b.behavior="smooth",b));else p[w?"scrollLeft":"scrollTop"]=C;return!0}return 0===t?(a.setTransition(0),a.setTranslate(g),a.updateActiveIndex(l),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,r),a.transitionStart(n,v),a.transitionEnd(n,v)):(a.setTransition(t),a.setTranslate(g),a.updateActiveIndex(l),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,r),a.transitionStart(n,v),a.animating||(a.animating=!0,a.onSlideToWrapperTransitionEnd||(a.onSlideToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd),a.onSlideToWrapperTransitionEnd=null,delete a.onSlideToWrapperTransitionEnd,a.transitionEnd(n,v))}),a.$wrapperEl[0].addEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,n,r){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0);var i=e;return this.params.loop&&(i+=this.loopedSlides),this.slideTo(i,t,n,r)},slideNext:function(e,t,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var r=this.params,i=this.animating,a=this.activeIndex<r.slidesPerGroupSkip?1:r.slidesPerGroup;if(r.loop){if(i&&r.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+a,e,t,n)},slidePrev:function(e,t,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var r=this.params,i=this.animating,a=this.snapGrid,l=this.slidesGrid,o=this.rtlTranslate;if(r.loop){if(i&&r.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function s(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var u,c=s(o?this.translate:-this.translate),d=a.map((function(e){return s(e)})),f=(a[d.indexOf(c)],a[d.indexOf(c)-1]);return void 0===f&&r.cssMode&&a.forEach((function(e){!f&&c>=e&&(f=e)})),void 0!==f&&(u=l.indexOf(f))<0&&(u=this.activeIndex-1),this.slideTo(u,e,t,n)},slideReset:function(e,t,n){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,n)},slideToClosest:function(e,t,n,r){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===r&&(r=.5);var i=this.activeIndex,a=Math.min(this.params.slidesPerGroupSkip,i),l=a+Math.floor((i-a)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;if(o>=this.snapGrid[l]){var s=this.snapGrid[l];o-s>(this.snapGrid[l+1]-s)*r&&(i+=this.params.slidesPerGroup)}else{var u=this.snapGrid[l-1];o-u<=(this.snapGrid[l]-u)*r&&(i-=this.params.slidesPerGroup)}return i=Math.max(i,0),i=Math.min(i,this.slidesGrid.length-1),this.slideTo(i,e,t,n)},slideToClickedSlide:function(){var e,t=this,n=t.params,r=t.$wrapperEl,i="auto"===n.slidesPerView?t.slidesPerViewDynamic():n.slidesPerView,a=t.clickedIndex;if(n.loop){if(t.animating)return;e=parseInt(X(t.clickedSlide).attr("data-swiper-slide-index"),10),n.centeredSlides?a<t.loopedSlides-i/2||a>t.slides.length-t.loopedSlides+i/2?(t.loopFix(),a=r.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+n.slideDuplicateClass+")").eq(0).index(),K((function(){t.slideTo(a)}))):t.slideTo(a):a>t.slides.length-i?(t.loopFix(),a=r.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+n.slideDuplicateClass+")").eq(0).index(),K((function(){t.slideTo(a)}))):t.slideTo(a)}else t.slideTo(a)}},loop:{loopCreate:function(){var e=this,t=N(),n=e.params,r=e.$wrapperEl;r.children("."+n.slideClass+"."+n.slideDuplicateClass).remove();var i=r.children("."+n.slideClass);if(n.loopFillGroupWithBlank){var a=n.slidesPerGroup-i.length%n.slidesPerGroup;if(a!==n.slidesPerGroup){for(var l=0;l<a;l+=1){var o=X(t.createElement("div")).addClass(n.slideClass+" "+n.slideBlankClass);r.append(o)}i=r.children("."+n.slideClass)}}"auto"!==n.slidesPerView||n.loopedSlides||(n.loopedSlides=i.length),e.loopedSlides=Math.ceil(parseFloat(n.loopedSlides||n.slidesPerView,10)),e.loopedSlides+=n.loopAdditionalSlides,e.loopedSlides>i.length&&(e.loopedSlides=i.length);var s=[],u=[];i.each((function(t,n){var r=X(t);n<e.loopedSlides&&u.push(t),n<i.length&&n>=i.length-e.loopedSlides&&s.push(t),r.attr("data-swiper-slide-index",n)}));for(var c=0;c<u.length;c+=1)r.append(X(u[c].cloneNode(!0)).addClass(n.slideDuplicateClass));for(var d=s.length-1;d>=0;d-=1)r.prepend(X(s[d].cloneNode(!0)).addClass(n.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,n=this.slides,r=this.loopedSlides,i=this.allowSlidePrev,a=this.allowSlideNext,l=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var s=-l[t]-this.getTranslate();if(t<r)e=n.length-3*r+t,e+=r,this.slideTo(e,0,!1,!0)&&0!==s&&this.setTranslate((o?-this.translate:this.translate)-s);else if(t>=n.length-r){e=-n.length+t+r,e+=r,this.slideTo(e,0,!1,!0)&&0!==s&&this.setTranslate((o?-this.translate:this.translate)-s)}this.allowSlidePrev=i,this.allowSlideNext=a,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,n=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),n.removeAttr("data-swiper-slide-index")}},grabCursor:{setGrabCursor:function(e){if(!(this.support.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){this.support.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},manipulation:{appendSlide:function(e){var t=this.$wrapperEl,n=this.params;if(n.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var r=0;r<e.length;r+=1)e[r]&&t.append(e[r]);else t.append(e);n.loop&&this.loopCreate(),n.observer&&this.support.observer||this.update()},prependSlide:function(e){var t=this.params,n=this.$wrapperEl,r=this.activeIndex;t.loop&&this.loopDestroy();var i=r+1;if("object"==typeof e&&"length"in e){for(var a=0;a<e.length;a+=1)e[a]&&n.prepend(e[a]);i=r+e.length}else n.prepend(e);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),this.slideTo(i,0,!1)},addSlide:function(e,t){var n=this.$wrapperEl,r=this.params,i=this.activeIndex;r.loop&&(i-=this.loopedSlides,this.loopDestroy(),this.slides=n.children("."+r.slideClass));var a=this.slides.length;if(e<=0)this.prependSlide(t);else if(e>=a)this.appendSlide(t);else{for(var l=i>e?i+1:i,o=[],s=a-1;s>=e;s-=1){var u=this.slides.eq(s);u.remove(),o.unshift(u)}if("object"==typeof t&&"length"in t){for(var c=0;c<t.length;c+=1)t[c]&&n.append(t[c]);l=i>e?i+t.length:i}else n.append(t);for(var d=0;d<o.length;d+=1)n.append(o[d]);r.loop&&this.loopCreate(),r.observer&&this.support.observer||this.update(),r.loop?this.slideTo(l+this.loopedSlides,0,!1):this.slideTo(l,0,!1)}},removeSlide:function(e){var t=this.params,n=this.$wrapperEl,r=this.activeIndex;t.loop&&(r-=this.loopedSlides,this.loopDestroy(),this.slides=n.children("."+t.slideClass));var i,a=r;if("object"==typeof e&&"length"in e){for(var l=0;l<e.length;l+=1)i=e[l],this.slides[i]&&this.slides.eq(i).remove(),i<a&&(a-=1);a=Math.max(a,0)}else i=e,this.slides[i]&&this.slides.eq(i).remove(),i<a&&(a-=1),a=Math.max(a,0);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),t.loop?this.slideTo(a+this.loopedSlides,0,!1):this.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},events:{attachEvents:function(){var e=N(),t=this.params,n=this.touchEvents,r=this.el,i=this.wrapperEl,a=this.device,l=this.support;this.onTouchStart=ue.bind(this),this.onTouchMove=ce.bind(this),this.onTouchEnd=de.bind(this),t.cssMode&&(this.onScroll=he.bind(this)),this.onClick=pe.bind(this);var o=!!t.nested;if(!l.touch&&l.pointerEvents)r.addEventListener(n.start,this.onTouchStart,!1),e.addEventListener(n.move,this.onTouchMove,o),e.addEventListener(n.end,this.onTouchEnd,!1);else{if(l.touch){var s=!("touchstart"!==n.start||!l.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.addEventListener(n.start,this.onTouchStart,s),r.addEventListener(n.move,this.onTouchMove,l.passiveListener?{passive:!1,capture:o}:o),r.addEventListener(n.end,this.onTouchEnd,s),n.cancel&&r.addEventListener(n.cancel,this.onTouchEnd,s),me||(e.addEventListener("touchstart",ve),me=!0)}(t.simulateTouch&&!a.ios&&!a.android||t.simulateTouch&&!l.touch&&a.ios)&&(r.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,o),e.addEventListener("mouseup",this.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&r.addEventListener("click",this.onClick,!0),t.cssMode&&i.addEventListener("scroll",this.onScroll),t.updateOnWindowResize?this.on(a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",fe,!0):this.on("observerUpdate",fe,!0)},detachEvents:function(){var e=N(),t=this.params,n=this.touchEvents,r=this.el,i=this.wrapperEl,a=this.device,l=this.support,o=!!t.nested;if(!l.touch&&l.pointerEvents)r.removeEventListener(n.start,this.onTouchStart,!1),e.removeEventListener(n.move,this.onTouchMove,o),e.removeEventListener(n.end,this.onTouchEnd,!1);else{if(l.touch){var s=!("onTouchStart"!==n.start||!l.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.removeEventListener(n.start,this.onTouchStart,s),r.removeEventListener(n.move,this.onTouchMove,o),r.removeEventListener(n.end,this.onTouchEnd,s),n.cancel&&r.removeEventListener(n.cancel,this.onTouchEnd,s)}(t.simulateTouch&&!a.ios&&!a.android||t.simulateTouch&&!l.touch&&a.ios)&&(r.removeEventListener("mousedown",this.onTouchStart,!1),e.removeEventListener("mousemove",this.onTouchMove,o),e.removeEventListener("mouseup",this.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&r.removeEventListener("click",this.onClick,!0),t.cssMode&&i.removeEventListener("scroll",this.onScroll),this.off(a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",fe)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,n=this.loopedSlides,r=void 0===n?0:n,i=this.params,a=this.$el,l=i.breakpoints;if(l&&(!l||0!==Object.keys(l).length)){var o=this.getBreakpoint(l);if(o&&this.currentBreakpoint!==o){var s=o in l?l[o]:void 0;s&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach((function(e){var t=s[e];void 0!==t&&(s[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}));var u=s||this.originalParams,c=i.slidesPerColumn>1,d=u.slidesPerColumn>1;c&&!d?(a.removeClass(i.containerModifierClass+"multirow "+i.containerModifierClass+"multirow-column"),this.emitContainerClasses()):!c&&d&&(a.addClass(i.containerModifierClass+"multirow"),"column"===u.slidesPerColumnFill&&a.addClass(i.containerModifierClass+"multirow-column"),this.emitContainerClasses());var f=u.direction&&u.direction!==i.direction,p=i.loop&&(u.slidesPerView!==i.slidesPerView||f);f&&t&&this.changeDirection(),ee(this.params,u),ee(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=o,this.emit("_beforeBreakpoint",u),p&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-r+this.loopedSlides,0,!1)),this.emit("breakpoint",u)}}},getBreakpoint:function(e){var t=I();if(e){var n=!1,r=Object.keys(e).map((function(e){if("string"==typeof e&&0===e.indexOf("@")){var n=parseFloat(e.substr(1));return{value:t.innerHeight*n,point:e}}return{value:e,point:e}}));r.sort((function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)}));for(var i=0;i<r.length;i+=1){var a=r[i],l=a.point;a.value<=t.innerWidth&&(n=l)}return n||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,n=this.slides.length>0&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&n?this.isLocked=n<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,n=this.rtl,r=this.$el,i=this.device,a=[];a.push("initialized"),a.push(t.direction),t.freeMode&&a.push("free-mode"),t.autoHeight&&a.push("autoheight"),n&&a.push("rtl"),t.slidesPerColumn>1&&(a.push("multirow"),"column"===t.slidesPerColumnFill&&a.push("multirow-column")),i.android&&a.push("android"),i.ios&&a.push("ios"),t.cssMode&&a.push("css-mode"),a.forEach((function(n){e.push(t.containerModifierClass+n)})),r.addClass(e.join(" ")),this.emitContainerClasses()},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" ")),this.emitContainerClasses()}},images:{loadImage:function(e,t,n,r,i,a){var l,o=I();function s(){a&&a()}X(e).parent("picture")[0]||e.complete&&i?s():t?((l=new o.Image).onload=s,l.onerror=s,r&&(l.sizes=r),n&&(l.srcset=n),t&&(l.src=t)):s()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var n=0;n<e.imagesToLoad.length;n+=1){var r=e.imagesToLoad[n];e.loadImage(r,r.currentSrc||r.getAttribute("src"),r.srcset||r.getAttribute("srcset"),r.sizes||r.getAttribute("sizes"),!0,t)}}}},we={},Ce=function(){function e(){for(var t,n,r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];1===i.length&&i[0].constructor&&i[0].constructor===Object?n=i[0]:(t=i[0],n=i[1]),n||(n={}),n=ee({},n),t&&!n.el&&(n.el=t);var l=this;l.support=ne(),l.device=re({userAgent:n.userAgent}),l.browser=ie(),l.eventsListeners={},l.eventsAnyListeners=[],void 0===l.modules&&(l.modules={}),Object.keys(l.modules).forEach((function(e){var t=l.modules[e];if(t.params){var r=Object.keys(t.params)[0],i=t.params[r];if("object"!=typeof i||null===i)return;if(!(r in n)||!("enabled"in i))return;!0===n[r]&&(n[r]={enabled:!0}),"object"!=typeof n[r]||"enabled"in n[r]||(n[r].enabled=!0),n[r]||(n[r]={enabled:!1})}}));var o=ee({},ge);l.useParams(o),l.params=ee({},o,we,n),l.originalParams=ee({},l.params),l.passedParams=ee({},n),l.params&&l.params.on&&Object.keys(l.params.on).forEach((function(e){l.on(e,l.params.on[e])})),l.params&&l.params.onAny&&l.onAny(l.params.onAny),l.$=X;var s=X(l.params.el);if(t=s[0]){if(s.length>1){var u=[];return s.each((function(t){var r=ee({},n,{el:t});u.push(new e(r))})),u}var c,d,f;return t.swiper=l,t&&t.shadowRoot&&t.shadowRoot.querySelector?(c=X(t.shadowRoot.querySelector("."+l.params.wrapperClass))).children=function(e){return s.children(e)}:c=s.children("."+l.params.wrapperClass),ee(l,{$el:s,el:t,$wrapperEl:c,wrapperEl:c[0],classNames:[],slides:X(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===l.params.direction},isVertical:function(){return"vertical"===l.params.direction},rtl:"rtl"===t.dir.toLowerCase()||"rtl"===s.css("direction"),rtlTranslate:"horizontal"===l.params.direction&&("rtl"===t.dir.toLowerCase()||"rtl"===s.css("direction")),wrongRTL:"-webkit-box"===c.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend","touchcancel"],f=["mousedown","mousemove","mouseup"],l.support.pointerEvents&&(f=["pointerdown","pointermove","pointerup"]),l.touchEventsTouch={start:d[0],move:d[1],end:d[2],cancel:d[3]},l.touchEventsDesktop={start:f[0],move:f[1],end:f[2]},l.support.touch||!l.params.simulateTouch?l.touchEventsTouch:l.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:Z(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.useModules(),l.emit("_swiper"),l.params.init&&l.init(),l}}var t,n,r,i=e.prototype;return i.emitContainerClasses=function(){var e=this;if(e.params._emitClasses&&e.el){var t=e.el.className.split(" ").filter((function(t){return 0===t.indexOf("swiper-container")||0===t.indexOf(e.params.containerModifierClass)}));e.emit("_containerClasses",t.join(" "))}},i.getSlideClasses=function(e){var t=this;return e.className.split(" ").filter((function(e){return 0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass)})).join(" ")},i.emitSlidesClasses=function(){var e=this;e.params._emitClasses&&e.el&&e.slides.each((function(t){var n=e.getSlideClasses(t);e.emit("_slideClass",t,n)}))},i.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,n=this.slidesGrid,r=this.size,i=this.activeIndex,a=1;if(e.centeredSlides){for(var l,o=t[i].swiperSlideSize,s=i+1;s<t.length;s+=1)t[s]&&!l&&(a+=1,(o+=t[s].swiperSlideSize)>r&&(l=!0));for(var u=i-1;u>=0;u-=1)t[u]&&!l&&(a+=1,(o+=t[u].swiperSlideSize)>r&&(l=!0))}else for(var c=i+1;c<t.length;c+=1)n[c]-n[i]<r&&(a+=1);return a},i.update=function(){var e=this;if(e&&!e.destroyed){var t=e.snapGrid,n=e.params;n.breakpoints&&e.setBreakpoint(),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(r(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||r(),n.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}function r(){var t=e.rtlTranslate?-1*e.translate:e.translate,n=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(n),e.updateActiveIndex(),e.updateSlidesClasses()}},i.changeDirection=function(e,t){void 0===t&&(t=!0);var n=this.params.direction;return e||(e="horizontal"===n?"vertical":"horizontal"),e===n||"horizontal"!==e&&"vertical"!==e||(this.$el.removeClass(""+this.params.containerModifierClass+n).addClass(""+this.params.containerModifierClass+e),this.emitContainerClasses(),this.params.direction=e,this.slides.each((function(t){"vertical"===e?t.style.width="":t.style.height=""})),this.emit("changeDirection"),t&&this.update()),this},i.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"),this.emit("afterInit"))},i.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var n,r=this,i=r.params,a=r.$el,l=r.$wrapperEl,o=r.slides;return void 0===r.params||r.destroyed||(r.emit("beforeDestroy"),r.initialized=!1,r.detachEvents(),i.loop&&r.loopDestroy(),t&&(r.removeClasses(),a.removeAttr("style"),l.removeAttr("style"),o&&o.length&&o.removeClass([i.slideVisibleClass,i.slideActiveClass,i.slideNextClass,i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),r.emit("destroy"),Object.keys(r.eventsListeners).forEach((function(e){r.off(e)})),!1!==e&&(r.$el[0].swiper=null,n=r,Object.keys(n).forEach((function(e){try{n[e]=null}catch(e){}try{delete n[e]}catch(e){}}))),r.destroyed=!0),null},e.extendDefaults=function(e){ee(we,e)},e.installModule=function(t){e.prototype.modules||(e.prototype.modules={});var n=t.name||Object.keys(e.prototype.modules).length+"_"+Z();e.prototype.modules[n]=t},e.use=function(t){return Array.isArray(t)?(t.forEach((function(t){return e.installModule(t)})),e):(e.installModule(t),e)},t=e,r=[{key:"extendedDefaults",get:function(){return we}},{key:"defaults",get:function(){return ge}}],(n=null)&&ye(t.prototype,n),r&&ye(t,r),e}();Object.keys(be).forEach((function(e){Object.keys(be[e]).forEach((function(t){Ce.prototype[t]=be[e][t]}))})),Ce.use([ae,se]);var Ee=Ce,xe=["init","_direction","touchEventsTarget","initialSlide","_speed","cssMode","updateOnWindowResize","nested","_width","_height","preventInteractionOnTransition","userAgent","url","_edgeSwipeDetection","_edgeSwipeThreshold","_freeMode","_freeModeMomentum","_freeModeMomentumRatio","_freeModeMomentumBounce","_freeModeMomentumBounceRatio","_freeModeMomentumVelocityRatio","_freeModeSticky","_freeModeMinimumVelocity","_autoHeight","setWrapperSize","virtualTranslate","_effect","breakpoints","_spaceBetween","_slidesPerView","_slidesPerColumn","_slidesPerColumnFill","_slidesPerGroup","_slidesPerGroupSkip","_centeredSlides","_centeredSlidesBounds","_slidesOffsetBefore","_slidesOffsetAfter","normalizeSlideIndex","_centerInsufficientSlides","_watchOverflow","roundLengths","touchRatio","touchAngle","simulateTouch","_shortSwipes","_longSwipes","longSwipesRatio","longSwipesMs","_followFinger","allowTouchMove","_threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","_resistance","_resistanceRatio","_watchSlidesProgress","_watchSlidesVisibility","_grabCursor","preventClicks","preventClicksPropagation","_slideToClickedSlide","_preloadImages","updateOnImagesReady","_loop","_loopAdditionalSlides","_loopedSlides","_loopFillGroupWithBlank","loopPreventsSlide","_allowSlidePrev","_allowSlideNext","_swipeHandler","_noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","a11y","autoplay","_controller","coverflowEffect","cubeEffect","fadeEffect","flipEffect","hashNavigation","history","keyboard","lazy","mousewheel","_navigation","_pagination","parallax","_scrollbar","_thumbs","virtual","zoom"];function Te(e,t){var n=t.slidesPerView;if(t.breakpoints){var r=Ee.prototype.getBreakpoint(t.breakpoints),i=r in t.breakpoints?t.breakpoints[r]:void 0;i&&i.slidesPerView&&(n=i.slidesPerView)}var a=Math.ceil(parseFloat(t.loopedSlides||n,10));return(a+=t.loopAdditionalSlides)>e.length&&(a=e.length),a}function Se(){return(Se=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var ke=Object(r.forwardRef)((function(e,t){var n=void 0===e?{}:e,a=n.className,l=n.tag,o=void 0===l?"div":l,s=n.wrapperTag,u=void 0===s?"div":s,c=n.children,d=n.onSwiper,f=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(n,["className","tag","wrapperTag","children","onSwiper"]),p=Object(r.useState)("swiper-container"),h=p[0],m=p[1],v=Object(r.useState)(null),g=v[0],y=v[1],b=Object(r.useState)(!1),P=b[0],_=b[1],M=Object(r.useRef)(!1),O=Object(r.useRef)(null),L=Object(r.useRef)(null),N=Object(r.useRef)(null),z=Object(r.useRef)(null),I=Object(r.useRef)(null),A=Object(r.useRef)(null),D=Object(r.useRef)(null),R=Object(r.useRef)(null),F=function(e){void 0===e&&(e={});var t={on:{}},n={};C(t,Ee.defaults),C(t,Ee.extendedDefaults),t._emitClasses=!0;var r={},i=xe.map((function(e){return e.replace(/_/,"")}));return Object.keys(e).forEach((function(a){i.indexOf(a)>=0?w(e[a])?(t[a]={},n[a]={},C(t[a],e[a]),C(n[a],e[a])):(t[a]=e[a],n[a]=e[a]):0===a.search(/on[A-Z]/)&&"function"==typeof e[a]?t.on[""+a[2].toLowerCase()+a.substr(3)]=e[a]:r[a]=e[a]})),{params:t,passedParams:n,rest:r}}(f),j=F.params,B=F.passedParams,V=F.rest,$=function(e){var t=[],n={"container-start":[],"container-end":[],"wrapper-start":[],"wrapper-end":[]};return function e(r){i.a.Children.toArray(r).forEach((function(r){r.type===i.a.Fragment&&r.props.children?e(r.props.children):r.type&&"SwiperSlide"===r.type.displayName?t.push(r):r.props&&r.props.slot&&n[r.props.slot]?n[r.props.slot].push(r):n["container-end"].push(r)}))}(e),{slides:t,slots:n}}(c),H=$.slides,W=$.slots,U=function(e,t,n,r){var i=[];if(!t)return i;var a=function(e){i.indexOf(e)<0&&i.push(e)},l=r.map((function(e){return e.key})),o=n.map((function(e){return e.key}));return l.join("")!==o.join("")&&a("children"),r.length!==n.length&&a("children"),xe.filter((function(e){return"_"===e[0]})).map((function(e){return e.replace(/_/,"")})).forEach((function(n){if(n in e&&n in t)if(w(e[n])&&w(t[n])){var r=Object.keys(e[n]),i=Object.keys(t[n]);r.length!==i.length?a(n):(r.forEach((function(r){e[n][r]!==t[n][r]&&a(n)})),i.forEach((function(r){e[n][r]!==t[n][r]&&a(n)})))}else e[n]!==t[n]&&a(n)})),i}(B,N.current,H,z.current);N.current=B,z.current=H;var G=function(){_(!P)};return Object.assign(j.on,{_containerClasses:function(e,t){m(t)},_swiper:function(e){e.loopCreate=function(){},e.loopDestroy=function(){},j.loop&&(e.loopedSlides=Te(H,j)),L.current=e,e.virtual&&e.params.virtual.enabled&&(e.virtual.slides=H,e.params.virtual.cache=!1,e.params.virtual.renderExternal=y,e.params.virtual.renderExternalUpdate=!1)}}),L.current&&L.current.on("_beforeBreakpoint",G),Object(r.useEffect)((function(){return function(){L.current&&L.current.off("_beforeBreakpoint",G)}})),Object(r.useEffect)((function(){!M.current&&L.current&&(L.current.emitSlidesClasses(),M.current=!0)})),k((function(){U.length&&L.current&&!L.current.destroyed&&function(e,t,n,r){var i,a,l,o,s,u=r.filter((function(e){return"children"!==e&&"direction"!==e})),c=e.params,d=e.pagination,f=e.navigation,p=e.scrollbar,h=e.virtual,m=e.thumbs;r.includes("thumbs")&&n.thumbs&&n.thumbs.swiper&&c.thumbs&&!c.thumbs.swiper&&(i=!0),r.includes("controller")&&n.controller&&n.controller.control&&c.controller&&!c.controller.control&&(a=!0),r.includes("pagination")&&n.pagination&&n.pagination.el&&c.pagination&&d&&!d.el&&(l=!0),r.includes("scrollbar")&&n.scrollbar&&n.scrollbar.el&&c.scrollbar&&p&&!p.el&&(o=!0),r.includes("navigation")&&n.navigation&&n.navigation.prevEl&&n.navigation.nextEl&&c.navigation&&f&&!f.prevEl&&!f.nextEl&&(s=!0),u.forEach((function(e){w(c[e])&&w(n[e])?C(c[e],n[e]):c[e]=n[e]})),r.includes("children")&&h&&c.virtual.enabled&&(h.slides=t,h.update(!0)),i&&m.init()&&m.update(!0),a&&(e.controller.control=c.controller.control),l&&(d.init(),d.render(),d.update()),o&&(p.init(),p.updateSize(),p.setTranslate()),s&&(f.init(),f.update()),r.includes("allowSlideNext")&&(e.allowSlideNext=n.allowSlideNext),r.includes("allowSlidePrev")&&(e.allowSlidePrev=n.allowSlidePrev),r.includes("direction")&&e.changeDirection(n.direction,!1),e.update()}(L.current,H,B,U)})),k((function(){var e;(e=L.current)&&!e.destroyed&&(e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.lazy&&e.params.lazy.enabled&&e.lazy.load())}),[g]),k((function(){if(t&&(t.current=O.current),O.current)return function(e,t){var n=e.el,r=e.nextEl,i=e.prevEl,a=e.paginationEl,l=e.scrollbarEl;E(t)&&r&&i&&(!0===t.navigation&&(t.navigation={}),t.navigation.nextEl=r,t.navigation.prevEl=i),x(t)&&a&&(!0===t.pagination&&(t.pagination={}),t.pagination.el=a),T(t)&&l&&(!0===t.scrollbar&&(t.scrollbar={}),t.scrollbar.el=l),new Ee(n,t)}({el:O.current,nextEl:I.current,prevEl:A.current,paginationEl:D.current,scrollbarEl:R.current},j),d&&d(L.current),function(){L.current&&!L.current.destroyed&&L.current.destroy(!0,!1)}}),[]),i.a.createElement(o,Se({ref:O,className:S(h+(a?" "+a:""))},V),W["container-start"],E(j)&&i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{ref:A,className:"swiper-button-prev"}),i.a.createElement("div",{ref:I,className:"swiper-button-next"})),T(j)&&i.a.createElement("div",{ref:R,className:"swiper-scrollbar"}),x(j)&&i.a.createElement("div",{ref:D,className:"swiper-pagination"}),i.a.createElement(u,{className:"swiper-wrapper"},W["wrapper-start"],j.virtual?function(e,t,n){var r;if(!n)return null;var a=e.isHorizontal()?((r={})[e.rtlTranslate?"right":"left"]=n.offset+"px",r):{top:n.offset+"px"};return t.filter((function(e,t){return t>=n.from&&t<=n.to})).map((function(t){return i.a.cloneElement(t,{swiper:e,style:a})}))}(L.current,H,g):!j.loop||L.current&&L.current.destroyed?H.map((function(e){return i.a.cloneElement(e,{swiper:L.current})})):function(e,t,n){var r=t.map((function(t,n){return i.a.cloneElement(t,{swiper:e,"data-swiper-slide-index":n})}));function a(e,t,r){return i.a.cloneElement(e,{key:e.key+"-duplicate-"+t+"-"+r,className:(e.props.className||"")+" "+n.slideDuplicateClass})}if(n.loopFillGroupWithBlank){var l=n.slidesPerGroup-r.length%n.slidesPerGroup;if(l!==n.slidesPerGroup)for(var o=0;o<l;o+=1){var s=i.a.createElement("div",{className:n.slideClass+" "+n.slideBlankClass});r.push(s)}}"auto"!==n.slidesPerView||n.loopedSlides||(n.loopedSlides=r.length);var u=Te(r,n),c=[],d=[];return r.forEach((function(e,t){t<u&&d.push(a(e,t,"prepend")),t<r.length&&t>=r.length-u&&c.push(a(e,t,"append"))})),e&&(e.loopedSlides=u),[].concat(c,r,d)}(L.current,H,j),W["wrapper-end"]),W["container-end"])}));function Pe(){return(Pe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}ke.displayName="Swiper";var _e={update:function(){var e=this.rtl,t=this.params.pagination;if(t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var n,r=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,a=this.params.loop?Math.ceil((r-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((n=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>r-1-2*this.loopedSlides&&(n-=r-2*this.loopedSlides),n>a-1&&(n-=a),n<0&&"bullets"!==this.params.paginationType&&(n=a+n)):n=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===t.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var l,o,s,u=this.pagination.bullets;if(t.dynamicBullets&&(this.pagination.bulletSize=u.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(t.dynamicMainBullets+4)+"px"),t.dynamicMainBullets>1&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=n-this.previousIndex,this.pagination.dynamicBulletIndex>t.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=t.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),l=n-this.pagination.dynamicBulletIndex,s=((o=l+(Math.min(u.length,t.dynamicMainBullets)-1))+l)/2),u.removeClass(t.bulletActiveClass+" "+t.bulletActiveClass+"-next "+t.bulletActiveClass+"-next-next "+t.bulletActiveClass+"-prev "+t.bulletActiveClass+"-prev-prev "+t.bulletActiveClass+"-main"),i.length>1)u.each((function(e){var r=X(e),i=r.index();i===n&&r.addClass(t.bulletActiveClass),t.dynamicBullets&&(i>=l&&i<=o&&r.addClass(t.bulletActiveClass+"-main"),i===l&&r.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),i===o&&r.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next"))}));else{var c=u.eq(n),d=c.index();if(c.addClass(t.bulletActiveClass),t.dynamicBullets){for(var f=u.eq(l),p=u.eq(o),h=l;h<=o;h+=1)u.eq(h).addClass(t.bulletActiveClass+"-main");if(this.params.loop)if(d>=u.length-t.dynamicMainBullets){for(var m=t.dynamicMainBullets;m>=0;m-=1)u.eq(u.length-m).addClass(t.bulletActiveClass+"-main");u.eq(u.length-t.dynamicMainBullets-1).addClass(t.bulletActiveClass+"-prev")}else f.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),p.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next");else f.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),p.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next")}}if(t.dynamicBullets){var v=Math.min(u.length,t.dynamicMainBullets+4),g=(this.pagination.bulletSize*v-this.pagination.bulletSize)/2-s*this.pagination.bulletSize,y=e?"right":"left";u.css(this.isHorizontal()?y:"top",g+"px")}}if("fraction"===t.type&&(i.find("."+t.currentClass).text(t.formatFractionCurrent(n+1)),i.find("."+t.totalClass).text(t.formatFractionTotal(a))),"progressbar"===t.type){var b;b=t.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var w=(n+1)/a,C=1,E=1;"horizontal"===b?C=w:E=w,i.find("."+t.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+C+") scaleY("+E+")").transition(this.params.speed)}"custom"===t.type&&t.renderCustom?(i.html(t.renderCustom(this,n+1,a)),this.emit("paginationRender",i[0])):this.emit("paginationUpdate",i[0]),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](t.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,n=this.pagination.$el,r="";if("bullets"===e.type){for(var i=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,a=0;a<i;a+=1)e.renderBullet?r+=e.renderBullet.call(this,a,e.bulletClass):r+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";n.html(r),this.pagination.bullets=n.find("."+e.bulletClass.replace(/ /g,"."))}"fraction"===e.type&&(r=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',n.html(r)),"progressbar"===e.type&&(r=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',n.html(r)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var n=X(t.el);0!==n.length&&(e.params.uniqueNavElements&&"string"==typeof t.el&&n.length>1&&(n=e.$el.find(t.el)),"bullets"===t.type&&t.clickable&&n.addClass(t.clickableClass),n.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(n.addClass(""+t.modifierClass+t.type+"-dynamic"),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&n.addClass(t.progressbarOppositeClass),t.clickable&&n.on("click","."+t.bulletClass.replace(/ /g,"."),(function(t){t.preventDefault();var n=X(this).index()*e.params.slidesPerGroup;e.params.loop&&(n+=e.loopedSlides),e.slideTo(n)})),ee(e.pagination,{$el:n,el:n[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass.replace(/ /g,"."))}}},Me={name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){te(this,{pagination:Pe({dynamicBulletIndex:0},_e)})},on:{init:function(e){e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(e){(e.params.loop||void 0===e.snapIndex)&&e.pagination.update()},snapIndexChange:function(e){e.params.loop||e.pagination.update()},slidesLengthChange:function(e){e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(e){e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(e){e.pagination.destroy()},click:function(e,t){e.params.pagination.el&&e.params.pagination.hideOnClick&&e.pagination.$el.length>0&&!X(t.target).hasClass(e.params.pagination.bulletClass)&&(!0===e.pagination.$el.hasClass(e.params.pagination.hiddenClass)?e.emit("paginationShow"):e.emit("paginationHide"),e.pagination.$el.toggleClass(e.params.pagination.hiddenClass))}}};n(21);var Oe=({product:e})=>{const{title:t,image:n,color:r,isDesign:a,investTime:l,investAmount:o,benefit:s}=e,u="product-item "+(a?"product-item_design":"");return i.a.createElement("div",{className:u,style:{backgroundColor:r}},i.a.createElement("div",{className:"product-item__wrap"},i.a.createElement("div",{className:"product-item__header"},i.a.createElement("div",{className:"product-item__header-text"},i.a.createElement("div",{className:"product-item__header-title"},t)),i.a.createElement("div",{className:"product-item__header-icon"},i.a.createElement("div",{className:"product-item__header-img"},n))),i.a.createElement("div",{className:"product-item__desc description"},i.a.createElement("div",{className:"description__wrap"},i.a.createElement("div",{className:"description__column"},i.a.createElement("div",{className:"description__title"},l),i.a.createElement("div",{className:"description__text"},"срок размещения")),i.a.createElement("div",{className:"description__column"},i.a.createElement("div",{className:"description__title"},o),i.a.createElement("div",{className:"description__text"},"минимальная сумма")))),i.a.createElement("div",{className:"product-item__benefit"},i.a.createElement("div",{className:"product-item__benefit-bg"}),i.a.createElement("div",{className:"product-item__benefit-wrap"},i.a.createElement("div",{className:"product-item__benefit-percent"},s,"%"),i.a.createElement("div",{className:"product-item__benefit-desc"},"максимальная  доходность")))))};const Le=[{id:1,title:"Гарантированная доходность"},{id:2,title:"Регулярная доходность"},{id:3,title:"Ставка на рост"}],Ne=[{id:1,filterId:1,title:"защищённые инвестиции в Alibaba",color:"#f18e4b",isDesign:!1,investTime:"3 мес.",investAmount:"от 300 000 ₽",benefit:10,image:i.a.createElement("svg",{width:"36",height:"19",viewBox:"0 0 36 19",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M3.93108 16.1633C3.78722 16.1489 3.55703 16.0194 3.39878 15.89C1.85943 14.3794 3.83038 12.6386 6.13221 11.6316V8.75428C6.66451 9.09956 6.96663 9.11395 6.98102 9.1571L8.73616 7.41634L8.14632 5.92015C13.2823 4.15061 15.3396 3.47445 19.5116 2.76951L18.7635 2.06457L19.9864 1.37402C22.7917 2.29476 25.4389 2.53933 24.9785 4.89871C25.0936 3.30181 23.1082 2.69758 20.0871 1.84878L19.4972 2.20844L20.6194 3.12917C15.6273 3.99236 12.5486 4.97064 8.89442 6.23665L9.39794 7.53143L7.55647 9.35851C7.85859 9.44483 11.0668 10.5094 14.39 8.19321C14.39 8.19321 14.462 8.15005 14.462 8.12128C14.3613 7.96303 14.1311 7.776 13.8577 7.53143C14.836 7.60336 15.469 8.45217 15.3539 9.34413H14.8936C14.9223 9.0564 14.8648 8.73989 14.7641 8.53848C12.1889 10.4231 9.19653 10.6965 6.65013 9.8045V12.0344C5.41289 12.466 3.21176 13.8327 3.22615 15.1563C3.31246 15.7749 3.62897 16.0051 3.93108 16.1633Z",fill:"black"}),i.a.createElement("path",{d:"M14.4635 15.4263C11.7013 16.8218 9.05414 17.944 4.98277 18.1022C-0.32584 17.9871 -1.14587 14.4624 1.35738 10.7795C3.73115 7.06778 7.5004 3.70135 13.4852 1.60093C15.2259 0.982307 17.7723 0.291757 20.2324 0.248598C23.7715 0.219825 27.2099 1.3132 26.9797 4.7084C26.8502 7.31236 23.0953 10.9665 21.1244 13.5992C20.2756 14.7502 20.1317 15.4983 21.5848 15.4263C26.8358 15.081 31.5834 13.2684 36 11.3837C33.0076 13.4122 17.5709 21.0514 17.5134 15.8435C17.5278 15.1818 17.8299 14.4768 18.3334 13.7287C18.8226 12.9806 19.4987 12.2038 20.2037 11.4125C21.2539 10.2184 23.8722 7.34113 24.7498 5.61475C26.2316 2.39218 22.9227 2.23393 20.0598 1.22688L18.8369 1.91742L19.585 2.62237C15.413 3.31292 13.3557 4.00347 8.21972 5.773L8.80957 7.26919L7.06881 8.99557C7.02565 8.95241 6.76669 8.93803 6.22001 8.59275V11.47C3.93256 12.4771 1.94722 14.2179 3.48658 15.7284C3.64483 15.8579 3.87501 15.9874 4.01888 16.0018C6.83862 17.5843 14.4778 15.4263 14.4635 15.4263Z",fill:"#E28140"}))},{id:2,filterId:1,title:"Нота №81 «Мультибарьер»",color:"#3e4348",isDesign:!0,investTime:"5 лет",investAmount:"от 1 250 $",benefit:15,image:i.a.createElement("svg",{width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M5.34679 2.25224e-07H26.6516C28.0699 -0.000411149 29.4304 0.562727 30.4334 1.56549C31.4364 2.56825 32 3.92846 32 5.34679V26.65C32 29.6039 29.6054 31.9984 26.6516 31.9984H5.34679C2.39358 31.9975 0 29.6033 0 26.65V5.34679C0 2.39383 2.39383 2.25224e-07 5.34679 2.25224e-07ZM24.4983 26.1812C25.4303 26.1812 26.1859 25.4256 26.1859 24.4936L26.1812 7.50629C26.1812 6.57427 25.4256 5.81873 24.4936 5.81873H7.50784C7.06001 5.81873 6.63053 5.99675 6.31401 6.31356C5.99749 6.63037 5.81988 7.06001 5.82029 7.50784V24.4936C5.82029 25.4256 6.57583 26.1812 7.50784 26.1812H24.4983Z",fill:"#3E4348"}),i.a.createElement("path",{d:"M12.6047 20.3376C12.0727 20.3334 11.6437 19.901 11.6437 19.369V12.5877C11.6425 12.3299 11.744 12.0823 11.9258 11.8996C12.1076 11.717 12.3547 11.6143 12.6124 11.6143H19.4031C19.6607 11.6147 19.9075 11.7175 20.0893 11.9001C20.271 12.0827 20.3726 12.3301 20.3718 12.5877V19.3674C20.3726 19.625 20.271 19.8724 20.0893 20.0549C19.9075 20.2376 19.6607 20.3404 19.4031 20.3408L12.6047 20.3376Z",fill:"#3E4348"}))},{id:3,filterId:1,title:"защищённые инвестиции в сбербанк",color:"#53b56c",isDesign:!1,investTime:"3 мес.",investAmount:"от 300 000 ₽",benefit:10,image:i.a.createElement("svg",{width:"32",height:"31",viewBox:"0 0 32 31",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M29.3974 6.02486C29.0487 5.54517 28.7037 5.06549 28.4 4.58203L9.75654 15.3692L0.757293 10.172C0.550748 10.7328 0.424493 11.3204 0.382324 11.917L9.84278 17.4353L29.3974 6.02486Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M9.75647 19.4296L0.0897733 13.8395C0.0182396 14.1834 -0.0107284 14.5348 0.00353064 14.8858C0.00353064 19.1597 1.68903 23.2585 4.68925 26.2806C7.68946 29.3027 11.7586 31.0005 16.0016 31.0005C20.2445 31.0005 24.3137 29.3027 27.3139 26.2806C30.3141 23.2585 31.9996 19.1597 31.9996 14.8858C32.0175 12.3359 31.4232 9.81939 30.2673 7.55078L9.75647 19.4296Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M27.0989 3.22937C26.6432 2.79619 26.1651 2.3877 25.6665 2.00562L9.75656 11.3084L2.0847 6.89687C1.82597 7.37656 1.56349 7.90157 1.25977 8.46812L9.67031 13.3594L27.0989 3.22937Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M24.1065 0.959367C23.5044 0.596261 22.8779 0.275701 22.2317 0L9.75646 7.2368L4.16568 4.06031C3.79071 4.43801 3.41574 4.93281 3.04077 5.41249L9.71521 9.25751L24.1065 0.959367Z",fill:"#53B56C"}))},{id:4,filterId:2,title:"(2) защищённые инвестиции в Alibaba",color:"#f18e4b",isDesign:!1,investTime:"3 мес.",investAmount:"от 300 000 ₽",benefit:10,image:i.a.createElement("svg",{width:"36",height:"19",viewBox:"0 0 36 19",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M3.93108 16.1633C3.78722 16.1489 3.55703 16.0194 3.39878 15.89C1.85943 14.3794 3.83038 12.6386 6.13221 11.6316V8.75428C6.66451 9.09956 6.96663 9.11395 6.98102 9.1571L8.73616 7.41634L8.14632 5.92015C13.2823 4.15061 15.3396 3.47445 19.5116 2.76951L18.7635 2.06457L19.9864 1.37402C22.7917 2.29476 25.4389 2.53933 24.9785 4.89871C25.0936 3.30181 23.1082 2.69758 20.0871 1.84878L19.4972 2.20844L20.6194 3.12917C15.6273 3.99236 12.5486 4.97064 8.89442 6.23665L9.39794 7.53143L7.55647 9.35851C7.85859 9.44483 11.0668 10.5094 14.39 8.19321C14.39 8.19321 14.462 8.15005 14.462 8.12128C14.3613 7.96303 14.1311 7.776 13.8577 7.53143C14.836 7.60336 15.469 8.45217 15.3539 9.34413H14.8936C14.9223 9.0564 14.8648 8.73989 14.7641 8.53848C12.1889 10.4231 9.19653 10.6965 6.65013 9.8045V12.0344C5.41289 12.466 3.21176 13.8327 3.22615 15.1563C3.31246 15.7749 3.62897 16.0051 3.93108 16.1633Z",fill:"black"}),i.a.createElement("path",{d:"M14.4635 15.4263C11.7013 16.8218 9.05414 17.944 4.98277 18.1022C-0.32584 17.9871 -1.14587 14.4624 1.35738 10.7795C3.73115 7.06778 7.5004 3.70135 13.4852 1.60093C15.2259 0.982307 17.7723 0.291757 20.2324 0.248598C23.7715 0.219825 27.2099 1.3132 26.9797 4.7084C26.8502 7.31236 23.0953 10.9665 21.1244 13.5992C20.2756 14.7502 20.1317 15.4983 21.5848 15.4263C26.8358 15.081 31.5834 13.2684 36 11.3837C33.0076 13.4122 17.5709 21.0514 17.5134 15.8435C17.5278 15.1818 17.8299 14.4768 18.3334 13.7287C18.8226 12.9806 19.4987 12.2038 20.2037 11.4125C21.2539 10.2184 23.8722 7.34113 24.7498 5.61475C26.2316 2.39218 22.9227 2.23393 20.0598 1.22688L18.8369 1.91742L19.585 2.62237C15.413 3.31292 13.3557 4.00347 8.21972 5.773L8.80957 7.26919L7.06881 8.99557C7.02565 8.95241 6.76669 8.93803 6.22001 8.59275V11.47C3.93256 12.4771 1.94722 14.2179 3.48658 15.7284C3.64483 15.8579 3.87501 15.9874 4.01888 16.0018C6.83862 17.5843 14.4778 15.4263 14.4635 15.4263Z",fill:"#E28140"}))},{id:5,filterId:2,title:"(2) Нота №81 «Мультибарьер»",color:"#3e4348",isDesign:!0,investTime:"5 лет",investAmount:"от 1 250 $",benefit:15,image:i.a.createElement("svg",{width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M5.34679 2.25224e-07H26.6516C28.0699 -0.000411149 29.4304 0.562727 30.4334 1.56549C31.4364 2.56825 32 3.92846 32 5.34679V26.65C32 29.6039 29.6054 31.9984 26.6516 31.9984H5.34679C2.39358 31.9975 0 29.6033 0 26.65V5.34679C0 2.39383 2.39383 2.25224e-07 5.34679 2.25224e-07ZM24.4983 26.1812C25.4303 26.1812 26.1859 25.4256 26.1859 24.4936L26.1812 7.50629C26.1812 6.57427 25.4256 5.81873 24.4936 5.81873H7.50784C7.06001 5.81873 6.63053 5.99675 6.31401 6.31356C5.99749 6.63037 5.81988 7.06001 5.82029 7.50784V24.4936C5.82029 25.4256 6.57583 26.1812 7.50784 26.1812H24.4983Z",fill:"#3E4348"}),i.a.createElement("path",{d:"M12.6047 20.3376C12.0727 20.3334 11.6437 19.901 11.6437 19.369V12.5877C11.6425 12.3299 11.744 12.0823 11.9258 11.8996C12.1076 11.717 12.3547 11.6143 12.6124 11.6143H19.4031C19.6607 11.6147 19.9075 11.7175 20.0893 11.9001C20.271 12.0827 20.3726 12.3301 20.3718 12.5877V19.3674C20.3726 19.625 20.271 19.8724 20.0893 20.0549C19.9075 20.2376 19.6607 20.3404 19.4031 20.3408L12.6047 20.3376Z",fill:"#3E4348"}))},{id:6,filterId:2,title:"(2) защищённые инвестиции в сбербанк",color:"#53b56c",isDesign:!1,investTime:"3 мес.",investAmount:"от 300 000 ₽",benefit:10,image:i.a.createElement("svg",{width:"32",height:"31",viewBox:"0 0 32 31",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M29.3974 6.02486C29.0487 5.54517 28.7037 5.06549 28.4 4.58203L9.75654 15.3692L0.757293 10.172C0.550748 10.7328 0.424493 11.3204 0.382324 11.917L9.84278 17.4353L29.3974 6.02486Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M9.75647 19.4296L0.0897733 13.8395C0.0182396 14.1834 -0.0107284 14.5348 0.00353064 14.8858C0.00353064 19.1597 1.68903 23.2585 4.68925 26.2806C7.68946 29.3027 11.7586 31.0005 16.0016 31.0005C20.2445 31.0005 24.3137 29.3027 27.3139 26.2806C30.3141 23.2585 31.9996 19.1597 31.9996 14.8858C32.0175 12.3359 31.4232 9.81939 30.2673 7.55078L9.75647 19.4296Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M27.0989 3.22937C26.6432 2.79619 26.1651 2.3877 25.6665 2.00562L9.75656 11.3084L2.0847 6.89687C1.82597 7.37656 1.56349 7.90157 1.25977 8.46812L9.67031 13.3594L27.0989 3.22937Z",fill:"#53B56C"}),i.a.createElement("path",{d:"M24.1065 0.959367C23.5044 0.596261 22.8779 0.275701 22.2317 0L9.75646 7.2368L4.16568 4.06031C3.79071 4.43801 3.41574 4.93281 3.04077 5.41249L9.71521 9.25751L24.1065 0.959367Z",fill:"#53B56C"}))},{id:7,filterId:3,title:"(3) защищённые инвестиции в Alibaba",color:"#f18e4b",isDesign:!1,investTime:"3 мес.",investAmount:"от 300 000 ₽",benefit:10,image:i.a.createElement("svg",{width:"36",height:"19",viewBox:"0 0 36 19",fill:"none",xmlns:"http://www.w3.org/2000/svg"},i.a.createElement("path",{d:"M3.93108 16.1633C3.78722 16.1489 3.55703 16.0194 3.39878 15.89C1.85943 14.3794 3.83038 12.6386 6.13221 11.6316V8.75428C6.66451 9.09956 6.96663 9.11395 6.98102 9.1571L8.73616 7.41634L8.14632 5.92015C13.2823 4.15061 15.3396 3.47445 19.5116 2.76951L18.7635 2.06457L19.9864 1.37402C22.7917 2.29476 25.4389 2.53933 24.9785 4.89871C25.0936 3.30181 23.1082 2.69758 20.0871 1.84878L19.4972 2.20844L20.6194 3.12917C15.6273 3.99236 12.5486 4.97064 8.89442 6.23665L9.39794 7.53143L7.55647 9.35851C7.85859 9.44483 11.0668 10.5094 14.39 8.19321C14.39 8.19321 14.462 8.15005 14.462 8.12128C14.3613 7.96303 14.1311 7.776 13.8577 7.53143C14.836 7.60336 15.469 8.45217 15.3539 9.34413H14.8936C14.9223 9.0564 14.8648 8.73989 14.7641 8.53848C12.1889 10.4231 9.19653 10.6965 6.65013 9.8045V12.0344C5.41289 12.466 3.21176 13.8327 3.22615 15.1563C3.31246 15.7749 3.62897 16.0051 3.93108 16.1633Z",fill:"black"}),i.a.createElement("path",{d:"M14.4635 15.4263C11.7013 16.8218 9.05414 17.944 4.98277 18.1022C-0.32584 17.9871 -1.14587 14.4624 1.35738 10.7795C3.73115 7.06778 7.5004 3.70135 13.4852 1.60093C15.2259 0.982307 17.7723 0.291757 20.2324 0.248598C23.7715 0.219825 27.2099 1.3132 26.9797 4.7084C26.8502 7.31236 23.0953 10.9665 21.1244 13.5992C20.2756 14.7502 20.1317 15.4983 21.5848 15.4263C26.8358 15.081 31.5834 13.2684 36 11.3837C33.0076 13.4122 17.5709 21.0514 17.5134 15.8435C17.5278 15.1818 17.8299 14.4768 18.3334 13.7287C18.8226 12.9806 19.4987 12.2038 20.2037 11.4125C21.2539 10.2184 23.8722 7.34113 24.7498 5.61475C26.2316 2.39218 22.9227 2.23393 20.0598 1.22688L18.8369 1.91742L19.585 2.62237C15.413 3.31292 13.3557 4.00347 8.21972 5.773L8.80957 7.26919L7.06881 8.99557C7.02565 8.95241 6.76669 8.93803 6.22001 8.59275V11.47C3.93256 12.4771 1.94722 14.2179 3.48658 15.7284C3.64483 15.8579 3.87501 15.9874 4.01888 16.0018C6.83862 17.5843 14.4778 15.4263 14.4635 15.4263Z",fill:"#E28140"}))}];n(7),n(22);var ze=({filterId:e,updateFilter:t})=>{const n=Le.map(({id:n,title:r})=>{const a="filters__btn "+(n===e?"filters__btn_active":"");return i.a.createElement(_,{key:n,tag:"div"},i.a.createElement("div",{className:"filters__btn-wrap"},i.a.createElement("button",{className:a,onClick:()=>t(n)},r)))});return i.a.createElement("div",{className:"filters"},i.a.createElement(ke,{tag:"div",grabCursor:!0,slidesPerView:"auto",freeMode:!0,preventClicks:!0,updateOnWindowResize:!0,watchOverflow:!0,breakpoints:{320:{spaceBetween:8},767:{spaceBetween:12},1535:{spaceBetween:16}}},n))};n(23);Ee.use([Me]);var Ie=({products:e,filterId:t,updateFilter:n})=>{const r=e.map(e=>i.a.createElement(_,{key:e.id},i.a.createElement("div",{className:"products__item"},i.a.createElement(Oe,{product:e}))));return i.a.createElement("div",{className:"product-list"},i.a.createElement("div",{className:"product-list__header"},i.a.createElement("div",{className:"product-list__title"},"Лучшие готовые инвестиционные решения"),i.a.createElement("div",{className:"product-list__filters"},i.a.createElement(ze,{filterId:t,updateFilter:n}))),i.a.createElement("div",{className:"product-list__products"},i.a.createElement("div",{className:"product-list__products-wrap"},i.a.createElement(ke,{tag:"div",grabCursor:!0,slidesPerView:"auto",spaceBetween:12,preventClicks:!0,updateOnWindowResize:!0,watchOverflow:!0,breakpoints:{320:{spaceBetween:8},767:{spaceBetween:16}},pagination:{el:".swiper-pagination",clickable:!0}},r),i.a.createElement("div",{className:"product-list__pagination"},i.a.createElement("div",{className:"swiper-pagination"})))))};function Ae(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class De extends r.Component{constructor(...e){super(...e),Ae(this,"state",{filterId:null,products:[]}),Ae(this,"updateProducts",e=>Ne.filter(t=>!e||1===e||t.filterId===e)),Ae(this,"updateFilter",e=>{this.setState({filterId:e,products:this.updateProducts(e)})})}componentDidMount(){this.updateFilter(1)}render(){const{filterId:e,products:t}=this.state;return i.a.createElement(Ie,{filterId:e,products:t,updateFilter:this.updateFilter})}}var Re=De;n(24);var Fe=()=>i.a.createElement("div",{className:"app"},i.a.createElement("div",{className:"container"},i.a.createElement("div",{className:"app__wrap"},i.a.createElement(b,null),i.a.createElement(Re,null))));n(25);var je=()=>i.a.createElement("div",{className:"error-indicator"},i.a.createElement("div",{className:"container"},i.a.createElement("div",{className:"error-indicator__text-wrapper"},i.a.createElement("h1",{className:"error-indicator__title"},"Страница не найдена"))));class Be extends r.Component{constructor(...e){var t,n,r;super(...e),r={hasError:!1},(n="state")in(t=this)?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r}componentDidCatch(){this.setState({hasError:!0})}render(){return this.state.hasError?i.a.createElement(je,null):this.props.children}}var Ve=Be;var $e=(e,t)=>{if(void 0===e)return{filterId:null};switch(t.type){case"UPDATE_FILTER":return{filterId:t.payload};default:return e.filter}};var He=function e(t,n,r){var i;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error("Expected the enhancer to be a function.");return r(e)(t,n)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var a=t,l=n,o=[],s=o,u=!1;function c(){s===o&&(s=o.slice())}function d(){if(u)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return l}function f(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(u)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return c(),s.push(e),function(){if(t){if(u)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,c();var n=s.indexOf(e);s.splice(n,1),o=null}}}function h(e){if(!v(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(u)throw new Error("Reducers may not dispatch actions.");try{u=!0,l=a(l,e)}finally{u=!1}for(var t=o=s,n=0;n<t.length;n++){(0,t[n])()}return e}function g(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");a=e,h({type:m.REPLACE})}function y(){var e,t=f;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(d())}return n(),{unsubscribe:t(n)}}})[p.a]=function(){return this},e}return h({type:m.INIT}),(i={dispatch:h,subscribe:f,getState:d,replaceReducer:g})[p.a]=y,i}((e,t)=>({filter:$e(e,t),newsItem:$e(e,t)}));n(26);l.a.render(i.a.createElement(f,{store:He},i.a.createElement(Ve,null,i.a.createElement("div",{className:"page"},i.a.createElement(Fe,null)))),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zeW1ib2wtb2JzZXJ2YWJsZS9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zeW1ib2wtb2JzZXJ2YWJsZS9lcy9wb255ZmlsbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvUHJvdmlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvcmVkdXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvb2ZmZXJzL29mZmVycy5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL29mZmVycy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3QvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL3JlYWN0L3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL3JlYWN0L3N3aXBlci1zbGlkZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3Nzci13aW5kb3cvc3NyLXdpbmRvdy5lc20uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9kb203L2RvbTcuZXNtLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS91dGlscy9kb20uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL3V0aWxzL2dldC1zdXBwb3J0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS91dGlscy9nZXQtZGV2aWNlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS91dGlscy9nZXQtYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL21vZHVsZXMvcmVzaXplL3Jlc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vbW9kdWxlcy9vYnNlcnZlci9vYnNlcnZlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2V2ZW50cy9vblRvdWNoU3RhcnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9ldmVudHMvb25Ub3VjaE1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9ldmVudHMvb25Ub3VjaEVuZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2V2ZW50cy9vblJlc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2V2ZW50cy9vbkNsaWNrLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvZXZlbnRzL29uU2Nyb2xsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvZXZlbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvY2hlY2stb3ZlcmZsb3cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9kZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2NvcmUtY2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9tb2R1bGFyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvZXZlbnRzLWVtaXR0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvdXBkYXRlU2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3VwZGF0ZS91cGRhdGVTbGlkZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvdXBkYXRlQXV0b0hlaWdodC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3VwZGF0ZS91cGRhdGVTbGlkZXNPZmZzZXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvdXBkYXRlU2xpZGVzUHJvZ3Jlc3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvdXBkYXRlUHJvZ3Jlc3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS91cGRhdGUvdXBkYXRlU2xpZGVzQ2xhc3Nlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3VwZGF0ZS91cGRhdGVBY3RpdmVJbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3VwZGF0ZS91cGRhdGVDbGlja2VkU2xpZGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS90cmFuc2xhdGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS90cmFuc2xhdGUvZ2V0VHJhbnNsYXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvdHJhbnNsYXRlL3NldFRyYW5zbGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3RyYW5zbGF0ZS9taW5UcmFuc2xhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS90cmFuc2xhdGUvbWF4VHJhbnNsYXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvdHJhbnNsYXRlL3RyYW5zbGF0ZVRvLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvdHJhbnNpdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3RyYW5zaXRpb24vc2V0VHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL3RyYW5zaXRpb24vdHJhbnNpdGlvblN0YXJ0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvdHJhbnNpdGlvbi90cmFuc2l0aW9uRW5kLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvc2xpZGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9zbGlkZS9zbGlkZVRvLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvc2xpZGUvc2xpZGVUb0xvb3AuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9zbGlkZS9zbGlkZU5leHQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9zbGlkZS9zbGlkZVByZXYuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9zbGlkZS9zbGlkZVJlc2V0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvc2xpZGUvc2xpZGVUb0Nsb3Nlc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9zbGlkZS9zbGlkZVRvQ2xpY2tlZFNsaWRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvbG9vcC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2xvb3AvbG9vcENyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2xvb3AvbG9vcEZpeC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2xvb3AvbG9vcERlc3Ryb3kuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9ncmFiLWN1cnNvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2dyYWItY3Vyc29yL3NldEdyYWJDdXJzb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9ncmFiLWN1cnNvci91bnNldEdyYWJDdXJzb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9tYW5pcHVsYXRpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9tYW5pcHVsYXRpb24vYXBwZW5kU2xpZGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9tYW5pcHVsYXRpb24vcHJlcGVuZFNsaWRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvbWFuaXB1bGF0aW9uL2FkZFNsaWRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvbWFuaXB1bGF0aW9uL3JlbW92ZVNsaWRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvbWFuaXB1bGF0aW9uL3JlbW92ZUFsbFNsaWRlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2JyZWFrcG9pbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvYnJlYWtwb2ludHMvc2V0QnJlYWtwb2ludC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2JyZWFrcG9pbnRzL2dldEJyZWFrcG9pbnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvY29yZS9jbGFzc2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvY2xhc3Nlcy9hZGRDbGFzc2VzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvY2xhc3Nlcy9yZW1vdmVDbGFzc2VzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvaW1hZ2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9jb21wb25lbnRzL2NvcmUvaW1hZ2VzL2xvYWRJbWFnZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vY29tcG9uZW50cy9jb3JlL2ltYWdlcy9wcmVsb2FkSW1hZ2VzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9yZWFjdC9wYXJhbXMtbGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3QvbG9vcC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3Qvc3dpcGVyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9yZWFjdC9nZXQtcGFyYW1zLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3dpcGVyL2VzbS9yZWFjdC9nZXQtY2hpbGRyZW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL3JlYWN0L2dldC1jaGFuZ2VkLXBhcmFtcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3QvdXBkYXRlLXN3aXBlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3QvdmlydHVhbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N3aXBlci9lc20vcmVhY3QvaW5pdC1zd2lwZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvZXNtL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcHJvZHVjdC1pdGVtL3Byb2R1Y3QtaXRlbS5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Byb2R1Y3QtaXRlbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9kYXRhL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZmlsdGVyLWxpc3QvZmlsdGVyLWxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9maWx0ZXItbGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9wcm9kdWN0LWxpc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29udGFpbmVycy9wcm9kdWN0LWxpc3QtY29udGFpbmVyLmpzIiwid2VicGFjazovLy8uL2NvbnRhaW5lcnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9hcHAvYXBwLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYXBwL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZXJyb3ItaW5kaWNhdG9yL2Vycm9yLWluZGljYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Vycm9yLWluZGljYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Vycm9yLWJvdW5kcnkvZXJyb3ItYm91bmRyeS5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Vycm9yLWJvdW5kcnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vcmVkdWNlcnMvZmlsdGVyLmpzIiwid2VicGFjazovLy8uL2NvbnN0YW50cy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zdG9yZS5qcyIsIndlYnBhY2s6Ly8vLi9yZWR1Y2Vycy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImxlbmd0aCIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsImUiLCJyb290Iiwic2VsZiIsIndpbmRvdyIsImdsb2JhbCIsInJlc3VsdCIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwiLCJvYnNlcnZhYmxlIiwiZm9yIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsIkEiLCJCIiwiaXRlcmF0b3IiLCJDIiwiYSIsImIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJEIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkUiLCJGIiwidGhpcyIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiRyIsIkgiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJFcnJvciIsImZvcmNlVXBkYXRlIiwiSSIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJKIiwiY3VycmVudCIsIksiLCJMIiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiZyIsImsiLCJmIiwiY2hpbGRyZW4iLCJoIiwiQXJyYXkiLCIkJHR5cGVvZiIsIl9vd25lciIsIk8iLCJQIiwiUSIsIlIiLCJwb3AiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJTIiwicHVzaCIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJuZXh0IiwiZG9uZSIsInJlcGxhY2UiLCJlc2NhcGUiLCJ0b1N0cmluZyIsIlciLCJhYSIsIlgiLCJOIiwiWSIsIloiLCJiYSIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiUmVhY3RDdXJyZW50T3duZXIiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJDb21wb25lbnQiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsInNsaWNlIiwiYXBwbHkiLCJvbkVycm9yIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwibGEiLCJtYSIsIm5hIiwib2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJwYSIsInFhIiwicmEiLCJpbmRleE9mIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJ1YSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsImRvY3VtZW50IiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwidG9Mb3dlckNhc2UiLCJVYSIsIlZhIiwidG9VcHBlckNhc2UiLCJ4bGlua0hyZWYiLCJXYSIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwidGVzdCIsIlJhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJtYiIsIm5iIiwicGIiLCJxYiIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInRiIiwieWIiLCJjaGVja2VkIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJHYiIsIkZiIiwiSGIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsImhhcyIsInZjIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJzaGlmdCIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJPYyIsImpkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJrZCIsImxkIiwidHJpbSIsIm1kIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJub2RlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiRGQiLCJFZCIsIkZkIiwiYXV0b0ZvY3VzIiwiR2QiLCJfX2h0bWwiLCJIZCIsInNldFRpbWVvdXQiLCJJZCIsImNsZWFyVGltZW91dCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJkYXRhIiwiTGQiLCJNYXRoIiwicmFuZG9tIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJzZWxlY3QiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsIm9mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkRmIiwiRWYiLCJGZiIsImdldENoaWxkQ29udGV4dCIsIkdmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJIZiIsIklmIiwiSmYiLCJLZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiTGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJNZiIsInVuc3RhYmxlX25vdyIsIk5mIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJPZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiUGYiLCJRZiIsIlJmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJTZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlRmIiwiVWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInFnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJyZyIsInNnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsImNhbGxiYWNrIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwic3RhdGUiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiaW5kZXgiLCJTZyIsIlRnIiwiZWxlbWVudFR5cGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJpaCIsInJlc3BvbmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJxdWV1ZSIsInVoIiwidmgiLCJ3aCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiZGVzdHJveSIsImRlcHMiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInJlYWRDb250ZXh0IiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJwZW5kaW5nUHJvcHMiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwiZWkiLCJmaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdpIiwiaGkiLCJwZW5kaW5nQ29udGV4dCIsIm5pIiwicGkiLCJxaSIsImlpIiwicmV0cnlUaW1lIiwiamkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwia2kiLCJsaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsRXhwaXJhdGlvbiIsInRhaWxNb2RlIiwibWkiLCJyaSIsInNpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsInN0YWNrIiwiQmkiLCJXZWFrU2V0IiwiU2V0IiwiQ2kiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiaW5zdGFuY2UiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiUmkiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsImVsZW1lbnQiLCJZaSIsIlppIiwiJGkiLCJjb21wb25lbnREaWRDYXRjaCIsImFqIiwiY29tcG9uZW50U3RhY2siLCJSaiIsImJqIiwiY2VpbCIsImNqIiwiZGoiLCJraiIsImxqIiwibWoiLCJuaiIsIm9qIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwid2oiLCJ0aW1lb3V0TXMiLCJ4aiIsInlqIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsImRlZmF1bHQiLCJvYiIsIlhqIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJwZW5kaW5nQ2hpbGRyZW4iLCJhayIsImJrIiwiY2siLCJkayIsImVrIiwiZmsiLCJKYyIsIl9pbnRlcm5hbFJvb3QiLCJnayIsImlrIiwiaGFzQXR0cmlidXRlIiwiaGsiLCJqayIsImtrIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJKU09OIiwic3RyaW5naWZ5IiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiWWoiLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlUHJvcHMiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiTGF6eSIsIlBvcnRhbCIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIkZ1bmN0aW9uIiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJSZWFjdFJlZHV4Q29udGV4dCIsIm51bGxMaXN0ZW5lcnMiLCJub3RpZnkiLCJjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24iLCJiYXRjaCIsImZpcnN0IiwiY2xlYXIiLCJsaXN0ZW5lciIsImxpc3RlbmVycyIsInN1YnNjcmliZSIsImlzU3Vic2NyaWJlZCIsInByZXYiLCJTdWJzY3JpcHRpb24iLCJzdG9yZSIsInBhcmVudFN1YiIsInVuc3Vic2NyaWJlIiwiaGFuZGxlQ2hhbmdlV3JhcHBlciIsIl9wcm90byIsImFkZE5lc3RlZFN1YiIsInRyeVN1YnNjcmliZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJvblN0YXRlQ2hhbmdlIiwiQm9vbGVhbiIsInRyeVVuc3Vic2NyaWJlIiwiX3JlZiIsImNvbnRleHRWYWx1ZSIsInN1YnNjcmlwdGlvbiIsInByZXZpb3VzU3RhdGUiLCJnZXRTdGF0ZSIsIkNvbnRleHQiLCJyYW5kb21TdHJpbmciLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJSRVBMQUNFIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJpc1BsYWluT2JqZWN0Iiwib2JqIiwicHJvdG8iLCJuZXdCYXRjaCIsImltYWdlIiwidmlld0JveCIsImZpbGwiLCJ4bWxucyIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJzdHJva2UiLCJyeCIsInRyYW5zZm9ybSIsImN4IiwiY3kiLCJPZmZlcnMiLCJjb2x1bW5zVmlldyIsImNsYXNzTmFtZSIsImlzT2JqZWN0Iiwic3JjIiwibmVlZHNOYXZpZ2F0aW9uIiwicGFyYW1zIiwibmF2aWdhdGlvbiIsIm5leHRFbCIsInByZXZFbCIsIm5lZWRzUGFnaW5hdGlvbiIsInBhZ2luYXRpb24iLCJlbCIsIm5lZWRzU2Nyb2xsYmFyIiwic2Nyb2xsYmFyIiwidW5pcXVlQ2xhc3NlcyIsImNsYXNzTmFtZXMiLCJjbGFzc2VzIiwiZmlsdGVyIiwidW5pcXVlIiwiU3dpcGVyU2xpZGUiLCJfdGVtcCIsImV4dGVybmFsUmVmIiwic2xpZGVEYXRhIiwiX3JlZiR0YWciLCJUYWciLCJfcmVmJGNsYXNzTmFtZSIsInN3aXBlciIsInZpcnR1YWxJbmRleCIsInJlc3QiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJzbGlkZUVsUmVmIiwiX3VzZVN0YXRlIiwic2xpZGVDbGFzc2VzIiwic2V0U2xpZGVDbGFzc2VzIiwidXBkYXRlQ2xhc3NlcyIsImRlc3Ryb3llZCIsIm9uIiwib2ZmIiwiZ2V0U2xpZGVDbGFzc2VzIiwiaXNBY3RpdmUiLCJpc1Zpc2libGUiLCJpc0R1cGxpY2F0ZSIsImlzUHJldiIsImlzTmV4dCIsInJlbmRlckNoaWxkcmVuIiwidW5kZWZpbmVkIiwic3NyRG9jdW1lbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYmx1ciIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiY2hpbGROb2RlcyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaW1wb3J0Tm9kZSIsImhhc2giLCJob3N0IiwiaG9zdG5hbWUiLCJvcmlnaW4iLCJwYXRobmFtZSIsInByb3RvY29sIiwiZ2V0RG9jdW1lbnQiLCJkb2MiLCJzc3JXaW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwicHVzaFN0YXRlIiwiZ28iLCJiYWNrIiwiQ3VzdG9tRXZlbnQiLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsIkltYWdlIiwic2NyZWVuIiwibWF0Y2hNZWRpYSIsImdldFdpbmRvdyIsIndpbiIsIl9nZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX3NldFByb3RvdHlwZU9mIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJfY29uc3RydWN0IiwiUGFyZW50IiwiYXJncyIsIkNsYXNzIiwiX3dyYXBOYXRpdmVTdXBlciIsIl9jYWNoZSIsImZuIiwiV3JhcHBlciIsIndyaXRhYmxlIiwiRG9tNyIsIl9BcnJheSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIml0ZW1zIiwiX3RoaXMiLCJSZWZlcmVuY2VFcnJvciIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJhcnJheUZsYXQiLCJhcnIiLCJyZXMiLCJhcnJheUZpbHRlciIsIiQiLCJzZWxlY3RvciIsImh0bWwiLCJ0b0NyZWF0ZSIsInRlbXBQYXJlbnQiLCJxc2EiLCJ1bmlxdWVBcnJheSIsImFycmF5VW5pcXVlIiwibm9UcmlnZ2VyIiwic2hvcnRjdXQiLCJfbGVuIiwiX2tleSIsInRyaWdnZXIiLCJNZXRob2RzIiwiYWRkQ2xhc3MiLCJfZWwkY2xhc3NMaXN0IiwiY2xhc3NMaXN0IiwicmVtb3ZlQ2xhc3MiLCJfbGVuMiIsIl9rZXkyIiwiX2VsJGNsYXNzTGlzdDIiLCJyZW1vdmUiLCJoYXNDbGFzcyIsIl9sZW40IiwiX2tleTQiLCJ0b2dnbGVDbGFzcyIsIl9sZW4zIiwiX2tleTMiLCJ0b2dnbGUiLCJhdHRyIiwiYXR0cnMiLCJnZXRBdHRyaWJ1dGUiLCJhdHRyTmFtZSIsInJlbW92ZUF0dHIiLCJkdXJhdGlvbiIsInRyYW5zaXRpb25EdXJhdGlvbiIsIl9sZW41IiwiX2tleTUiLCJldmVudFR5cGUiLCJ0YXJnZXRTZWxlY3RvciIsImNhcHR1cmUiLCJoYW5kbGVMaXZlRXZlbnQiLCJldmVudERhdGEiLCJkb203RXZlbnREYXRhIiwidW5zaGlmdCIsIl9wYXJlbnRzIiwicGFyZW50cyIsImhhbmRsZUV2ZW50IiwiaiIsImV2ZW50cyIsIl9ldmVudCIsImRvbTdMaXZlTGlzdGVuZXJzIiwicHJveHlMaXN0ZW5lciIsImV2ZW50IiwiZG9tN0xpc3RlbmVycyIsIl9sZW42IiwiX2tleTYiLCJoYW5kbGVycyIsImhhbmRsZXIiLCJkb203cHJveHkiLCJzcGxpY2UiLCJfbGVuOSIsIl9rZXk5IiwiZXZ0IiwiZGF0YUluZGV4IiwiZGlzcGF0Y2hFdmVudCIsInRyYW5zaXRpb25FbmQiLCJkb20iLCJmaXJlQ2FsbEJhY2siLCJvdXRlcldpZHRoIiwiaW5jbHVkZU1hcmdpbnMiLCJfc3R5bGVzIiwic3R5bGVzIiwib2Zmc2V0V2lkdGgiLCJwYXJzZUZsb2F0Iiwib3V0ZXJIZWlnaHQiLCJfc3R5bGVzMiIsIm9mZnNldEhlaWdodCIsImJveCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFRvcCIsImNsaWVudExlZnQiLCJzY3JvbGxZIiwic2Nyb2xsWCIsImNzcyIsIl9wcm9wIiwiZWFjaCIsImNvbXBhcmVXaXRoIiwibWF0Y2hlcyIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwiZXEiLCJyZXR1cm5JbmRleCIsImFwcGVuZCIsIm5ld0NoaWxkIiwidGVtcERpdiIsInByZXBlbmQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJuZXh0QWxsIiwibmV4dEVscyIsIl9uZXh0IiwicHJldmlvdXNFbGVtZW50U2libGluZyIsInByZXZBbGwiLCJwcmV2RWxzIiwiX3ByZXYiLCJwYXJlbnQiLCJfcGFyZW50IiwiY2xvc2VzdCIsImZpbmQiLCJmb3VuZEVsZW1lbnRzIiwiZm91bmQiLCJtZXRob2ROYW1lIiwiYnJvd3NlciIsIm5leHRUaWNrIiwibmV4dFNvdXJjZSIsImtleXNBcnJheSIsIm5leHRJbmRleCIsImxlbiIsIm5leHRLZXkiLCJkZXNjIiwiYmluZE1vZHVsZU1ldGhvZHMiLCJzdWJLZXkiLCJnZXRTdXBwb3J0IiwidG91Y2giLCJEb2N1bWVudFRvdWNoIiwicG9pbnRlckV2ZW50cyIsIlBvaW50ZXJFdmVudCIsIm1heFRvdWNoUG9pbnRzIiwib2JzZXJ2ZXIiLCJwYXNzaXZlTGlzdGVuZXIiLCJzdXBwb3J0c1Bhc3NpdmUiLCJvcHRzIiwiZ2VzdHVyZXMiLCJjYWxjU3VwcG9ydCIsImdldERldmljZSIsIm92ZXJyaWRlcyIsInN1cHBvcnQiLCJwbGF0Zm9ybSIsImRldmljZSIsImlvcyIsImFuZHJvaWQiLCJzY3JlZW5XaWR0aCIsInNjcmVlbkhlaWdodCIsIm1hdGNoIiwiaXBhZCIsImlwb2QiLCJpcGhvbmUiLCJ3aW5kb3dzIiwibWFjb3MiLCJvcyIsImNhbGNEZXZpY2UiLCJnZXRCcm93c2VyIiwiaXNFZGdlIiwiaXNTYWZhcmkiLCJpc1dlYlZpZXciLCJjYWxjQnJvd3NlciIsInJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJpbml0aWFsaXplZCIsImVtaXQiLCJvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIiLCJpbml0IiwiT2JzZXJ2ZXIiLCJhdHRhY2giLCJNdXRhdGlvbk9ic2VydmVyIiwiV2Via2l0TXV0YXRpb25PYnNlcnZlciIsIm11dGF0aW9ucyIsIm9ic2VydmVyVXBkYXRlIiwib2JzZXJ2ZSIsImF0dHJpYnV0ZXMiLCJjaGlsZExpc3QiLCJjaGFyYWN0ZXJEYXRhIiwib2JzZXJ2ZXJzIiwib2JzZXJ2ZVBhcmVudHMiLCJjb250YWluZXJQYXJlbnRzIiwiJGVsIiwib2JzZXJ2ZVNsaWRlQ2hpbGRyZW4iLCIkd3JhcHBlckVsIiwiZGlzY29ubmVjdCIsIm9uVG91Y2hTdGFydCIsInRvdWNoRXZlbnRzRGF0YSIsImFuaW1hdGluZyIsInByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbiIsIm9yaWdpbmFsRXZlbnQiLCIkdGFyZ2V0RWwiLCJ0b3VjaEV2ZW50c1RhcmdldCIsIndyYXBwZXJFbCIsImlzVG91Y2hFdmVudCIsImlzVG91Y2hlZCIsImlzTW92ZWQiLCJub1N3aXBpbmdDbGFzcyIsInNoYWRvd1Jvb3QiLCJwYXRoIiwibm9Td2lwaW5nIiwibm9Td2lwaW5nU2VsZWN0b3IiLCJhbGxvd0NsaWNrIiwic3dpcGVIYW5kbGVyIiwiY3VycmVudFgiLCJjdXJyZW50WSIsInN0YXJ0WCIsInN0YXJ0WSIsImVkZ2VTd2lwZURldGVjdGlvbiIsImlPU0VkZ2VTd2lwZURldGVjdGlvbiIsImVkZ2VTd2lwZVRocmVzaG9sZCIsImlPU0VkZ2VTd2lwZVRocmVzaG9sZCIsImlubmVyV2lkdGgiLCJhbGxvd1RvdWNoQ2FsbGJhY2tzIiwiaXNTY3JvbGxpbmciLCJzdGFydE1vdmluZyIsInRvdWNoU3RhcnRUaW1lIiwidXBkYXRlU2l6ZSIsInN3aXBlRGlyZWN0aW9uIiwidGhyZXNob2xkIiwiYWxsb3dUaHJlc2hvbGRNb3ZlIiwiZm9ybUVsZW1lbnRzIiwic2hvdWxkUHJldmVudERlZmF1bHQiLCJhbGxvd1RvdWNoTW92ZSIsInRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCIsInRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0IiwiaXNDb250ZW50RWRpdGFibGUiLCJvblRvdWNoTW92ZSIsInJ0bCIsInJ0bFRyYW5zbGF0ZSIsInRhcmdldFRvdWNoIiwicHJldmVudGVkQnlOZXN0ZWRTd2lwZXIiLCJ0b3VjaFJlbGVhc2VPbkVkZ2VzIiwibG9vcCIsImlzVmVydGljYWwiLCJ0cmFuc2xhdGUiLCJtYXhUcmFuc2xhdGUiLCJtaW5UcmFuc2xhdGUiLCJkaWZmWCIsImRpZmZZIiwic3FydCIsInBvdyIsInRvdWNoQW5nbGUiLCJpc0hvcml6b250YWwiLCJhdGFuMiIsImFicyIsIlBJIiwiY3NzTW9kZSIsInRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbiIsIm5lc3RlZCIsImxvb3BGaXgiLCJzdGFydFRyYW5zbGF0ZSIsImdldFRyYW5zbGF0ZSIsInNldFRyYW5zaXRpb24iLCJhbGxvd01vbWVudHVtQm91bmNlIiwiZ3JhYkN1cnNvciIsImFsbG93U2xpZGVOZXh0IiwiYWxsb3dTbGlkZVByZXYiLCJzZXRHcmFiQ3Vyc29yIiwiZGlmZiIsInRvdWNoUmF0aW8iLCJjdXJyZW50VHJhbnNsYXRlIiwiZGlzYWJsZVBhcmVudFN3aXBlciIsInJlc2lzdGFuY2VSYXRpbyIsInJlc2lzdGFuY2UiLCJmb2xsb3dGaW5nZXIiLCJmcmVlTW9kZSIsIndhdGNoU2xpZGVzUHJvZ3Jlc3MiLCJ3YXRjaFNsaWRlc1Zpc2liaWxpdHkiLCJ1cGRhdGVBY3RpdmVJbmRleCIsInVwZGF0ZVNsaWRlc0NsYXNzZXMiLCJ2ZWxvY2l0aWVzIiwicG9zaXRpb24iLCJ1cGRhdGVQcm9ncmVzcyIsInNldFRyYW5zbGF0ZSIsIm9uVG91Y2hFbmQiLCJzbGlkZXNHcmlkIiwic25hcEdyaWQiLCJjdXJyZW50UG9zIiwidG91Y2hFbmRUaW1lIiwidGltZURpZmYiLCJ1cGRhdGVDbGlja2VkU2xpZGUiLCJsYXN0Q2xpY2tUaW1lIiwic2xpZGVUbyIsImFjdGl2ZUluZGV4Iiwic2xpZGVzIiwiZnJlZU1vZGVNb21lbnR1bSIsImxhc3RNb3ZlRXZlbnQiLCJ2ZWxvY2l0eUV2ZW50IiwiZGlzdGFuY2UiLCJ2ZWxvY2l0eSIsImZyZWVNb2RlTWluaW11bVZlbG9jaXR5IiwiZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW8iLCJtb21lbnR1bUR1cmF0aW9uIiwiZnJlZU1vZGVNb21lbnR1bVJhdGlvIiwibW9tZW50dW1EaXN0YW5jZSIsIm5ld1Bvc2l0aW9uIiwiYWZ0ZXJCb3VuY2VQb3NpdGlvbiIsIm5lZWRzTG9vcEZpeCIsImRvQm91bmNlIiwiYm91bmNlQW1vdW50IiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvIiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZSIsImNlbnRlcmVkU2xpZGVzIiwiZnJlZU1vZGVTdGlja3kiLCJuZXh0U2xpZGUiLCJvbmNlIiwibW92ZURpc3RhbmNlIiwiY3VycmVudFNsaWRlU2l6ZSIsInNsaWRlc1NpemVzR3JpZCIsInNwZWVkIiwic2xpZGVUb0Nsb3Nlc3QiLCJ0cmFuc2l0aW9uU3RhcnQiLCJsb25nU3dpcGVzTXMiLCJzdG9wSW5kZXgiLCJncm91cFNpemUiLCJzbGlkZXNQZXJHcm91cFNraXAiLCJzbGlkZXNQZXJHcm91cCIsIl9pbmNyZW1lbnQiLCJyYXRpbyIsImluY3JlbWVudCIsImxvbmdTd2lwZXMiLCJsb25nU3dpcGVzUmF0aW8iLCJzaG9ydFN3aXBlcyIsIm9uUmVzaXplIiwiYnJlYWtwb2ludHMiLCJzZXRCcmVha3BvaW50IiwidXBkYXRlU2xpZGVzIiwic2xpZGVzUGVyVmlldyIsImlzRW5kIiwiaXNCZWdpbm5pbmciLCJhdXRvcGxheSIsInJ1bm5pbmciLCJwYXVzZWQiLCJydW4iLCJ3YXRjaE92ZXJmbG93IiwiY2hlY2tPdmVyZmxvdyIsInByZXZlbnRDbGlja3MiLCJwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJvblNjcm9sbCIsInByZXZpb3VzVHJhbnNsYXRlIiwic2Nyb2xsV2lkdGgiLCJ0cmFuc2xhdGVzRGlmZiIsInByb2dyZXNzIiwiZHVtbXlFdmVudEF0dGFjaGVkIiwiZHVtbXlFdmVudExpc3RlbmVyIiwiZGlyZWN0aW9uIiwiaW5pdGlhbFNsaWRlIiwidXBkYXRlT25XaW5kb3dSZXNpemUiLCJhdXRvSGVpZ2h0Iiwic2V0V3JhcHBlclNpemUiLCJ2aXJ0dWFsVHJhbnNsYXRlIiwiZWZmZWN0Iiwic3BhY2VCZXR3ZWVuIiwic2xpZGVzUGVyQ29sdW1uIiwic2xpZGVzUGVyQ29sdW1uRmlsbCIsImNlbnRlcmVkU2xpZGVzQm91bmRzIiwic2xpZGVzT2Zmc2V0QmVmb3JlIiwic2xpZGVzT2Zmc2V0QWZ0ZXIiLCJub3JtYWxpemVTbGlkZUluZGV4IiwiY2VudGVySW5zdWZmaWNpZW50U2xpZGVzIiwicm91bmRMZW5ndGhzIiwic2ltdWxhdGVUb3VjaCIsInVuaXF1ZU5hdkVsZW1lbnRzIiwic2xpZGVUb0NsaWNrZWRTbGlkZSIsInByZWxvYWRJbWFnZXMiLCJ1cGRhdGVPbkltYWdlc1JlYWR5IiwibG9vcEFkZGl0aW9uYWxTbGlkZXMiLCJsb29wZWRTbGlkZXMiLCJsb29wRmlsbEdyb3VwV2l0aEJsYW5rIiwibG9vcFByZXZlbnRzU2xpZGUiLCJwYXNzaXZlTGlzdGVuZXJzIiwiY29udGFpbmVyTW9kaWZpZXJDbGFzcyIsInNsaWRlQ2xhc3MiLCJzbGlkZUJsYW5rQ2xhc3MiLCJzbGlkZUFjdGl2ZUNsYXNzIiwic2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcyIsInNsaWRlVmlzaWJsZUNsYXNzIiwic2xpZGVEdXBsaWNhdGVDbGFzcyIsInNsaWRlTmV4dENsYXNzIiwic2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MiLCJzbGlkZVByZXZDbGFzcyIsInNsaWRlRHVwbGljYXRlUHJldkNsYXNzIiwid3JhcHBlckNsYXNzIiwicnVuQ2FsbGJhY2tzT25Jbml0IiwiX2VtaXRDbGFzc2VzIiwiX2RlZmluZVByb3BlcnRpZXMiLCJwcm90b3R5cGVzIiwibW9kdWxhciIsInVzZVBhcmFtcyIsImluc3RhbmNlUGFyYW1zIiwibW9kdWxlTmFtZSIsInVzZU1vZHVsZXMiLCJtb2R1bGVzUGFyYW1zIiwibW9kdWxlUGFyYW1zIiwibW9kdWxlRXZlbnROYW1lIiwiZXZlbnRzRW1pdHRlciIsIm1ldGhvZCIsImV2ZW50c0xpc3RlbmVycyIsIm9uY2VIYW5kbGVyIiwiX19lbWl0dGVyUHJveHkiLCJvbkFueSIsImV2ZW50c0FueUxpc3RlbmVycyIsIm9mZkFueSIsImV2ZW50SGFuZGxlciIsImV2ZW50c0FycmF5IiwidXBkYXRlIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJwYXJzZUludCIsIk51bWJlciIsInN3aXBlclNpemUiLCJ3cm9uZ1JUTCIsImlzVmlydHVhbCIsInZpcnR1YWwiLCJlbmFibGVkIiwicHJldmlvdXNTbGlkZXNMZW5ndGgiLCJzbGlkZXNMZW5ndGgiLCJzbGlkZXNGb3JNYXJnaW4iLCJzbGlkZUVsIiwic2xpZGVJbmRleCIsIm9mZnNldEJlZm9yZSIsIm9mZnNldEFmdGVyIiwicHJldmlvdXNTbmFwR3JpZExlbmd0aCIsInByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCIsInNsaWRlUG9zaXRpb24iLCJwcmV2U2xpZGVTaXplIiwic2xpZGVzTnVtYmVyRXZlblRvUm93cyIsInNsaWRlU2l6ZSIsInZpcnR1YWxTaXplIiwibWFyZ2luTGVmdCIsIm1hcmdpblRvcCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luQm90dG9tIiwibWF4IiwibmV3U2xpZGVzR3JpZCIsInNsaWRlc1BlclJvdyIsIm51bUZ1bGxDb2x1bW5zIiwic2xpZGUiLCJuZXdTbGlkZU9yZGVySW5kZXgiLCJjb2x1bW4iLCJyb3ciLCJncm91cEluZGV4Iiwic2xpZGVJbmRleEluR3JvdXAiLCJjb2x1bW5zSW5Hcm91cCIsInNsaWRlU3R5bGVzIiwiY3VycmVudFRyYW5zZm9ybSIsImN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0iLCJ3ZWJraXRUcmFuc2Zvcm0iLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsImJveFNpemluZyIsIl9zbGlkZSQiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0JvdHRvbSIsIl9ib3hTaXppbmciLCJfc2xpZGUkMiIsInN3aXBlclNsaWRlU2l6ZSIsIl9pIiwic2xpZGVzR3JpZEl0ZW0iLCJfaTIiLCJfc2xpZGVzR3JpZEl0ZW0iLCJhbGxTbGlkZXNTaXplIiwic2xpZGVTaXplVmFsdWUiLCJtYXhTbmFwIiwic25hcCIsIl9hbGxTbGlkZXNTaXplIiwiYWxsU2xpZGVzT2Zmc2V0Iiwic25hcEluZGV4IiwidXBkYXRlU2xpZGVzT2Zmc2V0IiwidXBkYXRlQXV0b0hlaWdodCIsImFjdGl2ZVNsaWRlcyIsIm5ld0hlaWdodCIsInZpc2libGVTbGlkZXMiLCJzd2lwZXJTbGlkZU9mZnNldCIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJ1cGRhdGVTbGlkZXNQcm9ncmVzcyIsIm9mZnNldENlbnRlciIsInZpc2libGVTbGlkZXNJbmRleGVzIiwic2xpZGVQcm9ncmVzcyIsInNsaWRlQmVmb3JlIiwic2xpZGVBZnRlciIsIm11bHRpcGxpZXIiLCJ3YXNCZWdpbm5pbmciLCJ3YXNFbmQiLCJhY3RpdmVTbGlkZSIsInJlYWxJbmRleCIsInByZXZTbGlkZSIsImVtaXRTbGlkZXNDbGFzc2VzIiwibmV3QWN0aXZlSW5kZXgiLCJwcmV2aW91c0luZGV4IiwicHJldmlvdXNSZWFsSW5kZXgiLCJwcmV2aW91c1NuYXBJbmRleCIsInNraXAiLCJzbGlkZUZvdW5kIiwiY2xpY2tlZFNsaWRlIiwiY2xpY2tlZEluZGV4IiwiYXhpcyIsIm1hdHJpeCIsImN1clRyYW5zZm9ybSIsInRyYW5zZm9ybU1hdHJpeCIsImN1clN0eWxlIiwiV2ViS2l0Q1NTTWF0cml4IiwiTW96VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsIk1zVHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJtNDEiLCJtNDIiLCJieUNvbnRyb2xsZXIiLCJ0cmFuc2xhdGVUbyIsInJ1bkNhbGxiYWNrcyIsInRyYW5zbGF0ZUJvdW5kcyIsImludGVybmFsIiwibmV3VHJhbnNsYXRlIiwiX3dyYXBwZXJFbCRzY3JvbGxUbyIsImlzSCIsInNjcm9sbFRvIiwiYmVoYXZpb3IiLCJvblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQiLCJkaXIiLCJpbmRleEFzTnVtYmVyIiwiaXNGaW5pdGUiLCJvblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCIsInNsaWRlVG9Mb29wIiwibmV3SW5kZXgiLCJzbGlkZU5leHQiLCJfY2xpZW50TGVmdCIsInNsaWRlUHJldiIsIm5vcm1hbGl6ZSIsInByZXZJbmRleCIsIm5vcm1hbGl6ZWRUcmFuc2xhdGUiLCJub3JtYWxpemVkU25hcEdyaWQiLCJwcmV2U25hcCIsInNsaWRlUmVzZXQiLCJjdXJyZW50U25hcCIsInNsaWRlc1BlclZpZXdEeW5hbWljIiwic2xpZGVUb0luZGV4IiwibG9vcENyZWF0ZSIsImJsYW5rU2xpZGVzTnVtIiwiYmxhbmtOb2RlIiwicHJlcGVuZFNsaWRlcyIsImFwcGVuZFNsaWRlcyIsImNsb25lTm9kZSIsImxvb3BEZXN0cm95IiwibW92aW5nIiwiaXNMb2NrZWQiLCJjdXJzb3IiLCJ1bnNldEdyYWJDdXJzb3IiLCJtYW5pcHVsYXRpb24iLCJhcHBlbmRTbGlkZSIsInByZXBlbmRTbGlkZSIsImFkZFNsaWRlIiwiYWN0aXZlSW5kZXhCdWZmZXIiLCJiYXNlTGVuZ3RoIiwic2xpZGVzQnVmZmVyIiwiY3VycmVudFNsaWRlIiwicmVtb3ZlU2xpZGUiLCJzbGlkZXNJbmRleGVzIiwiaW5kZXhUb1JlbW92ZSIsInJlbW92ZUFsbFNsaWRlcyIsImF0dGFjaEV2ZW50cyIsInRvdWNoRXZlbnRzIiwibW92ZSIsInBhc3NpdmUiLCJjYW5jZWwiLCJkZXRhY2hFdmVudHMiLCJfc3dpcGVyJGxvb3BlZFNsaWRlcyIsImJyZWFrcG9pbnQiLCJnZXRCcmVha3BvaW50IiwiY3VycmVudEJyZWFrcG9pbnQiLCJicmVha3BvaW50T25seVBhcmFtcyIsInBhcmFtVmFsdWUiLCJicmVha3BvaW50UGFyYW1zIiwib3JpZ2luYWxQYXJhbXMiLCJ3YXNNdWx0aVJvdyIsImlzTXVsdGlSb3ciLCJlbWl0Q29udGFpbmVyQ2xhc3NlcyIsImRpcmVjdGlvbkNoYW5nZWQiLCJuZWVkc1JlTG9vcCIsImNoYW5nZURpcmVjdGlvbiIsInBvaW50cyIsInBvaW50IiwibWluUmF0aW8iLCJzdWJzdHIiLCJpbm5lckhlaWdodCIsInNvcnQiLCJfcG9pbnRzJGkiLCJ3YXNMb2NrZWQiLCJsYXN0U2xpZGVQb3NpdGlvbiIsImFkZENsYXNzZXMiLCJzdWZmaXhlcyIsInN1ZmZpeCIsInJlbW92ZUNsYXNzZXMiLCJpbWFnZXMiLCJsb2FkSW1hZ2UiLCJpbWFnZUVsIiwic3Jjc2V0Iiwic2l6ZXMiLCJjaGVja0ZvckNvbXBsZXRlIiwib25SZWFkeSIsImNvbXBsZXRlIiwib25sb2FkIiwib25lcnJvciIsImltYWdlc0xvYWRlZCIsImltYWdlc1RvTG9hZCIsImN1cnJlbnRTcmMiLCJleHRlbmRlZERlZmF1bHRzIiwiU3dpcGVyIiwibW9kdWxlUGFyYW1OYW1lIiwic3dpcGVyUGFyYW1zIiwiZGVmYXVsdHMiLCJwYXNzZWRQYXJhbXMiLCJldmVudE5hbWUiLCJzd2lwZXJzIiwiY29udGFpbmVyRWwiLCJuZXdQYXJhbXMiLCJkZXNrdG9wIiwidG91Y2hFdmVudHNUb3VjaCIsInRvdWNoRXZlbnRzRGVza3RvcCIsImNsaWNrVGltZW91dCIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwic3B2IiwiYnJlYWtMb29wIiwidHJhbnNsYXRlVmFsdWUiLCJuZXdEaXJlY3Rpb24iLCJuZWVkVXBkYXRlIiwiY3VycmVudERpcmVjdGlvbiIsImRlbGV0ZUluc3RhbmNlIiwiY2xlYW5TdHlsZXMiLCJleHRlbmREZWZhdWx0cyIsIm5ld0RlZmF1bHRzIiwiaW5zdGFsbE1vZHVsZSIsInVzZSIsInByb3RvdHlwZUdyb3VwIiwicHJvdG9NZXRob2QiLCJwYXJhbXNMaXN0IiwiY2FsY0xvb3BlZFNsaWRlcyIsInNsaWRlc1BlclZpZXdQYXJhbXMiLCJleHRlcm5hbEVsUmVmIiwiX3JlZiR3cmFwcGVyVGFnIiwid3JhcHBlclRhZyIsIldyYXBwZXJUYWciLCJvblN3aXBlciIsImNvbnRhaW5lckNsYXNzZXMiLCJzZXRDb250YWluZXJDbGFzc2VzIiwiX3VzZVN0YXRlMiIsInZpcnR1YWxEYXRhIiwic2V0VmlydHVhbERhdGEiLCJfdXNlU3RhdGUzIiwiYnJlYWtwb2ludENoYW5nZWQiLCJzZXRCcmVha3BvaW50Q2hhbmdlZCIsImluaXRpYWxpemVkUmVmIiwic3dpcGVyRWxSZWYiLCJzd2lwZXJSZWYiLCJvbGRQYXNzZWRQYXJhbXNSZWYiLCJvbGRTbGlkZXMiLCJuZXh0RWxSZWYiLCJwcmV2RWxSZWYiLCJwYWdpbmF0aW9uRWxSZWYiLCJzY3JvbGxiYXJFbFJlZiIsIl9nZXRQYXJhbXMiLCJhbGxvd2VkUGFyYW1zIiwiZ2V0UGFyYW1zIiwicmVzdFByb3BzIiwiX2dldENoaWxkcmVuIiwic2xvdHMiLCJwcm9jZXNzQ2hpbGRyZW4iLCJzbG90IiwiZ2V0Q2hpbGRyZW4iLCJjaGFuZ2VkUGFyYW1zIiwib2xkUGFyYW1zIiwib2xkQ2hpbGRyZW4iLCJhZGRLZXkiLCJvbGRDaGlsZHJlbktleXMiLCJjaGlsZHJlbktleXMiLCJuZXdLZXlzIiwib2xkS2V5cyIsIm5ld0tleSIsIm9sZEtleSIsImdldENoYW5nZWRQYXJhbXMiLCJvbkJlZm9yZUJyZWFrcG9pbnQiLCJfY29udGFpbmVyQ2xhc3NlcyIsIl9zd2lwZXIiLCJjYWNoZSIsInJlbmRlckV4dGVybmFsIiwicmVuZGVyRXh0ZXJuYWxVcGRhdGUiLCJuZWVkVGh1bWJzSW5pdCIsIm5lZWRDb250cm9sbGVySW5pdCIsIm5lZWRQYWdpbmF0aW9uSW5pdCIsIm5lZWRTY3JvbGxiYXJJbml0IiwibmVlZE5hdmlnYXRpb25Jbml0IiwidXBkYXRlUGFyYW1zIiwiY3VycmVudFBhcmFtcyIsInRodW1icyIsImluY2x1ZGVzIiwiY29udHJvbGxlciIsImNvbnRyb2wiLCJ1cGRhdGVTd2lwZXIiLCJsb2FkIiwicGFnaW5hdGlvbkVsIiwic2Nyb2xsYmFyRWwiLCJpbml0U3dpcGVyIiwicmVuZGVyVmlydHVhbCIsIm1vZGlmaWVkU2xpZGVzIiwiZHVwbGljYXRlU2xpZGUiLCJibGFua1NsaWRlIiwicmVuZGVyTG9vcCIsIlBhZ2luYXRpb24iLCJ0b3RhbCIsInBhZ2luYXRpb25UeXBlIiwiYnVsbGV0cyIsImZpcnN0SW5kZXgiLCJsYXN0SW5kZXgiLCJtaWRJbmRleCIsImR5bmFtaWNCdWxsZXRzIiwiYnVsbGV0U2l6ZSIsImR5bmFtaWNNYWluQnVsbGV0cyIsImR5bmFtaWNCdWxsZXRJbmRleCIsImJ1bGxldEFjdGl2ZUNsYXNzIiwiYnVsbGV0IiwiJGJ1bGxldCIsImJ1bGxldEluZGV4IiwiJGZpcnN0RGlzcGxheWVkQnVsbGV0IiwiJGxhc3REaXNwbGF5ZWRCdWxsZXQiLCJkeW5hbWljQnVsbGV0c0xlbmd0aCIsImJ1bGxldHNPZmZzZXQiLCJvZmZzZXRQcm9wIiwiY3VycmVudENsYXNzIiwiZm9ybWF0RnJhY3Rpb25DdXJyZW50IiwidG90YWxDbGFzcyIsImZvcm1hdEZyYWN0aW9uVG90YWwiLCJwcm9ncmVzc2JhckRpcmVjdGlvbiIsInByb2dyZXNzYmFyT3Bwb3NpdGUiLCJzY2FsZSIsInNjYWxlWCIsInNjYWxlWSIsInByb2dyZXNzYmFyRmlsbENsYXNzIiwicmVuZGVyQ3VzdG9tIiwibG9ja0NsYXNzIiwicGFnaW5hdGlvbkhUTUwiLCJudW1iZXJPZkJ1bGxldHMiLCJyZW5kZXJCdWxsZXQiLCJidWxsZXRDbGFzcyIsImJ1bGxldEVsZW1lbnQiLCJyZW5kZXJGcmFjdGlvbiIsInJlbmRlclByb2dyZXNzYmFyIiwiY2xpY2thYmxlIiwiY2xpY2thYmxlQ2xhc3MiLCJtb2RpZmllckNsYXNzIiwicHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzIiwiaGlkZGVuQ2xhc3MiLCJoaWRlT25DbGljayIsImFjdGl2ZUluZGV4Q2hhbmdlIiwic25hcEluZGV4Q2hhbmdlIiwic2xpZGVzTGVuZ3RoQ2hhbmdlIiwic25hcEdyaWRMZW5ndGhDaGFuZ2UiLCJjbGljayIsIlByb2R1Y3RJdGVtIiwicHJvZHVjdCIsInRpdGxlIiwiaXNEZXNpZ24iLCJpbnZlc3RUaW1lIiwiaW52ZXN0QW1vdW50IiwiYmVuZWZpdCIsImJhY2tncm91bmRDb2xvciIsImZpbHRlckxpc3REYXRhIiwicHJvZHVjdExpc3REYXRhIiwiZmlsdGVySWQiLCJGaWx0ZXJMaXN0IiwidXBkYXRlRmlsdGVyIiwiZmlsdGVyc1ZpZXciLCIzMjAiLCI3NjciLCIxNTM1IiwiU3dpcGVyQ29yZSIsIlByb2R1Y3RMaXN0IiwicHJvZHVjdHMiLCJwcm9kdWN0c1ZpZXciLCJpdGVtIiwiUHJvZHVjdExpc3RDb250YWluZXIiLCJ1cGRhdGVQcm9kdWN0cyIsIkFwcCIsIkVycm9ySW5kaWNhdG9yIiwiRXJyb3JCb3VuZHJ5IiwiaGFzRXJyb3IiLCJjcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiX3JlZjIiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJyZXBsYWNlUmVkdWNlciIsIm5leHRSZWR1Y2VyIiwib3V0ZXJTdWJzY3JpYmUiLCJvYnNlcnZlU3RhdGUiLCJuZXdzSXRlbSIsInVwZGF0ZU5ld3NJdGVtIiwiUmVhY3RET00iXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FB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U3NxQyxlQUFlIiwiZmlsZSI6Im1haW4uMWViMDFiODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMjcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHBvbnlmaWxsIGZyb20gJy4vcG9ueWZpbGwuanMnO1xuXG52YXIgcm9vdDtcblxuaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gc2VsZjtcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IGdsb2JhbDtcbn0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IG1vZHVsZTtcbn0gZWxzZSB7XG4gIHJvb3QgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xufVxuXG52YXIgcmVzdWx0ID0gcG9ueWZpbGwocm9vdCk7XG5leHBvcnQgZGVmYXVsdCByZXN1bHQ7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsKHJvb3QpIHtcblx0dmFyIHJlc3VsdDtcblx0dmFyIFN5bWJvbCA9IHJvb3QuU3ltYm9sO1xuXG5cdGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0aWYgKFN5bWJvbC5vYnNlcnZhYmxlKSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2wub2JzZXJ2YWJsZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sKCdvYnNlcnZhYmxlJyk7XG5cdFx0XHRTeW1ib2wub2JzZXJ2YWJsZSA9IHJlc3VsdDtcblx0XHR9XG5cdH0gZWxzZSB7XG5cdFx0cmVzdWx0ID0gJ0BAb2JzZXJ2YWJsZSc7XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjE0LjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTQuMFwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTQuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCB2YXIgUmVhY3RSZWR1eENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUmVhY3RSZWR1eENvbnRleHQuZGlzcGxheU5hbWUgPSAnUmVhY3RSZWR1eCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0UmVkdXhDb250ZXh0OyIsIi8vIERlZmF1bHQgdG8gYSBkdW1teSBcImJhdGNoXCIgaW1wbGVtZW50YXRpb24gdGhhdCBqdXN0IHJ1bnMgdGhlIGNhbGxiYWNrXG5mdW5jdGlvbiBkZWZhdWx0Tm9vcEJhdGNoKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbnZhciBiYXRjaCA9IGRlZmF1bHROb29wQmF0Y2g7IC8vIEFsbG93IGluamVjdGluZyBhbm90aGVyIGJhdGNoaW5nIGZ1bmN0aW9uIGxhdGVyXG5cbmV4cG9ydCB2YXIgc2V0QmF0Y2ggPSBmdW5jdGlvbiBzZXRCYXRjaChuZXdCYXRjaCkge1xuICByZXR1cm4gYmF0Y2ggPSBuZXdCYXRjaDtcbn07IC8vIFN1cHBseSBhIGdldHRlciBqdXN0IHRvIHNraXAgZGVhbGluZyB3aXRoIEVTTSBiaW5kaW5nc1xuXG5leHBvcnQgdmFyIGdldEJhdGNoID0gZnVuY3Rpb24gZ2V0QmF0Y2goKSB7XG4gIHJldHVybiBiYXRjaDtcbn07IiwiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgdmFyIGJhdGNoID0gZ2V0QmF0Y2goKTtcbiAgdmFyIGZpcnN0ID0gbnVsbDtcbiAgdmFyIGxhc3QgPSBudWxsO1xuICByZXR1cm4ge1xuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIGZpcnN0ID0gbnVsbDtcbiAgICAgIGxhc3QgPSBudWxsO1xuICAgIH0sXG4gICAgbm90aWZ5OiBmdW5jdGlvbiBub3RpZnkoKSB7XG4gICAgICBiYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICAgIGxpc3RlbmVyLmNhbGxiYWNrKCk7XG4gICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IFtdO1xuICAgICAgdmFyIGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxpc3RlbmVycztcbiAgICB9LFxuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxhc3QgPSB7XG4gICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgbmV4dDogbnVsbCxcbiAgICAgICAgcHJldjogbGFzdFxuICAgICAgfTtcblxuICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXJzdCA9IGxpc3RlbmVyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGZpcnN0ID09PSBudWxsKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChsaXN0ZW5lci5uZXh0KSB7XG4gICAgICAgICAgbGlzdGVuZXIubmV4dC5wcmV2ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsYXN0ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaXJzdCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlciA9IHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmFkZE5lc3RlZFN1YiA9IGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRoaXMudHJ5U3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeU5lc3RlZFN1YnMgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAodGhpcy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU3RhdGVDaGFuZ2UoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbywgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcblxuZnVuY3Rpb24gUHJvdmlkZXIoX3JlZikge1xuICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlLFxuICAgICAgY29udGV4dCA9IF9yZWYuY29udGV4dCxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjtcbiAgdmFyIGNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlKTtcbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzO1xuICAgIHJldHVybiB7XG4gICAgICBzdG9yZTogc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgIH07XG4gIH0sIFtzdG9yZV0pO1xuICB2YXIgcHJldmlvdXNTdGF0ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpO1xuICB9LCBbc3RvcmVdKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gY29udGV4dFZhbHVlLnN1YnNjcmlwdGlvbjtcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAocHJldmlvdXNTdGF0ZSAhPT0gc3RvcmUuZ2V0U3RhdGUoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IG51bGw7XG4gICAgfTtcbiAgfSwgW2NvbnRleHRWYWx1ZSwgcHJldmlvdXNTdGF0ZV0pO1xuICB2YXIgQ29udGV4dCA9IGNvbnRleHQgfHwgUmVhY3RSZWR1eENvbnRleHQ7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICB9LCBjaGlsZHJlbik7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFByb3ZpZGVyLnByb3BUeXBlcyA9IHtcbiAgICBzdG9yZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGRpc3BhdGNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KSxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyOyIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnOyAvLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci4gV2UgbmVlZCB1c2VMYXlvdXRFZmZlY3QgdG8gZW5zdXJlIHRoZSBzdG9yZVxuLy8gc3Vic2NyaXB0aW9uIGNhbGxiYWNrIGFsd2F5cyBoYXMgdGhlIHNlbGVjdG9yIGZyb20gdGhlIGxhdGVzdCByZW5kZXIgY29tbWl0XG4vLyBhdmFpbGFibGUsIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgaGFwcGVuIGJldHdlZW4gcmVuZGVyIGFuZCB0aGUgZWZmZWN0LFxuLy8gd2hpY2ggbWF5IGNhdXNlIG1pc3NlZCB1cGRhdGVzOyB3ZSBhbHNvIG11c3QgZW5zdXJlIHRoZSBzdG9yZSBzdWJzY3JpcHRpb25cbi8vIGlzIGNyZWF0ZWQgc3luY2hyb25vdXNseSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBvY2N1ciBiZWZvcmUgdGhlXG4vLyBzdWJzY3JpcHRpb24gaXMgY3JlYXRlZCBhbmQgYW4gaW5jb25zaXN0ZW50IHN0YXRlIG1heSBiZSBvYnNlcnZlZFxuXG5leHBvcnQgdmFyIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgIT09ICd1bmRlZmluZWQnID8gdXNlTGF5b3V0RWZmZWN0IDogdXNlRWZmZWN0OyIsImltcG9ydCAkJG9ic2VydmFibGUgZnJvbSAnc3ltYm9sLW9ic2VydmFibGUnO1xuXG4vKipcbiAqIFRoZXNlIGFyZSBwcml2YXRlIGFjdGlvbiB0eXBlcyByZXNlcnZlZCBieSBSZWR1eC5cbiAqIEZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB5b3UgbXVzdCByZXR1cm4gdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBJZiB0aGUgY3VycmVudCBzdGF0ZSBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS5cbiAqIERvIG5vdCByZWZlcmVuY2UgdGhlc2UgYWN0aW9uIHR5cGVzIGRpcmVjdGx5IGluIHlvdXIgY29kZS5cbiAqL1xudmFyIHJhbmRvbVN0cmluZyA9IGZ1bmN0aW9uIHJhbmRvbVN0cmluZygpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KS5zcGxpdCgnJykuam9pbignLicpO1xufTtcblxudmFyIEFjdGlvblR5cGVzID0ge1xuICBJTklUOiBcIkBAcmVkdXgvSU5JVFwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFJFUExBQ0U6IFwiQEByZWR1eC9SRVBMQUNFXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUFJPQkVfVU5LTk9XTl9BQ1RJT046IGZ1bmN0aW9uIFBST0JFX1VOS05PV05fQUNUSU9OKCkge1xuICAgIHJldHVybiBcIkBAcmVkdXgvUFJPQkVfVU5LTk9XTl9BQ1RJT05cIiArIHJhbmRvbVN0cmluZygpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gb2JqO1xuXG4gIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopID09PSBwcm90bztcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAqIFRoZSBvbmx5IHdheSB0byBjaGFuZ2UgdGhlIGRhdGEgaW4gdGhlIHN0b3JlIGlzIHRvIGNhbGwgYGRpc3BhdGNoKClgIG9uIGl0LlxuICpcbiAqIFRoZXJlIHNob3VsZCBvbmx5IGJlIGEgc2luZ2xlIHN0b3JlIGluIHlvdXIgYXBwLiBUbyBzcGVjaWZ5IGhvdyBkaWZmZXJlbnRcbiAqIHBhcnRzIG9mIHRoZSBzdGF0ZSB0cmVlIHJlc3BvbmQgdG8gYWN0aW9ucywgeW91IG1heSBjb21iaW5lIHNldmVyYWwgcmVkdWNlcnNcbiAqIGludG8gYSBzaW5nbGUgcmVkdWNlciBmdW5jdGlvbiBieSB1c2luZyBgY29tYmluZVJlZHVjZXJzYC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWR1Y2VyIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBuZXh0IHN0YXRlIHRyZWUsIGdpdmVuXG4gKiB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgYWN0aW9uIHRvIGhhbmRsZS5cbiAqXG4gKiBAcGFyYW0ge2FueX0gW3ByZWxvYWRlZFN0YXRlXSBUaGUgaW5pdGlhbCBzdGF0ZS4gWW91IG1heSBvcHRpb25hbGx5IHNwZWNpZnkgaXRcbiAqIHRvIGh5ZHJhdGUgdGhlIHN0YXRlIGZyb20gdGhlIHNlcnZlciBpbiB1bml2ZXJzYWwgYXBwcywgb3IgdG8gcmVzdG9yZSBhXG4gKiBwcmV2aW91c2x5IHNlcmlhbGl6ZWQgdXNlciBzZXNzaW9uLlxuICogSWYgeW91IHVzZSBgY29tYmluZVJlZHVjZXJzYCB0byBwcm9kdWNlIHRoZSByb290IHJlZHVjZXIgZnVuY3Rpb24sIHRoaXMgbXVzdCBiZVxuICogYW4gb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUgYXMgYGNvbWJpbmVSZWR1Y2Vyc2Aga2V5cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZW5oYW5jZXJdIFRoZSBzdG9yZSBlbmhhbmNlci4gWW91IG1heSBvcHRpb25hbGx5IHNwZWNpZnkgaXRcbiAqIHRvIGVuaGFuY2UgdGhlIHN0b3JlIHdpdGggdGhpcmQtcGFydHkgY2FwYWJpbGl0aWVzIHN1Y2ggYXMgbWlkZGxld2FyZSxcbiAqIHRpbWUgdHJhdmVsLCBwZXJzaXN0ZW5jZSwgZXRjLiBUaGUgb25seSBzdG9yZSBlbmhhbmNlciB0aGF0IHNoaXBzIHdpdGggUmVkdXhcbiAqIGlzIGBhcHBseU1pZGRsZXdhcmUoKWAuXG4gKlxuICogQHJldHVybnMge1N0b3JlfSBBIFJlZHV4IHN0b3JlIHRoYXQgbGV0cyB5b3UgcmVhZCB0aGUgc3RhdGUsIGRpc3BhdGNoIGFjdGlvbnNcbiAqIGFuZCBzdWJzY3JpYmUgdG8gY2hhbmdlcy5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVTdG9yZShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpIHtcbiAgdmFyIF9yZWYyO1xuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgYXJndW1lbnRzWzNdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJdCBsb29rcyBsaWtlIHlvdSBhcmUgcGFzc2luZyBzZXZlcmFsIHN0b3JlIGVuaGFuY2VycyB0byAnICsgJ2NyZWF0ZVN0b3JlKCkuIFRoaXMgaXMgbm90IHN1cHBvcnRlZC4gSW5zdGVhZCwgY29tcG9zZSB0aGVtICcgKyAndG9nZXRoZXIgdG8gYSBzaW5nbGUgZnVuY3Rpb24uJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBlbmhhbmNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgcmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIGN1cnJlbnRSZWR1Y2VyID0gcmVkdWNlcjtcbiAgdmFyIGN1cnJlbnRTdGF0ZSA9IHByZWxvYWRlZFN0YXRlO1xuICB2YXIgY3VycmVudExpc3RlbmVycyA9IFtdO1xuICB2YXIgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnM7XG4gIHZhciBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gIC8qKlxuICAgKiBUaGlzIG1ha2VzIGEgc2hhbGxvdyBjb3B5IG9mIGN1cnJlbnRMaXN0ZW5lcnMgc28gd2UgY2FuIHVzZVxuICAgKiBuZXh0TGlzdGVuZXJzIGFzIGEgdGVtcG9yYXJ5IGxpc3Qgd2hpbGUgZGlzcGF0Y2hpbmcuXG4gICAqXG4gICAqIFRoaXMgcHJldmVudHMgYW55IGJ1Z3MgYXJvdW5kIGNvbnN1bWVycyBjYWxsaW5nXG4gICAqIHN1YnNjcmliZS91bnN1YnNjcmliZSBpbiB0aGUgbWlkZGxlIG9mIGEgZGlzcGF0Y2guXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKSB7XG4gICAgaWYgKG5leHRMaXN0ZW5lcnMgPT09IGN1cnJlbnRMaXN0ZW5lcnMpIHtcbiAgICAgIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzLnNsaWNlKCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZWFkcyB0aGUgc3RhdGUgdHJlZSBtYW5hZ2VkIGJ5IHRoZSBzdG9yZS5cbiAgICpcbiAgICogQHJldHVybnMge2FueX0gVGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBvZiB5b3VyIGFwcGxpY2F0aW9uLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIGdldFN0YXRlKCkge1xuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IGNhbGwgc3RvcmUuZ2V0U3RhdGUoKSB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnVGhlIHJlZHVjZXIgaGFzIGFscmVhZHkgcmVjZWl2ZWQgdGhlIHN0YXRlIGFzIGFuIGFyZ3VtZW50LiAnICsgJ1Bhc3MgaXQgZG93biBmcm9tIHRoZSB0b3AgcmVkdWNlciBpbnN0ZWFkIG9mIHJlYWRpbmcgaXQgZnJvbSB0aGUgc3RvcmUuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZTtcbiAgfVxuICAvKipcbiAgICogQWRkcyBhIGNoYW5nZSBsaXN0ZW5lci4gSXQgd2lsbCBiZSBjYWxsZWQgYW55IHRpbWUgYW4gYWN0aW9uIGlzIGRpc3BhdGNoZWQsXG4gICAqIGFuZCBzb21lIHBhcnQgb2YgdGhlIHN0YXRlIHRyZWUgbWF5IHBvdGVudGlhbGx5IGhhdmUgY2hhbmdlZC4gWW91IG1heSB0aGVuXG4gICAqIGNhbGwgYGdldFN0YXRlKClgIHRvIHJlYWQgdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBpbnNpZGUgdGhlIGNhbGxiYWNrLlxuICAgKlxuICAgKiBZb3UgbWF5IGNhbGwgYGRpc3BhdGNoKClgIGZyb20gYSBjaGFuZ2UgbGlzdGVuZXIsIHdpdGggdGhlIGZvbGxvd2luZ1xuICAgKiBjYXZlYXRzOlxuICAgKlxuICAgKiAxLiBUaGUgc3Vic2NyaXB0aW9ucyBhcmUgc25hcHNob3R0ZWQganVzdCBiZWZvcmUgZXZlcnkgYGRpc3BhdGNoKClgIGNhbGwuXG4gICAqIElmIHlvdSBzdWJzY3JpYmUgb3IgdW5zdWJzY3JpYmUgd2hpbGUgdGhlIGxpc3RlbmVycyBhcmUgYmVpbmcgaW52b2tlZCwgdGhpc1xuICAgKiB3aWxsIG5vdCBoYXZlIGFueSBlZmZlY3Qgb24gdGhlIGBkaXNwYXRjaCgpYCB0aGF0IGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzcy5cbiAgICogSG93ZXZlciwgdGhlIG5leHQgYGRpc3BhdGNoKClgIGNhbGwsIHdoZXRoZXIgbmVzdGVkIG9yIG5vdCwgd2lsbCB1c2UgYSBtb3JlXG4gICAqIHJlY2VudCBzbmFwc2hvdCBvZiB0aGUgc3Vic2NyaXB0aW9uIGxpc3QuXG4gICAqXG4gICAqIDIuIFRoZSBsaXN0ZW5lciBzaG91bGQgbm90IGV4cGVjdCB0byBzZWUgYWxsIHN0YXRlIGNoYW5nZXMsIGFzIHRoZSBzdGF0ZVxuICAgKiBtaWdodCBoYXZlIGJlZW4gdXBkYXRlZCBtdWx0aXBsZSB0aW1lcyBkdXJpbmcgYSBuZXN0ZWQgYGRpc3BhdGNoKClgIGJlZm9yZVxuICAgKiB0aGUgbGlzdGVuZXIgaXMgY2FsbGVkLiBJdCBpcywgaG93ZXZlciwgZ3VhcmFudGVlZCB0aGF0IGFsbCBzdWJzY3JpYmVyc1xuICAgKiByZWdpc3RlcmVkIGJlZm9yZSB0aGUgYGRpc3BhdGNoKClgIHN0YXJ0ZWQgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGUgbGF0ZXN0XG4gICAqIHN0YXRlIGJ5IHRoZSB0aW1lIGl0IGV4aXRzLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBsaXN0ZW5lciBBIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgb24gZXZlcnkgZGlzcGF0Y2guXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiB0byByZW1vdmUgdGhpcyBjaGFuZ2UgbGlzdGVuZXIuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbGlzdGVuZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZWxpc3RlbmVyIGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgfVxuXG4gICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgIG5leHRMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKCFpc1N1YnNjcmliZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICAgIH1cblxuICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgICB2YXIgaW5kZXggPSBuZXh0TGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICAgICAgbmV4dExpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgY3VycmVudExpc3RlbmVycyA9IG51bGw7XG4gICAgfTtcbiAgfVxuICAvKipcbiAgICogRGlzcGF0Y2hlcyBhbiBhY3Rpb24uIEl0IGlzIHRoZSBvbmx5IHdheSB0byB0cmlnZ2VyIGEgc3RhdGUgY2hhbmdlLlxuICAgKlxuICAgKiBUaGUgYHJlZHVjZXJgIGZ1bmN0aW9uLCB1c2VkIHRvIGNyZWF0ZSB0aGUgc3RvcmUsIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlXG4gICAqIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGdpdmVuIGBhY3Rpb25gLiBJdHMgcmV0dXJuIHZhbHVlIHdpbGxcbiAgICogYmUgY29uc2lkZXJlZCB0aGUgKipuZXh0Kiogc3RhdGUgb2YgdGhlIHRyZWUsIGFuZCB0aGUgY2hhbmdlIGxpc3RlbmVyc1xuICAgKiB3aWxsIGJlIG5vdGlmaWVkLlxuICAgKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvbmx5IHN1cHBvcnRzIHBsYWluIG9iamVjdCBhY3Rpb25zLiBJZiB5b3Ugd2FudCB0b1xuICAgKiBkaXNwYXRjaCBhIFByb21pc2UsIGFuIE9ic2VydmFibGUsIGEgdGh1bmssIG9yIHNvbWV0aGluZyBlbHNlLCB5b3UgbmVlZCB0b1xuICAgKiB3cmFwIHlvdXIgc3RvcmUgY3JlYXRpbmcgZnVuY3Rpb24gaW50byB0aGUgY29ycmVzcG9uZGluZyBtaWRkbGV3YXJlLiBGb3JcbiAgICogZXhhbXBsZSwgc2VlIHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgYHJlZHV4LXRodW5rYCBwYWNrYWdlLiBFdmVuIHRoZVxuICAgKiBtaWRkbGV3YXJlIHdpbGwgZXZlbnR1YWxseSBkaXNwYXRjaCBwbGFpbiBvYmplY3QgYWN0aW9ucyB1c2luZyB0aGlzIG1ldGhvZC5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IGFjdGlvbiBBIHBsYWluIG9iamVjdCByZXByZXNlbnRpbmcg4oCcd2hhdCBjaGFuZ2Vk4oCdLiBJdCBpc1xuICAgKiBhIGdvb2QgaWRlYSB0byBrZWVwIGFjdGlvbnMgc2VyaWFsaXphYmxlIHNvIHlvdSBjYW4gcmVjb3JkIGFuZCByZXBsYXkgdXNlclxuICAgKiBzZXNzaW9ucywgb3IgdXNlIHRoZSB0aW1lIHRyYXZlbGxpbmcgYHJlZHV4LWRldnRvb2xzYC4gQW4gYWN0aW9uIG11c3QgaGF2ZVxuICAgKiBhIGB0eXBlYCBwcm9wZXJ0eSB3aGljaCBtYXkgbm90IGJlIGB1bmRlZmluZWRgLiBJdCBpcyBhIGdvb2QgaWRlYSB0byB1c2VcbiAgICogc3RyaW5nIGNvbnN0YW50cyBmb3IgYWN0aW9uIHR5cGVzLlxuICAgKlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBGb3IgY29udmVuaWVuY2UsIHRoZSBzYW1lIGFjdGlvbiBvYmplY3QgeW91IGRpc3BhdGNoZWQuXG4gICAqXG4gICAqIE5vdGUgdGhhdCwgaWYgeW91IHVzZSBhIGN1c3RvbSBtaWRkbGV3YXJlLCBpdCBtYXkgd3JhcCBgZGlzcGF0Y2goKWAgdG9cbiAgICogcmV0dXJuIHNvbWV0aGluZyBlbHNlIChmb3IgZXhhbXBsZSwgYSBQcm9taXNlIHlvdSBjYW4gYXdhaXQpLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGlmICghaXNQbGFpbk9iamVjdChhY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbXVzdCBiZSBwbGFpbiBvYmplY3RzLiAnICsgJ1VzZSBjdXN0b20gbWlkZGxld2FyZSBmb3IgYXN5bmMgYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG1heSBub3QgaGF2ZSBhbiB1bmRlZmluZWQgXCJ0eXBlXCIgcHJvcGVydHkuICcgKyAnSGF2ZSB5b3UgbWlzc3BlbGxlZCBhIGNvbnN0YW50PycpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGN1cnJlbnRSZWR1Y2VyID0gbmV4dFJlZHVjZXI7IC8vIFRoaXMgYWN0aW9uIGhhcyBhIHNpbWlsaWFyIGVmZmVjdCB0byBBY3Rpb25UeXBlcy5JTklULlxuICAgIC8vIEFueSByZWR1Y2VycyB0aGF0IGV4aXN0ZWQgaW4gYm90aCB0aGUgbmV3IGFuZCBvbGQgcm9vdFJlZHVjZXJcbiAgICAvLyB3aWxsIHJlY2VpdmUgdGhlIHByZXZpb3VzIHN0YXRlLiBUaGlzIGVmZmVjdGl2ZWx5IHBvcHVsYXRlc1xuICAgIC8vIHRoZSBuZXcgc3RhdGUgdHJlZSB3aXRoIGFueSByZWxldmFudCBkYXRhIGZyb20gdGhlIG9sZCBvbmUuXG5cbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5SRVBMQUNFXG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEludGVyb3BlcmFiaWxpdHkgcG9pbnQgZm9yIG9ic2VydmFibGUvcmVhY3RpdmUgbGlicmFyaWVzLlxuICAgKiBAcmV0dXJucyB7b2JzZXJ2YWJsZX0gQSBtaW5pbWFsIG9ic2VydmFibGUgb2Ygc3RhdGUgY2hhbmdlcy5cbiAgICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgb2JzZXJ2YWJsZSBwcm9wb3NhbDpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JzZXJ2YWJsZVxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIG9ic2VydmFibGUoKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICB2YXIgb3V0ZXJTdWJzY3JpYmUgPSBzdWJzY3JpYmU7XG4gICAgcmV0dXJuIF9yZWYgPSB7XG4gICAgICAvKipcbiAgICAgICAqIFRoZSBtaW5pbWFsIG9ic2VydmFibGUgc3Vic2NyaXB0aW9uIG1ldGhvZC5cbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYnNlcnZlciBBbnkgb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgYXMgYW4gb2JzZXJ2ZXIuXG4gICAgICAgKiBUaGUgb2JzZXJ2ZXIgb2JqZWN0IHNob3VsZCBoYXZlIGEgYG5leHRgIG1ldGhvZC5cbiAgICAgICAqIEByZXR1cm5zIHtzdWJzY3JpcHRpb259IEFuIG9iamVjdCB3aXRoIGFuIGB1bnN1YnNjcmliZWAgbWV0aG9kIHRoYXQgY2FuXG4gICAgICAgKiBiZSB1c2VkIHRvIHVuc3Vic2NyaWJlIHRoZSBvYnNlcnZhYmxlIGZyb20gdGhlIHN0b3JlLCBhbmQgcHJldmVudCBmdXJ0aGVyXG4gICAgICAgKiBlbWlzc2lvbiBvZiB2YWx1ZXMgZnJvbSB0aGUgb2JzZXJ2YWJsZS5cbiAgICAgICAqL1xuICAgICAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUob2JzZXJ2ZXIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvYnNlcnZlciAhPT0gJ29iamVjdCcgfHwgb2JzZXJ2ZXIgPT09IG51bGwpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCB0aGUgb2JzZXJ2ZXIgdG8gYmUgYW4gb2JqZWN0LicpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gb2JzZXJ2ZVN0YXRlKCkge1xuICAgICAgICAgIGlmIChvYnNlcnZlci5uZXh0KSB7XG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0KGdldFN0YXRlKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIG9ic2VydmVTdGF0ZSgpO1xuICAgICAgICB2YXIgdW5zdWJzY3JpYmUgPSBvdXRlclN1YnNjcmliZShvYnNlcnZlU3RhdGUpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHVuc3Vic2NyaWJlOiB1bnN1YnNjcmliZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0sIF9yZWZbJCRvYnNlcnZhYmxlXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sIF9yZWY7XG4gIH0gLy8gV2hlbiBhIHN0b3JlIGlzIGNyZWF0ZWQsIGFuIFwiSU5JVFwiIGFjdGlvbiBpcyBkaXNwYXRjaGVkIHNvIHRoYXQgZXZlcnlcbiAgLy8gcmVkdWNlciByZXR1cm5zIHRoZWlyIGluaXRpYWwgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gIC8vIHRoZSBpbml0aWFsIHN0YXRlIHRyZWUuXG5cblxuICBkaXNwYXRjaCh7XG4gICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICB9KTtcbiAgcmV0dXJuIF9yZWYyID0ge1xuICAgIGRpc3BhdGNoOiBkaXNwYXRjaCxcbiAgICBzdWJzY3JpYmU6IHN1YnNjcmliZSxcbiAgICBnZXRTdGF0ZTogZ2V0U3RhdGUsXG4gICAgcmVwbGFjZVJlZHVjZXI6IHJlcGxhY2VSZWR1Y2VyXG4gIH0sIF9yZWYyWyQkb2JzZXJ2YWJsZV0gPSBvYnNlcnZhYmxlLCBfcmVmMjtcbn1cblxuLyoqXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgd2FybmluZyBtZXNzYWdlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNvbnNvbGUuZXJyb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICB9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuXG5cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuXG59XG5cbmZ1bmN0aW9uIGdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlKGtleSwgYWN0aW9uKSB7XG4gIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uICYmIGFjdGlvbi50eXBlO1xuICB2YXIgYWN0aW9uRGVzY3JpcHRpb24gPSBhY3Rpb25UeXBlICYmIFwiYWN0aW9uIFxcXCJcIiArIFN0cmluZyhhY3Rpb25UeXBlKSArIFwiXFxcIlwiIHx8ICdhbiBhY3Rpb24nO1xuICByZXR1cm4gXCJHaXZlbiBcIiArIGFjdGlvbkRlc2NyaXB0aW9uICsgXCIsIHJlZHVjZXIgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZC4gXCIgKyBcIlRvIGlnbm9yZSBhbiBhY3Rpb24sIHlvdSBtdXN0IGV4cGxpY2l0bHkgcmV0dXJuIHRoZSBwcmV2aW91cyBzdGF0ZS4gXCIgKyBcIklmIHlvdSB3YW50IHRoaXMgcmVkdWNlciB0byBob2xkIG5vIHZhbHVlLCB5b3UgY2FuIHJldHVybiBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiO1xufVxuXG5mdW5jdGlvbiBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKGlucHV0U3RhdGUsIHJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSkge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBhcmd1bWVudE5hbWUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLklOSVQgPyAncHJlbG9hZGVkU3RhdGUgYXJndW1lbnQgcGFzc2VkIHRvIGNyZWF0ZVN0b3JlJyA6ICdwcmV2aW91cyBzdGF0ZSByZWNlaXZlZCBieSB0aGUgcmVkdWNlcic7XG5cbiAgaWYgKHJlZHVjZXJLZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiAnU3RvcmUgZG9lcyBub3QgaGF2ZSBhIHZhbGlkIHJlZHVjZXIuIE1ha2Ugc3VyZSB0aGUgYXJndW1lbnQgcGFzc2VkICcgKyAndG8gY29tYmluZVJlZHVjZXJzIGlzIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIHJlZHVjZXJzLic7XG4gIH1cblxuICBpZiAoIWlzUGxhaW5PYmplY3QoaW5wdXRTdGF0ZSkpIHtcbiAgICByZXR1cm4gXCJUaGUgXCIgKyBhcmd1bWVudE5hbWUgKyBcIiBoYXMgdW5leHBlY3RlZCB0eXBlIG9mIFxcXCJcIiArIHt9LnRvU3RyaW5nLmNhbGwoaW5wdXRTdGF0ZSkubWF0Y2goL1xccyhbYS16fEEtWl0rKS8pWzFdICsgXCJcXFwiLiBFeHBlY3RlZCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIFwiICsgKFwia2V5czogXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCJcIik7XG4gIH1cblxuICB2YXIgdW5leHBlY3RlZEtleXMgPSBPYmplY3Qua2V5cyhpbnB1dFN0YXRlKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhcmVkdWNlcnMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAhdW5leHBlY3RlZEtleUNhY2hlW2tleV07XG4gIH0pO1xuICB1bmV4cGVjdGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XSA9IHRydWU7XG4gIH0pO1xuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gXCJVbmV4cGVjdGVkIFwiICsgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDEgPyAna2V5cycgOiAna2V5JykgKyBcIiBcIiArIChcIlxcXCJcIiArIHVuZXhwZWN0ZWRLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiIGZvdW5kIGluIFwiICsgYXJndW1lbnROYW1lICsgXCIuIFwiKSArIFwiRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiBcIiArIChcIlxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiLiBVbmV4cGVjdGVkIGtleXMgd2lsbCBiZSBpZ25vcmVkLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgICB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkIGR1cmluZyBpbml0aWFsaXphdGlvbi4gXCIgKyBcIklmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlIHJlZHVjZXIgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCBcIiArIFwiZXhwbGljaXRseSByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBcIiArIFwibm90IGJlIHVuZGVmaW5lZC4gSWYgeW91IGRvbid0IHdhbnQgdG8gc2V0IGEgdmFsdWUgZm9yIHRoaXMgcmVkdWNlciwgXCIgKyBcInlvdSBjYW4gdXNlIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCIpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcih1bmRlZmluZWQsIHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlBST0JFX1VOS05PV05fQUNUSU9OKClcbiAgICB9KSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlZHVjZXIgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHByb2JlZCB3aXRoIGEgcmFuZG9tIHR5cGUuIFwiICsgKFwiRG9uJ3QgdHJ5IHRvIGhhbmRsZSBcIiArIEFjdGlvblR5cGVzLklOSVQgKyBcIiBvciBvdGhlciBhY3Rpb25zIGluIFxcXCJyZWR1eC8qXFxcIiBcIikgKyBcIm5hbWVzcGFjZS4gVGhleSBhcmUgY29uc2lkZXJlZCBwcml2YXRlLiBJbnN0ZWFkLCB5b3UgbXVzdCByZXR1cm4gdGhlIFwiICsgXCJjdXJyZW50IHN0YXRlIGZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB1bmxlc3MgaXQgaXMgdW5kZWZpbmVkLCBcIiArIFwiaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIFwiICsgXCJhY3Rpb24gdHlwZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IG5vdCBiZSB1bmRlZmluZWQsIGJ1dCBjYW4gYmUgbnVsbC5cIik7XG4gICAgfVxuICB9KTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgZGlmZmVyZW50IHJlZHVjZXIgZnVuY3Rpb25zLCBpbnRvIGEgc2luZ2xlXG4gKiByZWR1Y2VyIGZ1bmN0aW9uLiBJdCB3aWxsIGNhbGwgZXZlcnkgY2hpbGQgcmVkdWNlciwgYW5kIGdhdGhlciB0aGVpciByZXN1bHRzXG4gKiBpbnRvIGEgc2luZ2xlIHN0YXRlIG9iamVjdCwgd2hvc2Uga2V5cyBjb3JyZXNwb25kIHRvIHRoZSBrZXlzIG9mIHRoZSBwYXNzZWRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWR1Y2VycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGNvcnJlc3BvbmQgdG8gZGlmZmVyZW50XG4gKiByZWR1Y2VyIGZ1bmN0aW9ucyB0aGF0IG5lZWQgdG8gYmUgY29tYmluZWQgaW50byBvbmUuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluXG4gKiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhcyByZWR1Y2Vyc2Agc3ludGF4LiBUaGUgcmVkdWNlcnMgbWF5IG5ldmVyIHJldHVyblxuICogdW5kZWZpbmVkIGZvciBhbnkgYWN0aW9uLiBJbnN0ZWFkLCB0aGV5IHNob3VsZCByZXR1cm4gdGhlaXIgaW5pdGlhbCBzdGF0ZVxuICogaWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGVtIHdhcyB1bmRlZmluZWQsIGFuZCB0aGUgY3VycmVudCBzdGF0ZSBmb3IgYW55XG4gKiB1bnJlY29nbml6ZWQgYWN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSByZWR1Y2VyIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBldmVyeSByZWR1Y2VyIGluc2lkZSB0aGVcbiAqIHBhc3NlZCBvYmplY3QsIGFuZCBidWlsZHMgYSBzdGF0ZSBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycykge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBmaW5hbFJlZHVjZXJzID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWR1Y2VyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSByZWR1Y2VyS2V5c1tpXTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdhcm5pbmcoXCJObyByZWR1Y2VyIHByb3ZpZGVkIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cblxuICB2YXIgZmluYWxSZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKGZpbmFsUmVkdWNlcnMpOyAvLyBUaGlzIGlzIHVzZWQgdG8gbWFrZSBzdXJlIHdlIGRvbid0IHdhcm4gYWJvdXQgdGhlIHNhbWVcbiAgLy8ga2V5cyBtdWx0aXBsZSB0aW1lcy5cblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlID0ge307XG4gIH1cblxuICB2YXIgc2hhcGVBc3NlcnRpb25FcnJvcjtcblxuICB0cnkge1xuICAgIGFzc2VydFJlZHVjZXJTaGFwZShmaW5hbFJlZHVjZXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSBlO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbWJpbmF0aW9uKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoc2hhcGVBc3NlcnRpb25FcnJvcikge1xuICAgICAgdGhyb3cgc2hhcGVBc3NlcnRpb25FcnJvcjtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHdhcm5pbmdNZXNzYWdlID0gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShzdGF0ZSwgZmluYWxSZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpO1xuXG4gICAgICBpZiAod2FybmluZ01lc3NhZ2UpIHtcbiAgICAgICAgd2FybmluZyh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGhhc0NoYW5nZWQgPSBmYWxzZTtcbiAgICB2YXIgbmV4dFN0YXRlID0ge307XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcblxuICAgICAgaWYgKHR5cGVvZiBuZXh0U3RhdGVGb3JLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBlcnJvck1lc3NhZ2UgPSBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShfa2V5LCBhY3Rpb24pO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgICAgIH1cblxuICAgICAgbmV4dFN0YXRlW19rZXldID0gbmV4dFN0YXRlRm9yS2V5O1xuICAgICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgbmV4dFN0YXRlRm9yS2V5ICE9PSBwcmV2aW91c1N0YXRlRm9yS2V5O1xuICAgIH1cblxuICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IGZpbmFsUmVkdWNlcktleXMubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhzdGF0ZSkubGVuZ3RoO1xuICAgIHJldHVybiBoYXNDaGFuZ2VkID8gbmV4dFN0YXRlIDogc3RhdGU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoKGFjdGlvbkNyZWF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG4vKipcbiAqIFR1cm5zIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGFjdGlvbiBjcmVhdG9ycywgaW50byBhbiBvYmplY3Qgd2l0aCB0aGVcbiAqIHNhbWUga2V5cywgYnV0IHdpdGggZXZlcnkgZnVuY3Rpb24gd3JhcHBlZCBpbnRvIGEgYGRpc3BhdGNoYCBjYWxsIHNvIHRoZXlcbiAqIG1heSBiZSBpbnZva2VkIGRpcmVjdGx5LiBUaGlzIGlzIGp1c3QgYSBjb252ZW5pZW5jZSBtZXRob2QsIGFzIHlvdSBjYW4gY2FsbFxuICogYHN0b3JlLmRpc3BhdGNoKE15QWN0aW9uQ3JlYXRvcnMuZG9Tb21ldGhpbmcoKSlgIHlvdXJzZWxmIGp1c3QgZmluZS5cbiAqXG4gKiBGb3IgY29udmVuaWVuY2UsIHlvdSBjYW4gYWxzbyBwYXNzIGFuIGFjdGlvbiBjcmVhdG9yIGFzIHRoZSBmaXJzdCBhcmd1bWVudCxcbiAqIGFuZCBnZXQgYSBkaXNwYXRjaCB3cmFwcGVkIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3JzKGFjdGlvbkNyZWF0b3JzLCBkaXNwYXRjaCkge1xuICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3JzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3JzLCBkaXNwYXRjaCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3JzICE9PSAnb2JqZWN0JyB8fCBhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImJpbmRBY3Rpb25DcmVhdG9ycyBleHBlY3RlZCBhbiBvYmplY3Qgb3IgYSBmdW5jdGlvbiwgaW5zdGVhZCByZWNlaXZlZCBcIiArIChhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBhY3Rpb25DcmVhdG9ycykgKyBcIi4gXCIgKyBcIkRpZCB5b3Ugd3JpdGUgXFxcImltcG9ydCBBY3Rpb25DcmVhdG9ycyBmcm9tXFxcIiBpbnN0ZWFkIG9mIFxcXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXFxcIj9cIik7XG4gIH1cblxuICB2YXIgYm91bmRBY3Rpb25DcmVhdG9ycyA9IHt9O1xuXG4gIGZvciAodmFyIGtleSBpbiBhY3Rpb25DcmVhdG9ycykge1xuICAgIHZhciBhY3Rpb25DcmVhdG9yID0gYWN0aW9uQ3JlYXRvcnNba2V5XTtcblxuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBib3VuZEFjdGlvbkNyZWF0b3JzO1xufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCkpO1xuICB9XG5cbiAgaWYgKGVudW1lcmFibGVPbmx5KSBrZXlzID0ga2V5cy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlO1xuICB9KTtcbiAgcmV0dXJuIGtleXM7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQyKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuXG4gICAgaWYgKGkgJSAyKSB7XG4gICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbi8qKlxuICogQ29tcG9zZXMgc2luZ2xlLWFyZ3VtZW50IGZ1bmN0aW9ucyBmcm9tIHJpZ2h0IHRvIGxlZnQuIFRoZSByaWdodG1vc3RcbiAqIGZ1bmN0aW9uIGNhbiB0YWtlIG11bHRpcGxlIGFyZ3VtZW50cyBhcyBpdCBwcm92aWRlcyB0aGUgc2lnbmF0dXJlIGZvclxuICogdGhlIHJlc3VsdGluZyBjb21wb3NpdGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gZnVuY3MgVGhlIGZ1bmN0aW9ucyB0byBjb21wb3NlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIG9idGFpbmVkIGJ5IGNvbXBvc2luZyB0aGUgYXJndW1lbnQgZnVuY3Rpb25zXG4gKiBmcm9tIHJpZ2h0IHRvIGxlZnQuIEZvciBleGFtcGxlLCBjb21wb3NlKGYsIGcsIGgpIGlzIGlkZW50aWNhbCB0byBkb2luZ1xuICogKC4uLmFyZ3MpID0+IGYoZyhoKC4uLmFyZ3MpKSkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuXG5mdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgX2Rpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRGlzcGF0Y2hpbmcgd2hpbGUgY29uc3RydWN0aW5nIHlvdXIgbWlkZGxld2FyZSBpcyBub3QgYWxsb3dlZC4gJyArICdPdGhlciBtaWRkbGV3YXJlIHdvdWxkIG5vdCBiZSBhcHBsaWVkIHRvIHRoaXMgZGlzcGF0Y2guJyk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgbWlkZGxld2FyZUFQSSA9IHtcbiAgICAgICAgZ2V0U3RhdGU6IHN0b3JlLmdldFN0YXRlLFxuICAgICAgICBkaXNwYXRjaDogZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgICAgcmV0dXJuIF9kaXNwYXRjaC5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgY2hhaW4gPSBtaWRkbGV3YXJlcy5tYXAoZnVuY3Rpb24gKG1pZGRsZXdhcmUpIHtcbiAgICAgICAgcmV0dXJuIG1pZGRsZXdhcmUobWlkZGxld2FyZUFQSSk7XG4gICAgICB9KTtcbiAgICAgIF9kaXNwYXRjaCA9IGNvbXBvc2UuYXBwbHkodm9pZCAwLCBjaGFpbikoc3RvcmUuZGlzcGF0Y2gpO1xuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQyKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufVxuXG4vKlxuICogVGhpcyBpcyBhIGR1bW15IGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBmdW5jdGlvbiBuYW1lIGhhcyBiZWVuIGFsdGVyZWQgYnkgbWluaWZpY2F0aW9uLlxuICogSWYgdGhlIGZ1bmN0aW9uIGhhcyBiZWVuIG1pbmlmaWVkIGFuZCBOT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCB3YXJuIHRoZSB1c2VyLlxuICovXG5cbmZ1bmN0aW9uIGlzQ3J1c2hlZCgpIHt9XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBpc0NydXNoZWQubmFtZSA9PT0gJ3N0cmluZycgJiYgaXNDcnVzaGVkLm5hbWUgIT09ICdpc0NydXNoZWQnKSB7XG4gIHdhcm5pbmcoJ1lvdSBhcmUgY3VycmVudGx5IHVzaW5nIG1pbmlmaWVkIGNvZGUgb3V0c2lkZSBvZiBOT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIuICcgKyAnVGhpcyBtZWFucyB0aGF0IHlvdSBhcmUgcnVubmluZyBhIHNsb3dlciBkZXZlbG9wbWVudCBidWlsZCBvZiBSZWR1eC4gJyArICdZb3UgY2FuIHVzZSBsb29zZS1lbnZpZnkgKGh0dHBzOi8vZ2l0aHViLmNvbS96ZXJ0b3NoL2xvb3NlLWVudmlmeSkgZm9yIGJyb3dzZXJpZnkgJyArICdvciBzZXR0aW5nIG1vZGUgdG8gcHJvZHVjdGlvbiBpbiB3ZWJwYWNrIChodHRwczovL3dlYnBhY2suanMub3JnL2NvbmNlcHRzL21vZGUvKSAnICsgJ3RvIGVuc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCBjb2RlIGZvciB5b3VyIHByb2R1Y3Rpb24gYnVpbGQuJyk7XG59XG5cbmV4cG9ydCB7IEFjdGlvblR5cGVzIGFzIF9fRE9fTk9UX1VTRV9fQWN0aW9uVHlwZXMsIGFwcGx5TWlkZGxld2FyZSwgYmluZEFjdGlvbkNyZWF0b3JzLCBjb21iaW5lUmVkdWNlcnMsIGNvbXBvc2UsIGNyZWF0ZVN0b3JlIH07XG4iLCJpbXBvcnQgeyB1c2VSZWR1Y2VyLCB1c2VSZWYsIHVzZU1lbW8sIHVzZUNvbnRleHQsIHVzZURlYnVnVmFsdWUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxudmFyIHJlZkVxdWFsaXR5ID0gZnVuY3Rpb24gcmVmRXF1YWxpdHkoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yikge1xuICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKGZ1bmN0aW9uIChzKSB7XG4gICAgcmV0dXJuIHMgKyAxO1xuICB9LCAwKSxcbiAgICAgIGZvcmNlUmVuZGVyID0gX3VzZVJlZHVjZXJbMV07XG5cbiAgdmFyIHN1YnNjcmlwdGlvbiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlLCBjb250ZXh0U3ViKTtcbiAgfSwgW3N0b3JlLCBjb250ZXh0U3ViXSk7XG4gIHZhciBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RvciA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U3RvcmVTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U2VsZWN0ZWRTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgc3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gIHZhciBzZWxlY3RlZFN0YXRlO1xuXG4gIHRyeSB7XG4gICAgaWYgKHNlbGVjdG9yICE9PSBsYXRlc3RTZWxlY3Rvci5jdXJyZW50IHx8IHN0b3JlU3RhdGUgIT09IGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCB8fCBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIHNlbGVjdGVkU3RhdGUgPSBzZWxlY3RvcihzdG9yZVN0YXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIGVyci5tZXNzYWdlICs9IFwiXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG5cIiArIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFjayArIFwiXFxuXFxuXCI7XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbGF0ZXN0U2VsZWN0b3IuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgIGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCA9IHN0b3JlU3RhdGU7XG4gICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gc2VsZWN0ZWRTdGF0ZTtcbiAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV3U2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQoc3RvcmUuZ2V0U3RhdGUoKSk7XG5cbiAgICAgICAgaWYgKGVxdWFsaXR5Rm4obmV3U2VsZWN0ZWRTdGF0ZSwgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudCA9IG5ld1NlbGVjdGVkU3RhdGU7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgLy8gd2UgaWdub3JlIGFsbCBlcnJvcnMgaGVyZSwgc2luY2Ugd2hlbiB0aGUgY29tcG9uZW50XG4gICAgICAgIC8vIGlzIHJlLXJlbmRlcmVkLCB0aGUgc2VsZWN0b3JzIGFyZSBjYWxsZWQgYWdhaW4sIGFuZFxuICAgICAgICAvLyB3aWxsIHRocm93IGFnYWluLCBpZiBuZWl0aGVyIHByb3BzIG5vciBzdG9yZSBzdGF0ZVxuICAgICAgICAvLyBjaGFuZ2VkXG4gICAgICAgIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCA9IGVycjtcbiAgICAgIH1cblxuICAgICAgZm9yY2VSZW5kZXIoKTtcbiAgICB9XG5cbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IGNoZWNrRm9yVXBkYXRlcztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG4gICAgY2hlY2tGb3JVcGRhdGVzKCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9LCBbc3RvcmUsIHN1YnNjcmlwdGlvbl0pO1xuICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbn1cbi8qKlxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZVNlbGVjdG9yYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cbiAqXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlU2VsZWN0b3JgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlbGVjdG9ySG9vayhjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICBjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cblxuICB2YXIgdXNlUmVkdXhDb250ZXh0ID0gY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpO1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU2VsZWN0b3Ioc2VsZWN0b3IsIGVxdWFsaXR5Rm4pIHtcbiAgICBpZiAoZXF1YWxpdHlGbiA9PT0gdm9pZCAwKSB7XG4gICAgICBlcXVhbGl0eUZuID0gcmVmRXF1YWxpdHk7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXNlbGVjdG9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBwYXNzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JcIik7XG4gICAgfVxuXG4gICAgdmFyIF91c2VSZWR1eENvbnRleHQgPSB1c2VSZWR1eENvbnRleHQoKSxcbiAgICAgICAgc3RvcmUgPSBfdXNlUmVkdXhDb250ZXh0LnN0b3JlLFxuICAgICAgICBjb250ZXh0U3ViID0gX3VzZVJlZHV4Q29udGV4dC5zdWJzY3JpcHRpb247XG5cbiAgICB2YXIgc2VsZWN0ZWRTdGF0ZSA9IHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yik7XG4gICAgdXNlRGVidWdWYWx1ZShzZWxlY3RlZFN0YXRlKTtcbiAgICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbiAgfTtcbn1cbi8qKlxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUncyBzdGF0ZS4gVGhpcyBob29rIHRha2VzIGEgc2VsZWN0b3IgZnVuY3Rpb25cbiAqIGFzIGFuIGFyZ3VtZW50LiBUaGUgc2VsZWN0b3IgaXMgY2FsbGVkIHdpdGggdGhlIHN0b3JlIHN0YXRlLlxuICpcbiAqIFRoaXMgaG9vayB0YWtlcyBhbiBvcHRpb25hbCBlcXVhbGl0eSBjb21wYXJpc29uIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyXG4gKiB0aGF0IGFsbG93cyB5b3UgdG8gY3VzdG9taXplIHRoZSB3YXkgdGhlIHNlbGVjdGVkIHN0YXRlIGlzIGNvbXBhcmVkIHRvIGRldGVybWluZVxuICogd2hldGhlciB0aGUgY29tcG9uZW50IG5lZWRzIHRvIGJlIHJlLXJlbmRlcmVkLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHNlbGVjdG9yIHRoZSBzZWxlY3RvciBmdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbj19IGVxdWFsaXR5Rm4gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBlcXVhbGl0eVxuICpcbiAqIEByZXR1cm5zIHthbnl9IHRoZSBzZWxlY3RlZCBzdGF0ZVxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuICogaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCdcbiAqXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICgpID0+IHtcbiAqICAgY29uc3QgY291bnRlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmNvdW50ZXIpXG4gKiAgIHJldHVybiA8ZGl2Pntjb3VudGVyfTwvZGl2PlxuICogfVxuICovXG5cbmV4cG9ydCB2YXIgdXNlU2VsZWN0b3IgPSAvKiNfX1BVUkVfXyovY3JlYXRlU2VsZWN0b3JIb29rKCk7IiwiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rIH0gZnJvbSAnLi9ob29rcy91c2VEaXNwYXRjaCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTdG9yZSc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgYXMgYmF0Y2ggfSBmcm9tICcuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMnO1xuaW1wb3J0IHNoYWxsb3dFcXVhbCBmcm9tICcuL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5zZXRCYXRjaChiYXRjaCk7XG5leHBvcnQgeyBQcm92aWRlciwgY29ubmVjdEFkdmFuY2VkLCBSZWFjdFJlZHV4Q29udGV4dCwgY29ubmVjdCwgYmF0Y2gsIHVzZURpc3BhdGNoLCBjcmVhdGVEaXNwYXRjaEhvb2ssIHVzZVNlbGVjdG9yLCBjcmVhdGVTZWxlY3Rvckhvb2ssIHVzZVN0b3JlLCBjcmVhdGVTdG9yZUhvb2ssIHNoYWxsb3dFcXVhbCB9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgJy4vb2ZmZXJzLnNjc3MnO1xyXG5cclxuY29uc3QgY29sdW1ucyA9IFtcclxuXHR7XHJcblx0XHRpZDogMSxcclxuXHRcdHRleHQ6ICfQktC+0LfQvNC+0LbQvdC+0YHRgtGMINC/0L7Qu9GD0YfQsNGC0Ywg0LTQvtGF0L7QtCDQstGL0YjQtSwg0YfQtdC8INC/0L4g0LLQutC70LDQtNGDJyxcclxuXHRcdGltYWdlOiAoXHJcblx0XHRcdDxzdmcgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjU2XCIgdmlld0JveD1cIjAgMCA0OCA1NlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdDxwYXRoIGZpbGxSdWxlPVwiZXZlbm9kZFwiIGNsaXBSdWxlPVwiZXZlbm9kZFwiIGQ9XCJNMjMuMzAwOCAzLjAzMzg5QzIyLjgyOTggMi45Mjk5NSAyMi4zMTg1IDMuMDY1MSAyMS45NTI1IDMuNDM5MzRMNy40Mjk2OCAxOC4yODg2QzYuODU2NzcgMTguODc0NCA2Ljg1Njc3IDE5LjgyNDEgNy40Mjk2OCAyMC40MDk5QzguMDAyNTkgMjAuOTk1NyA4LjkzMTQ2IDIwLjk5NTcgOS41MDQzNyAyMC40MDk5TDIxLjQ2MTkgOC4xODM2MVYzNy41MzNDMjEuNDYxOSAzOC4zNDMyIDIyLjExODcgMzkgMjIuOTI4OSAzOUMyMy43MzkyIDM5IDI0LjM5NiAzOC4zNDMyIDI0LjM5NiAzNy41MzNWOC4wNDIyNkwzNi40OTYxIDIwLjQxNDNDMzcuMDY5IDIxLjAwMDEgMzcuOTk3OCAyMS4wMDAxIDM4LjU3MDggMjAuNDE0M0MzOS4xNDM3IDE5LjgyODUgMzkuMTQzNyAxOC44Nzg4IDM4LjU3MDggMTguMjkzTDI0LjA0NzkgMy40NDM3NUMyMy44MzU3IDMuMjI2NzIgMjMuNTc0NSAzLjA5MDEgMjMuMzAwOCAzLjAzMzg5Wk0zLjUgNDhDMi42NzE1NyA0OCAyIDQ4LjY3MTYgMiA0OS41QzIgNTAuMzI4NCAyLjY3MTU3IDUxIDMuNSA1MUg0Mi41QzQzLjMyODQgNTEgNDQgNTAuMzI4NCA0NCA0OS41QzQ0IDQ4LjY3MTYgNDMuMzI4NCA0OCA0Mi41IDQ4SDMuNVpcIiBmaWxsPVwiYmxhY2tcIiAvPlxyXG5cdFx0XHQ8L3N2Zz5cclxuXHRcdCksXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogMixcclxuXHRcdHRleHQ6ICfQpNC40LrRgdC40YDQvtCy0LDQvdC90YvQuSDRgdGA0L7QuiDQuNC90LLQtdGB0YLQuNGA0L7QstCw0L3QuNGPJyxcclxuXHRcdGltYWdlOiAoXHJcblx0XHRcdDxzdmcgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjU2XCIgdmlld0JveD1cIjAgMCA0OCA1NlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNNDMuNSA2VjIxLjc5NjJDNDMuNSAyOS4xMDQ3IDQwLjA5OTcgMzUuOTk3MiAzNC4zMDAxIDQwLjQ0NDVMMjMgNDkuMTA5N0wxMS42OTk5IDQwLjQ0NDVDNS45MDAzMiAzNS45OTcyIDIuNSAyOS4xMDQ3IDIuNSAyMS43OTYyVjZDMi41IDUuMTcxNTcgMy4xNzE1NyA0LjUgNCA0LjVINDJDNDIuODI4NCA0LjUgNDMuNSA1LjE3MTU3IDQzLjUgNlpcIiBzdHJva2U9XCJibGFja1wiIHN0cm9rZVdpZHRoPVwiM1wiIC8+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0KSxcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiAzLFxyXG5cdFx0dGV4dDogJ9Cf0L7Qu9GD0YfQuNGC0LUgKzEzJSDQuiDQuNC90LLQtdGB0YLQuNGG0LjRj9C8INC10LbQtdCz0L7QtNC90L4nLFxyXG5cdFx0aW1hZ2U6IChcclxuXHRcdFx0PHN2ZyB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNTZcIiB2aWV3Qm94PVwiMCAwIDQ4IDU2XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0PHJlY3Qgd2lkdGg9XCIyLjk2NzIxXCIgaGVpZ2h0PVwiNTQuOTkxOVwiIHJ4PVwiMS40ODM2MVwiIHRyYW5zZm9ybT1cIm1hdHJpeCgwLjY5OTIwNiAwLjcxNDkyMSAtMC42OTkyMDYgMC43MTQ5MjEgNDAuNDUxMiA3KVwiIGZpbGw9XCJibGFja1wiIC8+XHJcblx0XHRcdFx0PGNpcmNsZSBjeD1cIjEwLjVcIiBjeT1cIjE1Ljg0NDdcIiByPVwiN1wiIHN0cm9rZT1cImJsYWNrXCIgc3Ryb2tlV2lkdGg9XCIzXCIgLz5cclxuXHRcdFx0XHQ8Y2lyY2xlIGN4PVwiMzQuNVwiIGN5PVwiMzkuODQ0N1wiIHI9XCI3XCIgc3Ryb2tlPVwiYmxhY2tcIiBzdHJva2VXaWR0aD1cIjNcIiAvPlxyXG5cdFx0XHQ8L3N2Zz5cclxuXHRcdCksXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogNCxcclxuXHRcdHRleHQ6ICfQktGB0LUg0LjQvdCy0LXRgdGC0LjRhtC40Lgg0L7QvdC70LDQudC9INCyINC+0LTQvdC+0Lwg0L/RgNC40LvQvtC20LXQvdC40LgnLFxyXG5cdFx0aW1hZ2U6IChcclxuXHRcdFx0PHN2ZyB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNTZcIiB2aWV3Qm94PVwiMCAwIDQ4IDU2XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0PHJlY3QgeD1cIjMuNVwiIHk9XCI1LjVcIiB3aWR0aD1cIjI5XCIgaGVpZ2h0PVwiNDVcIiByeD1cIjIuNVwiIHN0cm9rZT1cImJsYWNrXCIgc3Ryb2tlV2lkdGg9XCIzXCIgLz5cclxuXHRcdFx0XHQ8cmVjdCB4PVwiMTFcIiB5PVwiNDBcIiB3aWR0aD1cIjE0XCIgaGVpZ2h0PVwiM1wiIHJ4PVwiMS41XCIgZmlsbD1cImJsYWNrXCIgLz5cclxuXHRcdFx0PC9zdmc+XHJcblx0XHQpLFxyXG5cdH0sXHJcbl1cclxuXHJcbmNvbnN0IE9mZmVycyA9ICgpID0+IHtcclxuXHJcblx0Y29uc3QgY29sdW1uc1ZpZXcgPSBjb2x1bW5zLm1hcCgoeyBpZCwgdGV4dCwgaW1hZ2UgfSkgPT4gKFxyXG5cdFx0PGRpdiBrZXk9e2lkfSBjbGFzc05hbWU9XCJvZmZlcnNfX2NvbHVtblwiPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cIm9mZmVyc19faWNvbi13cmFwXCI+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvZmZlcnNfX2ljb24taW1hZ2VcIj5cclxuXHRcdFx0XHRcdHtpbWFnZX1cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwib2ZmZXJzX190ZXh0LXdyYXBcIj5cclxuXHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9XCJvZmZlcnNfX3RleHRcIj57dGV4dH08L3NwYW4+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KSk7XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT1cIm9mZmVyc1wiPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cIndyYXBcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cIm9mZmVyc19fd3JhcFwiPlxyXG5cdFx0XHRcdFx0e2NvbHVtbnNWaWV3fVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9mZmVyczsiLCJpbXBvcnQgT2ZmZXJzIGZyb20gJy4vb2ZmZXJzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9mZmVyczsiLCJmdW5jdGlvbiBpc09iamVjdChvKSB7XG4gIHJldHVybiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgbyAhPT0gbnVsbCAmJiBvLmNvbnN0cnVjdG9yICYmIG8uY29uc3RydWN0b3IgPT09IE9iamVjdDtcbn1cblxuZnVuY3Rpb24gZXh0ZW5kKHRhcmdldCwgc3JjKSB7XG4gIE9iamVjdC5rZXlzKHNyYykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKHR5cGVvZiB0YXJnZXRba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHRhcmdldFtrZXldID0gc3JjW2tleV07ZWxzZSBpZiAoaXNPYmplY3Qoc3JjW2tleV0pICYmIGlzT2JqZWN0KHRhcmdldFtrZXldKSAmJiBPYmplY3Qua2V5cyhzcmNba2V5XSkubGVuZ3RoID4gMCkge1xuICAgICAgZXh0ZW5kKHRhcmdldFtrZXldLCBzcmNba2V5XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhcmdldFtrZXldID0gc3JjW2tleV07XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gbmVlZHNOYXZpZ2F0aW9uKHBhcmFtcykge1xuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXJhbXMubmF2aWdhdGlvbiAmJiB0eXBlb2YgcGFyYW1zLm5hdmlnYXRpb24ubmV4dEVsID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcGFyYW1zLm5hdmlnYXRpb24ucHJldkVsID09PSAndW5kZWZpbmVkJztcbn1cblxuZnVuY3Rpb24gbmVlZHNQYWdpbmF0aW9uKHBhcmFtcykge1xuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXJhbXMucGFnaW5hdGlvbiAmJiB0eXBlb2YgcGFyYW1zLnBhZ2luYXRpb24uZWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG5mdW5jdGlvbiBuZWVkc1Njcm9sbGJhcihwYXJhbXMpIHtcbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGFyYW1zLnNjcm9sbGJhciAmJiB0eXBlb2YgcGFyYW1zLnNjcm9sbGJhci5lbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbmZ1bmN0aW9uIHVuaXF1ZUNsYXNzZXMoY2xhc3NOYW1lcykge1xuICBpZiAoY2xhc3NOYW1lcyA9PT0gdm9pZCAwKSB7XG4gICAgY2xhc3NOYW1lcyA9ICcnO1xuICB9XG5cbiAgdmFyIGNsYXNzZXMgPSBjbGFzc05hbWVzLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIGMudHJpbSgpO1xuICB9KS5maWx0ZXIoZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gISFjO1xuICB9KTtcbiAgdmFyIHVuaXF1ZSA9IFtdO1xuICBjbGFzc2VzLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICBpZiAodW5pcXVlLmluZGV4T2YoYykgPCAwKSB1bmlxdWUucHVzaChjKTtcbiAgfSk7XG4gIHJldHVybiB1bmlxdWUuam9pbignICcpO1xufVxuXG5leHBvcnQgeyBpc09iamVjdCwgZXh0ZW5kLCBuZWVkc05hdmlnYXRpb24sIG5lZWRzUGFnaW5hdGlvbiwgbmVlZHNTY3JvbGxiYXIsIHVuaXF1ZUNsYXNzZXMgfTsiLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChjYWxsYmFjaywgZGVwcykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gdXNlRWZmZWN0KGNhbGxiYWNrLCBkZXBzKTtcbiAgcmV0dXJuIHVzZUxheW91dEVmZmVjdChjYWxsYmFjaywgZGVwcyk7XG59XG5cbmV4cG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfTsiLCJmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZVN0YXRlLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdW5pcXVlQ2xhc3NlcyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4vdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdCc7XG52YXIgU3dpcGVyU2xpZGUgPSAvKiNfX1BVUkVfXyovZm9yd2FyZFJlZihmdW5jdGlvbiAoX3RlbXAsIGV4dGVybmFsUmVmKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJHRhZyA9IF9yZWYudGFnLFxuICAgICAgVGFnID0gX3JlZiR0YWcgPT09IHZvaWQgMCA/ICdkaXYnIDogX3JlZiR0YWcsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBfcmVmJGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZiRjbGFzc05hbWUgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRjbGFzc05hbWUsXG4gICAgICBzd2lwZXIgPSBfcmVmLnN3aXBlcixcbiAgICAgIHpvb20gPSBfcmVmLnpvb20sXG4gICAgICB2aXJ0dWFsSW5kZXggPSBfcmVmLnZpcnR1YWxJbmRleCxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJ0YWdcIiwgXCJjaGlsZHJlblwiLCBcImNsYXNzTmFtZVwiLCBcInN3aXBlclwiLCBcInpvb21cIiwgXCJ2aXJ0dWFsSW5kZXhcIl0pO1xuXG4gIHZhciBzbGlkZUVsUmVmID0gdXNlUmVmKG51bGwpO1xuXG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZSgnc3dpcGVyLXNsaWRlJyksXG4gICAgICBzbGlkZUNsYXNzZXMgPSBfdXNlU3RhdGVbMF0sXG4gICAgICBzZXRTbGlkZUNsYXNzZXMgPSBfdXNlU3RhdGVbMV07XG5cbiAgZnVuY3Rpb24gdXBkYXRlQ2xhc3Nlcyhzd2lwZXIsIGVsLCBjbGFzc05hbWVzKSB7XG4gICAgaWYgKGVsID09PSBzbGlkZUVsUmVmLmN1cnJlbnQpIHtcbiAgICAgIHNldFNsaWRlQ2xhc3NlcyhjbGFzc05hbWVzKTtcbiAgICB9XG4gIH1cblxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZXh0ZXJuYWxSZWYpIHtcbiAgICAgIGV4dGVybmFsUmVmLmN1cnJlbnQgPSBzbGlkZUVsUmVmLmN1cnJlbnQ7XG4gICAgfVxuXG4gICAgaWYgKCFzbGlkZUVsUmVmLmN1cnJlbnQgfHwgIXN3aXBlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChzd2lwZXIuZGVzdHJveWVkKSB7XG4gICAgICBpZiAoc2xpZGVDbGFzc2VzICE9PSAnc3dpcGVyLXNsaWRlJykge1xuICAgICAgICBzZXRTbGlkZUNsYXNzZXMoJ3N3aXBlci1zbGlkZScpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3dpcGVyLm9uKCdfc2xpZGVDbGFzcycsIHVwZGF0ZUNsYXNzZXMpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXN3aXBlcikgcmV0dXJuO1xuICAgICAgc3dpcGVyLm9mZignX3NsaWRlQ2xhc3MnLCB1cGRhdGVDbGFzc2VzKTtcbiAgICB9O1xuICB9KTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHN3aXBlciAmJiBzbGlkZUVsUmVmLmN1cnJlbnQpIHtcbiAgICAgIHNldFNsaWRlQ2xhc3Nlcyhzd2lwZXIuZ2V0U2xpZGVDbGFzc2VzKHNsaWRlRWxSZWYuY3VycmVudCkpO1xuICAgIH1cbiAgfSwgW3N3aXBlcl0pO1xuICB2YXIgc2xpZGVEYXRhO1xuXG4gIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICBzbGlkZURhdGEgPSB7XG4gICAgICBpc0FjdGl2ZTogc2xpZGVDbGFzc2VzLmluZGV4T2YoJ3N3aXBlci1zbGlkZS1hY3RpdmUnKSA+PSAwIHx8IHNsaWRlQ2xhc3Nlcy5pbmRleE9mKCdzd2lwZXItc2xpZGUtZHVwbGljYXRlLWFjdGl2ZScpID49IDAsXG4gICAgICBpc1Zpc2libGU6IHNsaWRlQ2xhc3Nlcy5pbmRleE9mKCdzd2lwZXItc2xpZGUtdmlzaWJsZScpID49IDAsXG4gICAgICBpc0R1cGxpY2F0ZTogc2xpZGVDbGFzc2VzLmluZGV4T2YoJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUnKSA+PSAwLFxuICAgICAgaXNQcmV2OiBzbGlkZUNsYXNzZXMuaW5kZXhPZignc3dpcGVyLXNsaWRlLXByZXYnKSA+PSAwIHx8IHNsaWRlQ2xhc3Nlcy5pbmRleE9mKCdzd2lwZXItc2xpZGUtZHVwbGljYXRlLXByZXYnKSA+PSAwLFxuICAgICAgaXNOZXh0OiBzbGlkZUNsYXNzZXMuaW5kZXhPZignc3dpcGVyLXNsaWRlLW5leHQnKSA+PSAwIHx8IHNsaWRlQ2xhc3Nlcy5pbmRleE9mKCdzd2lwZXItc2xpZGUtZHVwbGljYXRlLW5leHQnKSA+PSAwXG4gICAgfTtcbiAgfVxuXG4gIHZhciByZW5kZXJDaGlsZHJlbiA9IGZ1bmN0aW9uIHJlbmRlckNoaWxkcmVuKCkge1xuICAgIHJldHVybiB0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbihzbGlkZURhdGEpIDogY2hpbGRyZW47XG4gIH07XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe1xuICAgIHJlZjogc2xpZGVFbFJlZixcbiAgICBjbGFzc05hbWU6IHVuaXF1ZUNsYXNzZXMoXCJcIiArIHNsaWRlQ2xhc3NlcyArIChjbGFzc05hbWUgPyBcIiBcIiArIGNsYXNzTmFtZSA6ICcnKSksXG4gICAgXCJkYXRhLXN3aXBlci1zbGlkZS1pbmRleFwiOiB2aXJ0dWFsSW5kZXhcbiAgfSwgcmVzdCksIHpvb20gPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInN3aXBlci16b29tLWNvbnRhaW5lclwiLFxuICAgIFwiZGF0YS1zd2lwZXItem9vbVwiOiB0eXBlb2Ygem9vbSA9PT0gJ251bWJlcicgPyB6b29tIDogdW5kZWZpbmVkXG4gIH0sIHJlbmRlckNoaWxkcmVuKCkpIDogcmVuZGVyQ2hpbGRyZW4oKSk7XG59KTtcblN3aXBlclNsaWRlLmRpc3BsYXlOYW1lID0gJ1N3aXBlclNsaWRlJztcbmV4cG9ydCB7IFN3aXBlclNsaWRlIH07IiwiLyoqXG4gKiBTU1IgV2luZG93IDMuMC4wXG4gKiBCZXR0ZXIgaGFuZGxpbmcgZm9yIHdpbmRvdyBvYmplY3QgaW4gU1NSIGVudmlyb25tZW50XG4gKiBodHRwczovL2dpdGh1Yi5jb20vbm9saW1pdHM0d2ViL3Nzci13aW5kb3dcbiAqXG4gKiBDb3B5cmlnaHQgMjAyMCwgVmxhZGltaXIgS2hhcmxhbXBpZGlcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciBNSVRcbiAqXG4gKiBSZWxlYXNlZCBvbjogTm92ZW1iZXIgOSwgMjAyMFxuICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuZnVuY3Rpb24gaXNPYmplY3Qob2JqKSB7XG4gICAgcmV0dXJuIChvYmogIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgJ2NvbnN0cnVjdG9yJyBpbiBvYmogJiZcbiAgICAgICAgb2JqLmNvbnN0cnVjdG9yID09PSBPYmplY3QpO1xufVxuZnVuY3Rpb24gZXh0ZW5kKHRhcmdldCwgc3JjKSB7XG4gICAgaWYgKHRhcmdldCA9PT0gdm9pZCAwKSB7IHRhcmdldCA9IHt9OyB9XG4gICAgaWYgKHNyYyA9PT0gdm9pZCAwKSB7IHNyYyA9IHt9OyB9XG4gICAgT2JqZWN0LmtleXMoc3JjKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRba2V5XSA9PT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICB0YXJnZXRba2V5XSA9IHNyY1trZXldO1xuICAgICAgICBlbHNlIGlmIChpc09iamVjdChzcmNba2V5XSkgJiZcbiAgICAgICAgICAgIGlzT2JqZWN0KHRhcmdldFtrZXldKSAmJlxuICAgICAgICAgICAgT2JqZWN0LmtleXMoc3JjW2tleV0pLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGV4dGVuZCh0YXJnZXRba2V5XSwgc3JjW2tleV0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbnZhciBzc3JEb2N1bWVudCA9IHtcbiAgICBib2R5OiB7fSxcbiAgICBhZGRFdmVudExpc3RlbmVyOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkgeyB9LFxuICAgIGFjdGl2ZUVsZW1lbnQ6IHtcbiAgICAgICAgYmx1cjogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICBub2RlTmFtZTogJycsXG4gICAgfSxcbiAgICBxdWVyeVNlbGVjdG9yOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfSxcbiAgICBnZXRFbGVtZW50QnlJZDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGNyZWF0ZUV2ZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpbml0RXZlbnQ6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGNyZWF0ZUVsZW1lbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgICAgIGNoaWxkTm9kZXM6IFtdLFxuICAgICAgICAgICAgc3R5bGU6IHt9LFxuICAgICAgICAgICAgc2V0QXR0cmlidXRlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgICAgICAgICBnZXRFbGVtZW50c0J5VGFnTmFtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBjcmVhdGVFbGVtZW50TlM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH0sXG4gICAgaW1wb3J0Tm9kZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGxvY2F0aW9uOiB7XG4gICAgICAgIGhhc2g6ICcnLFxuICAgICAgICBob3N0OiAnJyxcbiAgICAgICAgaG9zdG5hbWU6ICcnLFxuICAgICAgICBocmVmOiAnJyxcbiAgICAgICAgb3JpZ2luOiAnJyxcbiAgICAgICAgcGF0aG5hbWU6ICcnLFxuICAgICAgICBwcm90b2NvbDogJycsXG4gICAgICAgIHNlYXJjaDogJycsXG4gICAgfSxcbn07XG5mdW5jdGlvbiBnZXREb2N1bWVudCgpIHtcbiAgICB2YXIgZG9jID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDoge307XG4gICAgZXh0ZW5kKGRvYywgc3NyRG9jdW1lbnQpO1xuICAgIHJldHVybiBkb2M7XG59XG5cbnZhciBzc3JXaW5kb3cgPSB7XG4gICAgZG9jdW1lbnQ6IHNzckRvY3VtZW50LFxuICAgIG5hdmlnYXRvcjoge1xuICAgICAgICB1c2VyQWdlbnQ6ICcnLFxuICAgIH0sXG4gICAgbG9jYXRpb246IHtcbiAgICAgICAgaGFzaDogJycsXG4gICAgICAgIGhvc3Q6ICcnLFxuICAgICAgICBob3N0bmFtZTogJycsXG4gICAgICAgIGhyZWY6ICcnLFxuICAgICAgICBvcmlnaW46ICcnLFxuICAgICAgICBwYXRobmFtZTogJycsXG4gICAgICAgIHByb3RvY29sOiAnJyxcbiAgICAgICAgc2VhcmNoOiAnJyxcbiAgICB9LFxuICAgIGhpc3Rvcnk6IHtcbiAgICAgICAgcmVwbGFjZVN0YXRlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgICAgIHB1c2hTdGF0ZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICBnbzogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICBiYWNrOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgfSxcbiAgICBDdXN0b21FdmVudDogZnVuY3Rpb24gQ3VzdG9tRXZlbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkgeyB9LFxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBnZXRDb21wdXRlZFN0eWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBnZXRQcm9wZXJ0eVZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIEltYWdlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgRGF0ZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIHNjcmVlbjoge30sXG4gICAgc2V0VGltZW91dDogZnVuY3Rpb24gKCkgeyB9LFxuICAgIGNsZWFyVGltZW91dDogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG1hdGNoTWVkaWE6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH0sXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGNhbGxiYWNrLCAwKTtcbiAgICB9LFxuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lOiBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyVGltZW91dChpZCk7XG4gICAgfSxcbn07XG5mdW5jdGlvbiBnZXRXaW5kb3coKSB7XG4gICAgdmFyIHdpbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDoge307XG4gICAgZXh0ZW5kKHdpbiwgc3NyV2luZG93KTtcbiAgICByZXR1cm4gd2luO1xufVxuXG5leHBvcnQgeyBleHRlbmQsIGdldERvY3VtZW50LCBnZXRXaW5kb3csIHNzckRvY3VtZW50LCBzc3JXaW5kb3cgfTtcbiIsIi8qKlxuICogRG9tNyAzLjAuMFxuICogTWluaW1hbGlzdGljIEphdmFTY3JpcHQgbGlicmFyeSBmb3IgRE9NIG1hbmlwdWxhdGlvbiwgd2l0aCBhIGpRdWVyeS1jb21wYXRpYmxlIEFQSVxuICogaHR0cHM6Ly9mcmFtZXdvcms3LmlvL2RvY3MvZG9tNy5odG1sXG4gKlxuICogQ29weXJpZ2h0IDIwMjAsIFZsYWRpbWlyIEtoYXJsYW1waWRpXG4gKlxuICogTGljZW5zZWQgdW5kZXIgTUlUXG4gKlxuICogUmVsZWFzZWQgb246IE5vdmVtYmVyIDksIDIwMjBcbiAqL1xuaW1wb3J0IHsgZ2V0V2luZG93LCBnZXREb2N1bWVudCB9IGZyb20gJ3Nzci13aW5kb3cnO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcblxuICB0cnkge1xuICAgIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gIGlmIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHtcbiAgICBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3Q7XG4gIH0gZWxzZSB7XG4gICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgdmFyIGEgPSBbbnVsbF07XG4gICAgICBhLnB1c2guYXBwbHkoYSwgYXJncyk7XG4gICAgICB2YXIgQ29uc3RydWN0b3IgPSBGdW5jdGlvbi5iaW5kLmFwcGx5KFBhcmVudCwgYSk7XG4gICAgICB2YXIgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICAgIGlmIChDbGFzcykgX3NldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX2NvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikge1xuICByZXR1cm4gRnVuY3Rpb24udG9TdHJpbmcuY2FsbChmbikuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIikgIT09IC0xO1xufVxuXG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gIHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7XG5cbiAgX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgICBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzO1xuXG4gICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBfY2FjaGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpO1xuXG4gICAgICBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBXcmFwcGVyKCkge1xuICAgICAgcmV0dXJuIF9jb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTtcbiAgICB9XG5cbiAgICBXcmFwcGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogV3JhcHBlcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3NldFByb3RvdHlwZU9mKFdyYXBwZXIsIENsYXNzKTtcbiAgfTtcblxuICByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7XG59XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG5mdW5jdGlvbiBtYWtlUmVhY3RpdmUob2JqKSB7XG4gIHZhciBwcm90byA9IG9iai5fX3Byb3RvX187XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosICdfX3Byb3RvX18nLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gcHJvdG87XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkge1xuICAgICAgcHJvdG8uX19wcm90b19fID0gdmFsdWU7XG4gICAgfVxuICB9KTtcbn1cblxudmFyIERvbTcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9BcnJheSkge1xuICBfaW5oZXJpdHNMb29zZShEb203LCBfQXJyYXkpO1xuXG4gIGZ1bmN0aW9uIERvbTcoaXRlbXMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9BcnJheS5jYWxsLmFwcGx5KF9BcnJheSwgW3RoaXNdLmNvbmNhdChpdGVtcykpIHx8IHRoaXM7XG4gICAgbWFrZVJlYWN0aXZlKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICByZXR1cm4gRG9tNztcbn0oIC8qI19fUFVSRV9fKi9fd3JhcE5hdGl2ZVN1cGVyKEFycmF5KSk7XG5cbmZ1bmN0aW9uIGFycmF5RmxhdChhcnIpIHtcbiAgaWYgKGFyciA9PT0gdm9pZCAwKSB7XG4gICAgYXJyID0gW107XG4gIH1cblxuICB2YXIgcmVzID0gW107XG4gIGFyci5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGVsKSkge1xuICAgICAgcmVzLnB1c2guYXBwbHkocmVzLCBhcnJheUZsYXQoZWwpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnB1c2goZWwpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXM7XG59XG5mdW5jdGlvbiBhcnJheUZpbHRlcihhcnIsIGNhbGxiYWNrKSB7XG4gIHJldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYXJyLCBjYWxsYmFjayk7XG59XG5mdW5jdGlvbiBhcnJheVVuaXF1ZShhcnIpIHtcbiAgdmFyIHVuaXF1ZUFycmF5ID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodW5pcXVlQXJyYXkuaW5kZXhPZihhcnJbaV0pID09PSAtMSkgdW5pcXVlQXJyYXkucHVzaChhcnJbaV0pO1xuICB9XG5cbiAgcmV0dXJuIHVuaXF1ZUFycmF5O1xufVxuZnVuY3Rpb24gdG9DYW1lbENhc2Uoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8tKC4pL2csIGZ1bmN0aW9uIChtYXRjaCwgZ3JvdXApIHtcbiAgICByZXR1cm4gZ3JvdXAudG9VcHBlckNhc2UoKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHFzYShzZWxlY3RvciwgY29udGV4dCkge1xuICBpZiAodHlwZW9mIHNlbGVjdG9yICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBbc2VsZWN0b3JdO1xuICB9XG5cbiAgdmFyIGEgPSBbXTtcbiAgdmFyIHJlcyA9IGNvbnRleHQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBhLnB1c2gocmVzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBhO1xufVxuXG5mdW5jdGlvbiAkKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgdmFyIGFyciA9IFtdO1xuXG4gIGlmICghY29udGV4dCAmJiBzZWxlY3RvciBpbnN0YW5jZW9mIERvbTcpIHtcbiAgICByZXR1cm4gc2VsZWN0b3I7XG4gIH1cblxuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIG5ldyBEb203KGFycik7XG4gIH1cblxuICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSAnc3RyaW5nJykge1xuICAgIHZhciBodG1sID0gc2VsZWN0b3IudHJpbSgpO1xuXG4gICAgaWYgKGh0bWwuaW5kZXhPZignPCcpID49IDAgJiYgaHRtbC5pbmRleE9mKCc+JykgPj0gMCkge1xuICAgICAgdmFyIHRvQ3JlYXRlID0gJ2Rpdic7XG4gICAgICBpZiAoaHRtbC5pbmRleE9mKCc8bGknKSA9PT0gMCkgdG9DcmVhdGUgPSAndWwnO1xuICAgICAgaWYgKGh0bWwuaW5kZXhPZignPHRyJykgPT09IDApIHRvQ3JlYXRlID0gJ3Rib2R5JztcbiAgICAgIGlmIChodG1sLmluZGV4T2YoJzx0ZCcpID09PSAwIHx8IGh0bWwuaW5kZXhPZignPHRoJykgPT09IDApIHRvQ3JlYXRlID0gJ3RyJztcbiAgICAgIGlmIChodG1sLmluZGV4T2YoJzx0Ym9keScpID09PSAwKSB0b0NyZWF0ZSA9ICd0YWJsZSc7XG4gICAgICBpZiAoaHRtbC5pbmRleE9mKCc8b3B0aW9uJykgPT09IDApIHRvQ3JlYXRlID0gJ3NlbGVjdCc7XG4gICAgICB2YXIgdGVtcFBhcmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodG9DcmVhdGUpO1xuICAgICAgdGVtcFBhcmVudC5pbm5lckhUTUwgPSBodG1sO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRlbXBQYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBhcnIucHVzaCh0ZW1wUGFyZW50LmNoaWxkTm9kZXNbaV0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhcnIgPSBxc2Eoc2VsZWN0b3IudHJpbSgpLCBjb250ZXh0IHx8IGRvY3VtZW50KTtcbiAgICB9IC8vIGFyciA9IHFzYShzZWxlY3RvciwgZG9jdW1lbnQpO1xuXG4gIH0gZWxzZSBpZiAoc2VsZWN0b3Iubm9kZVR5cGUgfHwgc2VsZWN0b3IgPT09IHdpbmRvdyB8fCBzZWxlY3RvciA9PT0gZG9jdW1lbnQpIHtcbiAgICBhcnIucHVzaChzZWxlY3Rvcik7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzZWxlY3RvcikpIHtcbiAgICBpZiAoc2VsZWN0b3IgaW5zdGFuY2VvZiBEb203KSByZXR1cm4gc2VsZWN0b3I7XG4gICAgYXJyID0gc2VsZWN0b3I7XG4gIH1cblxuICByZXR1cm4gbmV3IERvbTcoYXJyYXlVbmlxdWUoYXJyKSk7XG59XG5cbiQuZm4gPSBEb203LnByb3RvdHlwZTtcblxuZnVuY3Rpb24gYWRkQ2xhc3MoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc2VzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGNsYXNzZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgY2xhc3NOYW1lcyA9IGFycmF5RmxhdChjbGFzc2VzLm1hcChmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gIH0pKTtcbiAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgIHZhciBfZWwkY2xhc3NMaXN0O1xuXG4gICAgKF9lbCRjbGFzc0xpc3QgPSBlbC5jbGFzc0xpc3QpLmFkZC5hcHBseShfZWwkY2xhc3NMaXN0LCBjbGFzc05hbWVzKTtcbiAgfSk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDbGFzcygpIHtcbiAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc2VzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgY2xhc3Nlc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICB9XG5cbiAgdmFyIGNsYXNzTmFtZXMgPSBhcnJheUZsYXQoY2xhc3Nlcy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYy5zcGxpdCgnICcpO1xuICB9KSk7XG4gIHRoaXMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICB2YXIgX2VsJGNsYXNzTGlzdDI7XG5cbiAgICAoX2VsJGNsYXNzTGlzdDIgPSBlbC5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfZWwkY2xhc3NMaXN0MiwgY2xhc3NOYW1lcyk7XG4gIH0pO1xuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoKSB7XG4gIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NlcyA9IG5ldyBBcnJheShfbGVuMyksIF9rZXkzID0gMDsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgIGNsYXNzZXNbX2tleTNdID0gYXJndW1lbnRzW19rZXkzXTtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWVzID0gYXJyYXlGbGF0KGNsYXNzZXMubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIGMuc3BsaXQoJyAnKTtcbiAgfSkpO1xuICB0aGlzLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgY2xhc3NOYW1lcy5mb3JFYWNoKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgIGVsLmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhc0NsYXNzKCkge1xuICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzZXMgPSBuZXcgQXJyYXkoX2xlbjQpLCBfa2V5NCA9IDA7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICBjbGFzc2VzW19rZXk0XSA9IGFyZ3VtZW50c1tfa2V5NF07XG4gIH1cblxuICB2YXIgY2xhc3NOYW1lcyA9IGFycmF5RmxhdChjbGFzc2VzLm1hcChmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiBjLnNwbGl0KCcgJyk7XG4gIH0pKTtcbiAgcmV0dXJuIGFycmF5RmlsdGVyKHRoaXMsIGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBjbGFzc05hbWVzLmZpbHRlcihmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgICByZXR1cm4gZWwuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG4gICAgfSkubGVuZ3RoID4gMDtcbiAgfSkubGVuZ3RoID4gMDtcbn1cblxuZnVuY3Rpb24gYXR0cihhdHRycywgdmFsdWUpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGF0dHJzID09PSAnc3RyaW5nJykge1xuICAgIC8vIEdldCBhdHRyXG4gICAgaWYgKHRoaXNbMF0pIHJldHVybiB0aGlzWzBdLmdldEF0dHJpYnV0ZShhdHRycyk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfSAvLyBTZXQgYXR0cnNcblxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAvLyBTdHJpbmdcbiAgICAgIHRoaXNbaV0uc2V0QXR0cmlidXRlKGF0dHJzLCB2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE9iamVjdFxuICAgICAgZm9yICh2YXIgYXR0ck5hbWUgaW4gYXR0cnMpIHtcbiAgICAgICAgdGhpc1tpXVthdHRyTmFtZV0gPSBhdHRyc1thdHRyTmFtZV07XG4gICAgICAgIHRoaXNbaV0uc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBhdHRyc1thdHRyTmFtZV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiByZW1vdmVBdHRyKGF0dHIpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhpc1tpXS5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gcHJvcChwcm9wcywgdmFsdWUpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgIC8vIEdldCBwcm9wXG4gICAgaWYgKHRoaXNbMF0pIHJldHVybiB0aGlzWzBdW3Byb3BzXTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTZXQgcHJvcHNcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIC8vIFN0cmluZ1xuICAgICAgICB0aGlzW2ldW3Byb3BzXSA9IHZhbHVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT2JqZWN0XG4gICAgICAgIGZvciAodmFyIHByb3BOYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgdGhpc1tpXVtwcm9wTmFtZV0gPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBkYXRhKGtleSwgdmFsdWUpIHtcbiAgdmFyIGVsO1xuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZWwgPSB0aGlzWzBdO1xuICAgIGlmICghZWwpIHJldHVybiB1bmRlZmluZWQ7IC8vIEdldCB2YWx1ZVxuXG4gICAgaWYgKGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UgJiYga2V5IGluIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UpIHtcbiAgICAgIHJldHVybiBlbC5kb203RWxlbWVudERhdGFTdG9yYWdlW2tleV07XG4gICAgfVxuXG4gICAgdmFyIGRhdGFLZXkgPSBlbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLVwiICsga2V5KTtcblxuICAgIGlmIChkYXRhS2V5KSB7XG4gICAgICByZXR1cm4gZGF0YUtleTtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9IC8vIFNldCB2YWx1ZVxuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgZWwgPSB0aGlzW2ldO1xuICAgIGlmICghZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSkgZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSA9IHt9O1xuICAgIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2Vba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZURhdGEoa2V5KSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBlbCA9IHRoaXNbaV07XG5cbiAgICBpZiAoZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSAmJiBlbC5kb203RWxlbWVudERhdGFTdG9yYWdlW2tleV0pIHtcbiAgICAgIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2Vba2V5XSA9IG51bGw7XG4gICAgICBkZWxldGUgZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZVtrZXldO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkYXRhc2V0KCkge1xuICB2YXIgZWwgPSB0aGlzWzBdO1xuICBpZiAoIWVsKSByZXR1cm4gdW5kZWZpbmVkO1xuICB2YXIgZGF0YXNldCA9IHt9OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgaWYgKGVsLmRhdGFzZXQpIHtcbiAgICBmb3IgKHZhciBkYXRhS2V5IGluIGVsLmRhdGFzZXQpIHtcbiAgICAgIGRhdGFzZXRbZGF0YUtleV0gPSBlbC5kYXRhc2V0W2RhdGFLZXldO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsLmF0dHJpYnV0ZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBfYXR0ciA9IGVsLmF0dHJpYnV0ZXNbaV07XG5cbiAgICAgIGlmIChfYXR0ci5uYW1lLmluZGV4T2YoJ2RhdGEtJykgPj0gMCkge1xuICAgICAgICBkYXRhc2V0W3RvQ2FtZWxDYXNlKF9hdHRyLm5hbWUuc3BsaXQoJ2RhdGEtJylbMV0pXSA9IF9hdHRyLnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGtleSBpbiBkYXRhc2V0KSB7XG4gICAgaWYgKGRhdGFzZXRba2V5XSA9PT0gJ2ZhbHNlJykgZGF0YXNldFtrZXldID0gZmFsc2U7ZWxzZSBpZiAoZGF0YXNldFtrZXldID09PSAndHJ1ZScpIGRhdGFzZXRba2V5XSA9IHRydWU7ZWxzZSBpZiAocGFyc2VGbG9hdChkYXRhc2V0W2tleV0pID09PSBkYXRhc2V0W2tleV0gKiAxKSBkYXRhc2V0W2tleV0gKj0gMTtcbiAgfVxuXG4gIHJldHVybiBkYXRhc2V0O1xufVxuXG5mdW5jdGlvbiB2YWwodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBnZXQgdmFsdWVcbiAgICB2YXIgZWwgPSB0aGlzWzBdO1xuICAgIGlmICghZWwpIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoZWwubXVsdGlwbGUgJiYgZWwubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbC5zZWxlY3RlZE9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgdmFsdWVzLnB1c2goZWwuc2VsZWN0ZWRPcHRpb25zW2ldLnZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9XG5cbiAgICByZXR1cm4gZWwudmFsdWU7XG4gIH0gLy8gc2V0IHZhbHVlXG5cblxuICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdGhpcy5sZW5ndGg7IF9pICs9IDEpIHtcbiAgICB2YXIgX2VsID0gdGhpc1tfaV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgX2VsLm11bHRpcGxlICYmIF9lbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2VsZWN0Jykge1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBfZWwub3B0aW9ucy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICBfZWwub3B0aW9uc1tqXS5zZWxlY3RlZCA9IHZhbHVlLmluZGV4T2YoX2VsLm9wdGlvbnNbal0udmFsdWUpID49IDA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIF9lbC52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiB2YWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdGhpcy52YWwodmFsdWUpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHRoaXNbaV0uc3R5bGUudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb24oZHVyYXRpb24pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhpc1tpXS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSB0eXBlb2YgZHVyYXRpb24gIT09ICdzdHJpbmcnID8gZHVyYXRpb24gKyBcIm1zXCIgOiBkdXJhdGlvbjtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBvbigpIHtcbiAgZm9yICh2YXIgX2xlbjUgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW41KSwgX2tleTUgPSAwOyBfa2V5NSA8IF9sZW41OyBfa2V5NSsrKSB7XG4gICAgYXJnc1tfa2V5NV0gPSBhcmd1bWVudHNbX2tleTVdO1xuICB9XG5cbiAgdmFyIGV2ZW50VHlwZSA9IGFyZ3NbMF0sXG4gICAgICB0YXJnZXRTZWxlY3RvciA9IGFyZ3NbMV0sXG4gICAgICBsaXN0ZW5lciA9IGFyZ3NbMl0sXG4gICAgICBjYXB0dXJlID0gYXJnc1szXTtcblxuICBpZiAodHlwZW9mIGFyZ3NbMV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICBldmVudFR5cGUgPSBhcmdzWzBdO1xuICAgIGxpc3RlbmVyID0gYXJnc1sxXTtcbiAgICBjYXB0dXJlID0gYXJnc1syXTtcbiAgICB0YXJnZXRTZWxlY3RvciA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICghY2FwdHVyZSkgY2FwdHVyZSA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUxpdmVFdmVudChlKSB7XG4gICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0O1xuICAgIGlmICghdGFyZ2V0KSByZXR1cm47XG4gICAgdmFyIGV2ZW50RGF0YSA9IGUudGFyZ2V0LmRvbTdFdmVudERhdGEgfHwgW107XG5cbiAgICBpZiAoZXZlbnREYXRhLmluZGV4T2YoZSkgPCAwKSB7XG4gICAgICBldmVudERhdGEudW5zaGlmdChlKTtcbiAgICB9XG5cbiAgICBpZiAoJCh0YXJnZXQpLmlzKHRhcmdldFNlbGVjdG9yKSkgbGlzdGVuZXIuYXBwbHkodGFyZ2V0LCBldmVudERhdGEpO2Vsc2Uge1xuICAgICAgdmFyIF9wYXJlbnRzID0gJCh0YXJnZXQpLnBhcmVudHMoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG5cbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgX3BhcmVudHMubGVuZ3RoOyBrICs9IDEpIHtcbiAgICAgICAgaWYgKCQoX3BhcmVudHNba10pLmlzKHRhcmdldFNlbGVjdG9yKSkgbGlzdGVuZXIuYXBwbHkoX3BhcmVudHNba10sIGV2ZW50RGF0YSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRXZlbnQoZSkge1xuICAgIHZhciBldmVudERhdGEgPSBlICYmIGUudGFyZ2V0ID8gZS50YXJnZXQuZG9tN0V2ZW50RGF0YSB8fCBbXSA6IFtdO1xuXG4gICAgaWYgKGV2ZW50RGF0YS5pbmRleE9mKGUpIDwgMCkge1xuICAgICAgZXZlbnREYXRhLnVuc2hpZnQoZSk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXIuYXBwbHkodGhpcywgZXZlbnREYXRhKTtcbiAgfVxuXG4gIHZhciBldmVudHMgPSBldmVudFR5cGUuc3BsaXQoJyAnKTtcbiAgdmFyIGo7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIGVsID0gdGhpc1tpXTtcblxuICAgIGlmICghdGFyZ2V0U2VsZWN0b3IpIHtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBldmVudHMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgdmFyIGV2ZW50ID0gZXZlbnRzW2pdO1xuICAgICAgICBpZiAoIWVsLmRvbTdMaXN0ZW5lcnMpIGVsLmRvbTdMaXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgaWYgKCFlbC5kb203TGlzdGVuZXJzW2V2ZW50XSkgZWwuZG9tN0xpc3RlbmVyc1tldmVudF0gPSBbXTtcbiAgICAgICAgZWwuZG9tN0xpc3RlbmVyc1tldmVudF0ucHVzaCh7XG4gICAgICAgICAgbGlzdGVuZXI6IGxpc3RlbmVyLFxuICAgICAgICAgIHByb3h5TGlzdGVuZXI6IGhhbmRsZUV2ZW50XG4gICAgICAgIH0pO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVFdmVudCwgY2FwdHVyZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIExpdmUgZXZlbnRzXG4gICAgICBmb3IgKGogPSAwOyBqIDwgZXZlbnRzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIHZhciBfZXZlbnQgPSBldmVudHNbal07XG4gICAgICAgIGlmICghZWwuZG9tN0xpdmVMaXN0ZW5lcnMpIGVsLmRvbTdMaXZlTGlzdGVuZXJzID0ge307XG4gICAgICAgIGlmICghZWwuZG9tN0xpdmVMaXN0ZW5lcnNbX2V2ZW50XSkgZWwuZG9tN0xpdmVMaXN0ZW5lcnNbX2V2ZW50XSA9IFtdO1xuXG4gICAgICAgIGVsLmRvbTdMaXZlTGlzdGVuZXJzW19ldmVudF0ucHVzaCh7XG4gICAgICAgICAgbGlzdGVuZXI6IGxpc3RlbmVyLFxuICAgICAgICAgIHByb3h5TGlzdGVuZXI6IGhhbmRsZUxpdmVFdmVudFxuICAgICAgICB9KTtcblxuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKF9ldmVudCwgaGFuZGxlTGl2ZUV2ZW50LCBjYXB0dXJlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gb2ZmKCkge1xuICBmb3IgKHZhciBfbGVuNiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjYpLCBfa2V5NiA9IDA7IF9rZXk2IDwgX2xlbjY7IF9rZXk2KyspIHtcbiAgICBhcmdzW19rZXk2XSA9IGFyZ3VtZW50c1tfa2V5Nl07XG4gIH1cblxuICB2YXIgZXZlbnRUeXBlID0gYXJnc1swXSxcbiAgICAgIHRhcmdldFNlbGVjdG9yID0gYXJnc1sxXSxcbiAgICAgIGxpc3RlbmVyID0gYXJnc1syXSxcbiAgICAgIGNhcHR1cmUgPSBhcmdzWzNdO1xuXG4gIGlmICh0eXBlb2YgYXJnc1sxXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGV2ZW50VHlwZSA9IGFyZ3NbMF07XG4gICAgbGlzdGVuZXIgPSBhcmdzWzFdO1xuICAgIGNhcHR1cmUgPSBhcmdzWzJdO1xuICAgIHRhcmdldFNlbGVjdG9yID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKCFjYXB0dXJlKSBjYXB0dXJlID0gZmFsc2U7XG4gIHZhciBldmVudHMgPSBldmVudFR5cGUuc3BsaXQoJyAnKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBldmVudCA9IGV2ZW50c1tpXTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgdmFyIGVsID0gdGhpc1tqXTtcbiAgICAgIHZhciBoYW5kbGVycyA9IHZvaWQgMDtcblxuICAgICAgaWYgKCF0YXJnZXRTZWxlY3RvciAmJiBlbC5kb203TGlzdGVuZXJzKSB7XG4gICAgICAgIGhhbmRsZXJzID0gZWwuZG9tN0xpc3RlbmVyc1tldmVudF07XG4gICAgICB9IGVsc2UgaWYgKHRhcmdldFNlbGVjdG9yICYmIGVsLmRvbTdMaXZlTGlzdGVuZXJzKSB7XG4gICAgICAgIGhhbmRsZXJzID0gZWwuZG9tN0xpdmVMaXN0ZW5lcnNbZXZlbnRdO1xuICAgICAgfVxuXG4gICAgICBpZiAoaGFuZGxlcnMgJiYgaGFuZGxlcnMubGVuZ3RoKSB7XG4gICAgICAgIGZvciAodmFyIGsgPSBoYW5kbGVycy5sZW5ndGggLSAxOyBrID49IDA7IGsgLT0gMSkge1xuICAgICAgICAgIHZhciBoYW5kbGVyID0gaGFuZGxlcnNba107XG5cbiAgICAgICAgICBpZiAobGlzdGVuZXIgJiYgaGFuZGxlci5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIucHJveHlMaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgICAgICAgICBoYW5kbGVycy5zcGxpY2UoaywgMSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChsaXN0ZW5lciAmJiBoYW5kbGVyLmxpc3RlbmVyICYmIGhhbmRsZXIubGlzdGVuZXIuZG9tN3Byb3h5ICYmIGhhbmRsZXIubGlzdGVuZXIuZG9tN3Byb3h5ID09PSBsaXN0ZW5lcikge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlci5wcm94eUxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLnNwbGljZShrLCAxKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKCFsaXN0ZW5lcikge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlci5wcm94eUxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLnNwbGljZShrLCAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gb25jZSgpIHtcbiAgdmFyIGRvbSA9IHRoaXM7XG5cbiAgZm9yICh2YXIgX2xlbjcgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW43KSwgX2tleTcgPSAwOyBfa2V5NyA8IF9sZW43OyBfa2V5NysrKSB7XG4gICAgYXJnc1tfa2V5N10gPSBhcmd1bWVudHNbX2tleTddO1xuICB9XG5cbiAgdmFyIGV2ZW50TmFtZSA9IGFyZ3NbMF0sXG4gICAgICB0YXJnZXRTZWxlY3RvciA9IGFyZ3NbMV0sXG4gICAgICBsaXN0ZW5lciA9IGFyZ3NbMl0sXG4gICAgICBjYXB0dXJlID0gYXJnc1szXTtcblxuICBpZiAodHlwZW9mIGFyZ3NbMV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICBldmVudE5hbWUgPSBhcmdzWzBdO1xuICAgIGxpc3RlbmVyID0gYXJnc1sxXTtcbiAgICBjYXB0dXJlID0gYXJnc1syXTtcbiAgICB0YXJnZXRTZWxlY3RvciA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uY2VIYW5kbGVyKCkge1xuICAgIGZvciAodmFyIF9sZW44ID0gYXJndW1lbnRzLmxlbmd0aCwgZXZlbnRBcmdzID0gbmV3IEFycmF5KF9sZW44KSwgX2tleTggPSAwOyBfa2V5OCA8IF9sZW44OyBfa2V5OCsrKSB7XG4gICAgICBldmVudEFyZ3NbX2tleThdID0gYXJndW1lbnRzW19rZXk4XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBldmVudEFyZ3MpO1xuICAgIGRvbS5vZmYoZXZlbnROYW1lLCB0YXJnZXRTZWxlY3Rvciwgb25jZUhhbmRsZXIsIGNhcHR1cmUpO1xuXG4gICAgaWYgKG9uY2VIYW5kbGVyLmRvbTdwcm94eSkge1xuICAgICAgZGVsZXRlIG9uY2VIYW5kbGVyLmRvbTdwcm94eTtcbiAgICB9XG4gIH1cblxuICBvbmNlSGFuZGxlci5kb203cHJveHkgPSBsaXN0ZW5lcjtcbiAgcmV0dXJuIGRvbS5vbihldmVudE5hbWUsIHRhcmdldFNlbGVjdG9yLCBvbmNlSGFuZGxlciwgY2FwdHVyZSk7XG59XG5cbmZ1bmN0aW9uIHRyaWdnZXIoKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuICBmb3IgKHZhciBfbGVuOSA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjkpLCBfa2V5OSA9IDA7IF9rZXk5IDwgX2xlbjk7IF9rZXk5KyspIHtcbiAgICBhcmdzW19rZXk5XSA9IGFyZ3VtZW50c1tfa2V5OV07XG4gIH1cblxuICB2YXIgZXZlbnRzID0gYXJnc1swXS5zcGxpdCgnICcpO1xuICB2YXIgZXZlbnREYXRhID0gYXJnc1sxXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBldmVudCA9IGV2ZW50c1tpXTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgdmFyIGVsID0gdGhpc1tqXTtcblxuICAgICAgaWYgKHdpbmRvdy5DdXN0b21FdmVudCkge1xuICAgICAgICB2YXIgZXZ0ID0gbmV3IHdpbmRvdy5DdXN0b21FdmVudChldmVudCwge1xuICAgICAgICAgIGRldGFpbDogZXZlbnREYXRhLFxuICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgZWwuZG9tN0V2ZW50RGF0YSA9IGFyZ3MuZmlsdGVyKGZ1bmN0aW9uIChkYXRhLCBkYXRhSW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gZGF0YUluZGV4ID4gMDtcbiAgICAgICAgfSk7XG4gICAgICAgIGVsLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICAgICAgZWwuZG9tN0V2ZW50RGF0YSA9IFtdO1xuICAgICAgICBkZWxldGUgZWwuZG9tN0V2ZW50RGF0YTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gdHJhbnNpdGlvbkVuZChjYWxsYmFjaykge1xuICB2YXIgZG9tID0gdGhpcztcblxuICBmdW5jdGlvbiBmaXJlQ2FsbEJhY2soZSkge1xuICAgIGlmIChlLnRhcmdldCAhPT0gdGhpcykgcmV0dXJuO1xuICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZSk7XG4gICAgZG9tLm9mZigndHJhbnNpdGlvbmVuZCcsIGZpcmVDYWxsQmFjayk7XG4gIH1cblxuICBpZiAoY2FsbGJhY2spIHtcbiAgICBkb20ub24oJ3RyYW5zaXRpb25lbmQnLCBmaXJlQ2FsbEJhY2spO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGlvbkVuZChjYWxsYmFjaykge1xuICB2YXIgZG9tID0gdGhpcztcblxuICBmdW5jdGlvbiBmaXJlQ2FsbEJhY2soZSkge1xuICAgIGlmIChlLnRhcmdldCAhPT0gdGhpcykgcmV0dXJuO1xuICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZSk7XG4gICAgZG9tLm9mZignYW5pbWF0aW9uZW5kJywgZmlyZUNhbGxCYWNrKTtcbiAgfVxuXG4gIGlmIChjYWxsYmFjaykge1xuICAgIGRvbS5vbignYW5pbWF0aW9uZW5kJywgZmlyZUNhbGxCYWNrKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiB3aWR0aCgpIHtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuXG4gIGlmICh0aGlzWzBdID09PSB3aW5kb3cpIHtcbiAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGg7XG4gIH1cblxuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5jc3MoJ3dpZHRoJykpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIG91dGVyV2lkdGgoaW5jbHVkZU1hcmdpbnMpIHtcbiAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgIGlmIChpbmNsdWRlTWFyZ2lucykge1xuICAgICAgdmFyIF9zdHlsZXMgPSB0aGlzLnN0eWxlcygpO1xuXG4gICAgICByZXR1cm4gdGhpc1swXS5vZmZzZXRXaWR0aCArIHBhcnNlRmxvYXQoX3N0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdtYXJnaW4tcmlnaHQnKSkgKyBwYXJzZUZsb2F0KF9zdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLWxlZnQnKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXNbMF0ub2Zmc2V0V2lkdGg7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaGVpZ2h0KCkge1xuICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG5cbiAgaWYgKHRoaXNbMF0gPT09IHdpbmRvdykge1xuICAgIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gIH1cblxuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5jc3MoJ2hlaWdodCcpKTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBvdXRlckhlaWdodChpbmNsdWRlTWFyZ2lucykge1xuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgaWYgKGluY2x1ZGVNYXJnaW5zKSB7XG4gICAgICB2YXIgX3N0eWxlczIgPSB0aGlzLnN0eWxlcygpO1xuXG4gICAgICByZXR1cm4gdGhpc1swXS5vZmZzZXRIZWlnaHQgKyBwYXJzZUZsb2F0KF9zdHlsZXMyLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi10b3AnKSkgKyBwYXJzZUZsb2F0KF9zdHlsZXMyLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1ib3R0b20nKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXNbMF0ub2Zmc2V0SGVpZ2h0O1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIG9mZnNldCgpIHtcbiAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgIHZhciBlbCA9IHRoaXNbMF07XG4gICAgdmFyIGJveCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keTtcbiAgICB2YXIgY2xpZW50VG9wID0gZWwuY2xpZW50VG9wIHx8IGJvZHkuY2xpZW50VG9wIHx8IDA7XG4gICAgdmFyIGNsaWVudExlZnQgPSBlbC5jbGllbnRMZWZ0IHx8IGJvZHkuY2xpZW50TGVmdCB8fCAwO1xuICAgIHZhciBzY3JvbGxUb3AgPSBlbCA9PT0gd2luZG93ID8gd2luZG93LnNjcm9sbFkgOiBlbC5zY3JvbGxUb3A7XG4gICAgdmFyIHNjcm9sbExlZnQgPSBlbCA9PT0gd2luZG93ID8gd2luZG93LnNjcm9sbFggOiBlbC5zY3JvbGxMZWZ0O1xuICAgIHJldHVybiB7XG4gICAgICB0b3A6IGJveC50b3AgKyBzY3JvbGxUb3AgLSBjbGllbnRUb3AsXG4gICAgICBsZWZ0OiBib3gubGVmdCArIHNjcm9sbExlZnQgLSBjbGllbnRMZWZ0XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBoaWRlKCkge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB0aGlzW2ldLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gc2hvdygpIHtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBlbCA9IHRoaXNbaV07XG5cbiAgICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XG4gICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKCdkaXNwbGF5JykgPT09ICdub25lJykge1xuICAgICAgLy8gU3RpbGwgbm90IHZpc2libGVcbiAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBzdHlsZXMoKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgaWYgKHRoaXNbMF0pIHJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzWzBdLCBudWxsKTtcbiAgcmV0dXJuIHt9O1xufVxuXG5mdW5jdGlvbiBjc3MocHJvcHMsIHZhbHVlKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIGk7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICBpZiAodHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gLmNzcygnd2lkdGgnKVxuICAgICAgaWYgKHRoaXNbMF0pIHJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzWzBdLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHByb3BzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gLmNzcyh7IHdpZHRoOiAnMTAwcHgnIH0pXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBmb3IgKHZhciBfcHJvcCBpbiBwcm9wcykge1xuICAgICAgICAgIHRoaXNbaV0uc3R5bGVbX3Byb3BdID0gcHJvcHNbX3Byb3BdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfVxuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBwcm9wcyA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyAuY3NzKCd3aWR0aCcsICcxMDBweCcpXG4gICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHRoaXNbaV0uc3R5bGVbcHJvcHNdID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gZWFjaChjYWxsYmFjaykge1xuICBpZiAoIWNhbGxiYWNrKSByZXR1cm4gdGhpcztcbiAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCwgaW5kZXgpIHtcbiAgICBjYWxsYmFjay5hcHBseShlbCwgW2VsLCBpbmRleF0pO1xuICB9KTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIGZpbHRlcihjYWxsYmFjaykge1xuICB2YXIgcmVzdWx0ID0gYXJyYXlGaWx0ZXIodGhpcywgY2FsbGJhY2spO1xuICByZXR1cm4gJChyZXN1bHQpO1xufVxuXG5mdW5jdGlvbiBodG1sKGh0bWwpIHtcbiAgaWYgKHR5cGVvZiBodG1sID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB0aGlzWzBdID8gdGhpc1swXS5pbm5lckhUTUwgOiBudWxsO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhpc1tpXS5pbm5lckhUTUwgPSBodG1sO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIHRleHQodGV4dCkge1xuICBpZiAodHlwZW9mIHRleHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHRoaXNbMF0gPyB0aGlzWzBdLnRleHRDb250ZW50LnRyaW0oKSA6IG51bGw7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB0aGlzW2ldLnRleHRDb250ZW50ID0gdGV4dDtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBpcyhzZWxlY3Rvcikge1xuICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gIHZhciBlbCA9IHRoaXNbMF07XG4gIHZhciBjb21wYXJlV2l0aDtcbiAgdmFyIGk7XG4gIGlmICghZWwgfHwgdHlwZW9mIHNlbGVjdG9yID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKGVsLm1hdGNoZXMpIHJldHVybiBlbC5tYXRjaGVzKHNlbGVjdG9yKTtcbiAgICBpZiAoZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKSByZXR1cm4gZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBpZiAoZWwubXNNYXRjaGVzU2VsZWN0b3IpIHJldHVybiBlbC5tc01hdGNoZXNTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgY29tcGFyZVdpdGggPSAkKHNlbGVjdG9yKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBjb21wYXJlV2l0aC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKGNvbXBhcmVXaXRoW2ldID09PSBlbCkgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHNlbGVjdG9yID09PSBkb2N1bWVudCkge1xuICAgIHJldHVybiBlbCA9PT0gZG9jdW1lbnQ7XG4gIH1cblxuICBpZiAoc2VsZWN0b3IgPT09IHdpbmRvdykge1xuICAgIHJldHVybiBlbCA9PT0gd2luZG93O1xuICB9XG5cbiAgaWYgKHNlbGVjdG9yLm5vZGVUeXBlIHx8IHNlbGVjdG9yIGluc3RhbmNlb2YgRG9tNykge1xuICAgIGNvbXBhcmVXaXRoID0gc2VsZWN0b3Iubm9kZVR5cGUgPyBbc2VsZWN0b3JdIDogc2VsZWN0b3I7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgY29tcGFyZVdpdGgubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChjb21wYXJlV2l0aFtpXSA9PT0gZWwpIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaW5kZXgoKSB7XG4gIHZhciBjaGlsZCA9IHRoaXNbMF07XG4gIHZhciBpO1xuXG4gIGlmIChjaGlsZCkge1xuICAgIGkgPSAwOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuICAgIHdoaWxlICgoY2hpbGQgPSBjaGlsZC5wcmV2aW91c1NpYmxpbmcpICE9PSBudWxsKSB7XG4gICAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT09IDEpIGkgKz0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gaTtcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGVxKGluZGV4KSB7XG4gIGlmICh0eXBlb2YgaW5kZXggPT09ICd1bmRlZmluZWQnKSByZXR1cm4gdGhpcztcbiAgdmFyIGxlbmd0aCA9IHRoaXMubGVuZ3RoO1xuXG4gIGlmIChpbmRleCA+IGxlbmd0aCAtIDEpIHtcbiAgICByZXR1cm4gJChbXSk7XG4gIH1cblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgdmFyIHJldHVybkluZGV4ID0gbGVuZ3RoICsgaW5kZXg7XG4gICAgaWYgKHJldHVybkluZGV4IDwgMCkgcmV0dXJuICQoW10pO1xuICAgIHJldHVybiAkKFt0aGlzW3JldHVybkluZGV4XV0pO1xuICB9XG5cbiAgcmV0dXJuICQoW3RoaXNbaW5kZXhdXSk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZCgpIHtcbiAgdmFyIG5ld0NoaWxkO1xuICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuXG4gIGZvciAodmFyIGsgPSAwOyBrIDwgYXJndW1lbnRzLmxlbmd0aDsgayArPSAxKSB7XG4gICAgbmV3Q2hpbGQgPSBrIDwgMCB8fCBhcmd1bWVudHMubGVuZ3RoIDw9IGsgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNba107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciB0ZW1wRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRlbXBEaXYuaW5uZXJIVE1MID0gbmV3Q2hpbGQ7XG5cbiAgICAgICAgd2hpbGUgKHRlbXBEaXYuZmlyc3RDaGlsZCkge1xuICAgICAgICAgIHRoaXNbaV0uYXBwZW5kQ2hpbGQodGVtcERpdi5maXJzdENoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChuZXdDaGlsZCBpbnN0YW5jZW9mIERvbTcpIHtcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBuZXdDaGlsZC5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgIHRoaXNbaV0uYXBwZW5kQ2hpbGQobmV3Q2hpbGRbal0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKG5ld0NoaWxkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gYXBwZW5kVG8ocGFyZW50KSB7XG4gICQocGFyZW50KS5hcHBlbmQodGhpcyk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5mdW5jdGlvbiBwcmVwZW5kKG5ld0NoaWxkKSB7XG4gIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gIHZhciBpO1xuICB2YXIgajtcblxuICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YXIgdGVtcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGVtcERpdi5pbm5lckhUTUwgPSBuZXdDaGlsZDtcblxuICAgICAgZm9yIChqID0gdGVtcERpdi5jaGlsZE5vZGVzLmxlbmd0aCAtIDE7IGogPj0gMDsgaiAtPSAxKSB7XG4gICAgICAgIHRoaXNbaV0uaW5zZXJ0QmVmb3JlKHRlbXBEaXYuY2hpbGROb2Rlc1tqXSwgdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5ld0NoaWxkIGluc3RhbmNlb2YgRG9tNykge1xuICAgICAgZm9yIChqID0gMDsgaiA8IG5ld0NoaWxkLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIHRoaXNbaV0uaW5zZXJ0QmVmb3JlKG5ld0NoaWxkW2pdLCB0aGlzW2ldLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzW2ldLmluc2VydEJlZm9yZShuZXdDaGlsZCwgdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gcHJlcGVuZFRvKHBhcmVudCkge1xuICAkKHBhcmVudCkucHJlcGVuZCh0aGlzKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydEJlZm9yZShzZWxlY3Rvcikge1xuICB2YXIgYmVmb3JlID0gJChzZWxlY3Rvcik7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGJlZm9yZS5sZW5ndGggPT09IDEpIHtcbiAgICAgIGJlZm9yZVswXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzW2ldLCBiZWZvcmVbMF0pO1xuICAgIH0gZWxzZSBpZiAoYmVmb3JlLmxlbmd0aCA+IDEpIHtcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgYmVmb3JlLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIGJlZm9yZVtqXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzW2ldLmNsb25lTm9kZSh0cnVlKSwgYmVmb3JlW2pdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5zZXJ0QWZ0ZXIoc2VsZWN0b3IpIHtcbiAgdmFyIGFmdGVyID0gJChzZWxlY3Rvcik7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGFmdGVyLmxlbmd0aCA9PT0gMSkge1xuICAgICAgYWZ0ZXJbMF0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpc1tpXSwgYWZ0ZXJbMF0ubmV4dFNpYmxpbmcpO1xuICAgIH0gZWxzZSBpZiAoYWZ0ZXIubGVuZ3RoID4gMSkge1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBhZnRlci5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICBhZnRlcltqXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzW2ldLmNsb25lTm9kZSh0cnVlKSwgYWZ0ZXJbal0ubmV4dFNpYmxpbmcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBuZXh0KHNlbGVjdG9yKSB7XG4gIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgIGlmICh0aGlzWzBdLm5leHRFbGVtZW50U2libGluZyAmJiAkKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nKS5pcyhzZWxlY3RvcikpIHtcbiAgICAgICAgcmV0dXJuICQoW3RoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nXSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAkKFtdKTtcbiAgICB9XG5cbiAgICBpZiAodGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmcpIHJldHVybiAkKFt0aGlzWzBdLm5leHRFbGVtZW50U2libGluZ10pO1xuICAgIHJldHVybiAkKFtdKTtcbiAgfVxuXG4gIHJldHVybiAkKFtdKTtcbn1cblxuZnVuY3Rpb24gbmV4dEFsbChzZWxlY3Rvcikge1xuICB2YXIgbmV4dEVscyA9IFtdO1xuICB2YXIgZWwgPSB0aGlzWzBdO1xuICBpZiAoIWVsKSByZXR1cm4gJChbXSk7XG5cbiAgd2hpbGUgKGVsLm5leHRFbGVtZW50U2libGluZykge1xuICAgIHZhciBfbmV4dCA9IGVsLm5leHRFbGVtZW50U2libGluZzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICBpZiAoJChfbmV4dCkuaXMoc2VsZWN0b3IpKSBuZXh0RWxzLnB1c2goX25leHQpO1xuICAgIH0gZWxzZSBuZXh0RWxzLnB1c2goX25leHQpO1xuXG4gICAgZWwgPSBfbmV4dDtcbiAgfVxuXG4gIHJldHVybiAkKG5leHRFbHMpO1xufVxuXG5mdW5jdGlvbiBwcmV2KHNlbGVjdG9yKSB7XG4gIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgZWwgPSB0aGlzWzBdO1xuXG4gICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICBpZiAoZWwucHJldmlvdXNFbGVtZW50U2libGluZyAmJiAkKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICByZXR1cm4gJChbZWwucHJldmlvdXNFbGVtZW50U2libGluZ10pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gJChbXSk7XG4gICAgfVxuXG4gICAgaWYgKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHJldHVybiAkKFtlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk7XG4gICAgcmV0dXJuICQoW10pO1xuICB9XG5cbiAgcmV0dXJuICQoW10pO1xufVxuXG5mdW5jdGlvbiBwcmV2QWxsKHNlbGVjdG9yKSB7XG4gIHZhciBwcmV2RWxzID0gW107XG4gIHZhciBlbCA9IHRoaXNbMF07XG4gIGlmICghZWwpIHJldHVybiAkKFtdKTtcblxuICB3aGlsZSAoZWwucHJldmlvdXNFbGVtZW50U2libGluZykge1xuICAgIHZhciBfcHJldiA9IGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgaWYgKCQoX3ByZXYpLmlzKHNlbGVjdG9yKSkgcHJldkVscy5wdXNoKF9wcmV2KTtcbiAgICB9IGVsc2UgcHJldkVscy5wdXNoKF9wcmV2KTtcblxuICAgIGVsID0gX3ByZXY7XG4gIH1cblxuICByZXR1cm4gJChwcmV2RWxzKTtcbn1cblxuZnVuY3Rpb24gc2libGluZ3Moc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHRoaXMubmV4dEFsbChzZWxlY3RvcikuYWRkKHRoaXMucHJldkFsbChzZWxlY3RvcikpO1xufVxuXG5mdW5jdGlvbiBwYXJlbnQoc2VsZWN0b3IpIHtcbiAgdmFyIHBhcmVudHMgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmICh0aGlzW2ldLnBhcmVudE5vZGUgIT09IG51bGwpIHtcbiAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICBpZiAoJCh0aGlzW2ldLnBhcmVudE5vZGUpLmlzKHNlbGVjdG9yKSkgcGFyZW50cy5wdXNoKHRoaXNbaV0ucGFyZW50Tm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJlbnRzLnB1c2godGhpc1tpXS5wYXJlbnROb2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gJChwYXJlbnRzKTtcbn1cblxuZnVuY3Rpb24gcGFyZW50cyhzZWxlY3Rvcikge1xuICB2YXIgcGFyZW50cyA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIF9wYXJlbnQgPSB0aGlzW2ldLnBhcmVudE5vZGU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIHdoaWxlIChfcGFyZW50KSB7XG4gICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgaWYgKCQoX3BhcmVudCkuaXMoc2VsZWN0b3IpKSBwYXJlbnRzLnB1c2goX3BhcmVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJlbnRzLnB1c2goX3BhcmVudCk7XG4gICAgICB9XG5cbiAgICAgIF9wYXJlbnQgPSBfcGFyZW50LnBhcmVudE5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICQocGFyZW50cyk7XG59XG5cbmZ1bmN0aW9uIGNsb3Nlc3Qoc2VsZWN0b3IpIHtcbiAgdmFyIGNsb3Nlc3QgPSB0aGlzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gJChbXSk7XG4gIH1cblxuICBpZiAoIWNsb3Nlc3QuaXMoc2VsZWN0b3IpKSB7XG4gICAgY2xvc2VzdCA9IGNsb3Nlc3QucGFyZW50cyhzZWxlY3RvcikuZXEoMCk7XG4gIH1cblxuICByZXR1cm4gY2xvc2VzdDtcbn1cblxuZnVuY3Rpb24gZmluZChzZWxlY3Rvcikge1xuICB2YXIgZm91bmRFbGVtZW50cyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBmb3VuZCA9IHRoaXNbaV0ucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG5cbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IGZvdW5kLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICBmb3VuZEVsZW1lbnRzLnB1c2goZm91bmRbal0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAkKGZvdW5kRWxlbWVudHMpO1xufVxuXG5mdW5jdGlvbiBjaGlsZHJlbihzZWxlY3Rvcikge1xuICB2YXIgY2hpbGRyZW4gPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBjaGlsZE5vZGVzID0gdGhpc1tpXS5jaGlsZHJlbjtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgY2hpbGROb2Rlcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgaWYgKCFzZWxlY3RvciB8fCAkKGNoaWxkTm9kZXNbal0pLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkTm9kZXNbal0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAkKGNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCkge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodGhpc1tpXS5wYXJlbnROb2RlKSB0aGlzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpc1tpXSk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gZGV0YWNoKCkge1xuICByZXR1cm4gdGhpcy5yZW1vdmUoKTtcbn1cblxuZnVuY3Rpb24gYWRkKCkge1xuICB2YXIgZG9tID0gdGhpcztcbiAgdmFyIGk7XG4gIHZhciBqO1xuXG4gIGZvciAodmFyIF9sZW4xMCA9IGFyZ3VtZW50cy5sZW5ndGgsIGVscyA9IG5ldyBBcnJheShfbGVuMTApLCBfa2V5MTAgPSAwOyBfa2V5MTAgPCBfbGVuMTA7IF9rZXkxMCsrKSB7XG4gICAgZWxzW19rZXkxMF0gPSBhcmd1bWVudHNbX2tleTEwXTtcbiAgfVxuXG4gIGZvciAoaSA9IDA7IGkgPCBlbHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgdG9BZGQgPSAkKGVsc1tpXSk7XG5cbiAgICBmb3IgKGogPSAwOyBqIDwgdG9BZGQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGRvbS5wdXNoKHRvQWRkW2pdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZG9tO1xufVxuXG5mdW5jdGlvbiBlbXB0eSgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIGVsID0gdGhpc1tpXTtcblxuICAgIGlmIChlbC5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBlbC5jaGlsZE5vZGVzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIGlmIChlbC5jaGlsZE5vZGVzW2pdLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICBlbC5jaGlsZE5vZGVzW2pdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwuY2hpbGROb2Rlc1tqXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZWwudGV4dENvbnRlbnQgPSAnJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cblxuZnVuY3Rpb24gc2Nyb2xsVG8oKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIGxlZnQgPSBhcmdzWzBdLFxuICAgICAgdG9wID0gYXJnc1sxXSxcbiAgICAgIGR1cmF0aW9uID0gYXJnc1syXSxcbiAgICAgIGVhc2luZyA9IGFyZ3NbM10sXG4gICAgICBjYWxsYmFjayA9IGFyZ3NbNF07XG5cbiAgaWYgKGFyZ3MubGVuZ3RoID09PSA0ICYmIHR5cGVvZiBlYXNpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IGVhc2luZztcbiAgICBsZWZ0ID0gYXJnc1swXTtcbiAgICB0b3AgPSBhcmdzWzFdO1xuICAgIGR1cmF0aW9uID0gYXJnc1syXTtcbiAgICBjYWxsYmFjayA9IGFyZ3NbM107XG4gICAgZWFzaW5nID0gYXJnc1s0XTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZWFzaW5nID09PSAndW5kZWZpbmVkJykgZWFzaW5nID0gJ3N3aW5nJztcbiAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiBhbmltYXRlKCkge1xuICAgIHZhciBlbCA9IHRoaXM7XG4gICAgdmFyIGN1cnJlbnRUb3A7XG4gICAgdmFyIGN1cnJlbnRMZWZ0O1xuICAgIHZhciBtYXhUb3A7XG4gICAgdmFyIG1heExlZnQ7XG4gICAgdmFyIG5ld1RvcDtcbiAgICB2YXIgbmV3TGVmdDtcbiAgICB2YXIgc2Nyb2xsVG9wOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICB2YXIgc2Nyb2xsTGVmdDsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgdmFyIGFuaW1hdGVUb3AgPSB0b3AgPiAwIHx8IHRvcCA9PT0gMDtcbiAgICB2YXIgYW5pbWF0ZUxlZnQgPSBsZWZ0ID4gMCB8fCBsZWZ0ID09PSAwO1xuXG4gICAgaWYgKHR5cGVvZiBlYXNpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBlYXNpbmcgPSAnc3dpbmcnO1xuICAgIH1cblxuICAgIGlmIChhbmltYXRlVG9wKSB7XG4gICAgICBjdXJyZW50VG9wID0gZWwuc2Nyb2xsVG9wO1xuXG4gICAgICBpZiAoIWR1cmF0aW9uKSB7XG4gICAgICAgIGVsLnNjcm9sbFRvcCA9IHRvcDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYW5pbWF0ZUxlZnQpIHtcbiAgICAgIGN1cnJlbnRMZWZ0ID0gZWwuc2Nyb2xsTGVmdDtcblxuICAgICAgaWYgKCFkdXJhdGlvbikge1xuICAgICAgICBlbC5zY3JvbGxMZWZ0ID0gbGVmdDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWR1cmF0aW9uKSByZXR1cm47XG5cbiAgICBpZiAoYW5pbWF0ZVRvcCkge1xuICAgICAgbWF4VG9wID0gZWwuc2Nyb2xsSGVpZ2h0IC0gZWwub2Zmc2V0SGVpZ2h0O1xuICAgICAgbmV3VG9wID0gTWF0aC5tYXgoTWF0aC5taW4odG9wLCBtYXhUb3ApLCAwKTtcbiAgICB9XG5cbiAgICBpZiAoYW5pbWF0ZUxlZnQpIHtcbiAgICAgIG1heExlZnQgPSBlbC5zY3JvbGxXaWR0aCAtIGVsLm9mZnNldFdpZHRoO1xuICAgICAgbmV3TGVmdCA9IE1hdGgubWF4KE1hdGgubWluKGxlZnQsIG1heExlZnQpLCAwKTtcbiAgICB9XG5cbiAgICB2YXIgc3RhcnRUaW1lID0gbnVsbDtcbiAgICBpZiAoYW5pbWF0ZVRvcCAmJiBuZXdUb3AgPT09IGN1cnJlbnRUb3ApIGFuaW1hdGVUb3AgPSBmYWxzZTtcbiAgICBpZiAoYW5pbWF0ZUxlZnQgJiYgbmV3TGVmdCA9PT0gY3VycmVudExlZnQpIGFuaW1hdGVMZWZ0ID0gZmFsc2U7XG5cbiAgICBmdW5jdGlvbiByZW5kZXIodGltZSkge1xuICAgICAgaWYgKHRpbWUgPT09IHZvaWQgMCkge1xuICAgICAgICB0aW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGFydFRpbWUgPT09IG51bGwpIHtcbiAgICAgICAgc3RhcnRUaW1lID0gdGltZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByb2dyZXNzID0gTWF0aC5tYXgoTWF0aC5taW4oKHRpbWUgLSBzdGFydFRpbWUpIC8gZHVyYXRpb24sIDEpLCAwKTtcbiAgICAgIHZhciBlYXNlUHJvZ3Jlc3MgPSBlYXNpbmcgPT09ICdsaW5lYXInID8gcHJvZ3Jlc3MgOiAwLjUgLSBNYXRoLmNvcyhwcm9ncmVzcyAqIE1hdGguUEkpIC8gMjtcbiAgICAgIHZhciBkb25lO1xuICAgICAgaWYgKGFuaW1hdGVUb3ApIHNjcm9sbFRvcCA9IGN1cnJlbnRUb3AgKyBlYXNlUHJvZ3Jlc3MgKiAobmV3VG9wIC0gY3VycmVudFRvcCk7XG4gICAgICBpZiAoYW5pbWF0ZUxlZnQpIHNjcm9sbExlZnQgPSBjdXJyZW50TGVmdCArIGVhc2VQcm9ncmVzcyAqIChuZXdMZWZ0IC0gY3VycmVudExlZnQpO1xuXG4gICAgICBpZiAoYW5pbWF0ZVRvcCAmJiBuZXdUb3AgPiBjdXJyZW50VG9wICYmIHNjcm9sbFRvcCA+PSBuZXdUb3ApIHtcbiAgICAgICAgZWwuc2Nyb2xsVG9wID0gbmV3VG9wO1xuICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGFuaW1hdGVUb3AgJiYgbmV3VG9wIDwgY3VycmVudFRvcCAmJiBzY3JvbGxUb3AgPD0gbmV3VG9wKSB7XG4gICAgICAgIGVsLnNjcm9sbFRvcCA9IG5ld1RvcDtcbiAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChhbmltYXRlTGVmdCAmJiBuZXdMZWZ0ID4gY3VycmVudExlZnQgJiYgc2Nyb2xsTGVmdCA+PSBuZXdMZWZ0KSB7XG4gICAgICAgIGVsLnNjcm9sbExlZnQgPSBuZXdMZWZ0O1xuICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGFuaW1hdGVMZWZ0ICYmIG5ld0xlZnQgPCBjdXJyZW50TGVmdCAmJiBzY3JvbGxMZWZ0IDw9IG5ld0xlZnQpIHtcbiAgICAgICAgZWwuc2Nyb2xsTGVmdCA9IG5ld0xlZnQ7XG4gICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoZG9uZSkge1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGFuaW1hdGVUb3ApIGVsLnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgIGlmIChhbmltYXRlTGVmdCkgZWwuc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQ7XG4gICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG4gICAgfVxuXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICB9KTtcbn0gLy8gc2Nyb2xsVG9wKHRvcCwgZHVyYXRpb24sIGVhc2luZywgY2FsbGJhY2spIHtcblxuXG5mdW5jdGlvbiBzY3JvbGxUb3AoKSB7XG4gIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgfVxuXG4gIHZhciB0b3AgPSBhcmdzWzBdLFxuICAgICAgZHVyYXRpb24gPSBhcmdzWzFdLFxuICAgICAgZWFzaW5nID0gYXJnc1syXSxcbiAgICAgIGNhbGxiYWNrID0gYXJnc1szXTtcblxuICBpZiAoYXJncy5sZW5ndGggPT09IDMgJiYgdHlwZW9mIGVhc2luZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRvcCA9IGFyZ3NbMF07XG4gICAgZHVyYXRpb24gPSBhcmdzWzFdO1xuICAgIGNhbGxiYWNrID0gYXJnc1syXTtcbiAgICBlYXNpbmcgPSBhcmdzWzNdO1xuICB9XG5cbiAgdmFyIGRvbSA9IHRoaXM7XG5cbiAgaWYgKHR5cGVvZiB0b3AgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKGRvbS5sZW5ndGggPiAwKSByZXR1cm4gZG9tWzBdLnNjcm9sbFRvcDtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBkb20uc2Nyb2xsVG8odW5kZWZpbmVkLCB0b3AsIGR1cmF0aW9uLCBlYXNpbmcsIGNhbGxiYWNrKTtcbn1cblxuZnVuY3Rpb24gc2Nyb2xsTGVmdCgpIHtcbiAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4zKSwgX2tleTMgPSAwOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgYXJnc1tfa2V5M10gPSBhcmd1bWVudHNbX2tleTNdO1xuICB9XG5cbiAgdmFyIGxlZnQgPSBhcmdzWzBdLFxuICAgICAgZHVyYXRpb24gPSBhcmdzWzFdLFxuICAgICAgZWFzaW5nID0gYXJnc1syXSxcbiAgICAgIGNhbGxiYWNrID0gYXJnc1szXTtcblxuICBpZiAoYXJncy5sZW5ndGggPT09IDMgJiYgdHlwZW9mIGVhc2luZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGxlZnQgPSBhcmdzWzBdO1xuICAgIGR1cmF0aW9uID0gYXJnc1sxXTtcbiAgICBjYWxsYmFjayA9IGFyZ3NbMl07XG4gICAgZWFzaW5nID0gYXJnc1szXTtcbiAgfVxuXG4gIHZhciBkb20gPSB0aGlzO1xuXG4gIGlmICh0eXBlb2YgbGVmdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAoZG9tLmxlbmd0aCA+IDApIHJldHVybiBkb21bMF0uc2Nyb2xsTGVmdDtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBkb20uc2Nyb2xsVG8obGVmdCwgdW5kZWZpbmVkLCBkdXJhdGlvbiwgZWFzaW5nLCBjYWxsYmFjayk7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGUoaW5pdGlhbFByb3BzLCBpbml0aWFsUGFyYW1zKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIGVscyA9IHRoaXM7XG4gIHZhciBhID0ge1xuICAgIHByb3BzOiBPYmplY3QuYXNzaWduKHt9LCBpbml0aWFsUHJvcHMpLFxuICAgIHBhcmFtczogT2JqZWN0LmFzc2lnbih7XG4gICAgICBkdXJhdGlvbjogMzAwLFxuICAgICAgZWFzaW5nOiAnc3dpbmcnIC8vIG9yICdsaW5lYXInXG5cbiAgICAgIC8qIENhbGxiYWNrc1xuICAgICAgYmVnaW4oZWxlbWVudHMpXG4gICAgICBjb21wbGV0ZShlbGVtZW50cylcbiAgICAgIHByb2dyZXNzKGVsZW1lbnRzLCBjb21wbGV0ZSwgcmVtYWluaW5nLCBzdGFydCwgdHdlZW5WYWx1ZSlcbiAgICAgICovXG5cbiAgICB9LCBpbml0aWFsUGFyYW1zKSxcbiAgICBlbGVtZW50czogZWxzLFxuICAgIGFuaW1hdGluZzogZmFsc2UsXG4gICAgcXVlOiBbXSxcbiAgICBlYXNpbmdQcm9ncmVzczogZnVuY3Rpb24gZWFzaW5nUHJvZ3Jlc3MoZWFzaW5nLCBwcm9ncmVzcykge1xuICAgICAgaWYgKGVhc2luZyA9PT0gJ3N3aW5nJykge1xuICAgICAgICByZXR1cm4gMC41IC0gTWF0aC5jb3MocHJvZ3Jlc3MgKiBNYXRoLlBJKSAvIDI7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgZWFzaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBlYXNpbmcocHJvZ3Jlc3MpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvZ3Jlc3M7XG4gICAgfSxcbiAgICBzdG9wOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgaWYgKGEuZnJhbWVJZCkge1xuICAgICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUoYS5mcmFtZUlkKTtcbiAgICAgIH1cblxuICAgICAgYS5hbmltYXRpbmcgPSBmYWxzZTtcbiAgICAgIGEuZWxlbWVudHMuZWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBlbDtcbiAgICAgICAgZGVsZXRlIGVsZW1lbnQuZG9tN0FuaW1hdGVJbnN0YW5jZTtcbiAgICAgIH0pO1xuICAgICAgYS5xdWUgPSBbXTtcbiAgICB9LFxuICAgIGRvbmU6IGZ1bmN0aW9uIGRvbmUoY29tcGxldGUpIHtcbiAgICAgIGEuYW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICBhLmVsZW1lbnRzLmVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgIHZhciBlbGVtZW50ID0gZWw7XG4gICAgICAgIGRlbGV0ZSBlbGVtZW50LmRvbTdBbmltYXRlSW5zdGFuY2U7XG4gICAgICB9KTtcbiAgICAgIGlmIChjb21wbGV0ZSkgY29tcGxldGUoZWxzKTtcblxuICAgICAgaWYgKGEucXVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIHF1ZSA9IGEucXVlLnNoaWZ0KCk7XG4gICAgICAgIGEuYW5pbWF0ZShxdWVbMF0sIHF1ZVsxXSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhbmltYXRlOiBmdW5jdGlvbiBhbmltYXRlKHByb3BzLCBwYXJhbXMpIHtcbiAgICAgIGlmIChhLmFuaW1hdGluZykge1xuICAgICAgICBhLnF1ZS5wdXNoKFtwcm9wcywgcGFyYW1zXSk7XG4gICAgICAgIHJldHVybiBhO1xuICAgICAgfVxuXG4gICAgICB2YXIgZWxlbWVudHMgPSBbXTsgLy8gRGVmaW5lICYgQ2FjaGUgSW5pdGlhbHMgJiBVbml0c1xuXG4gICAgICBhLmVsZW1lbnRzLmVhY2goZnVuY3Rpb24gKGVsLCBpbmRleCkge1xuICAgICAgICB2YXIgaW5pdGlhbEZ1bGxWYWx1ZTtcbiAgICAgICAgdmFyIGluaXRpYWxWYWx1ZTtcbiAgICAgICAgdmFyIHVuaXQ7XG4gICAgICAgIHZhciBmaW5hbFZhbHVlO1xuICAgICAgICB2YXIgZmluYWxGdWxsVmFsdWU7XG4gICAgICAgIGlmICghZWwuZG9tN0FuaW1hdGVJbnN0YW5jZSkgYS5lbGVtZW50c1tpbmRleF0uZG9tN0FuaW1hdGVJbnN0YW5jZSA9IGE7XG4gICAgICAgIGVsZW1lbnRzW2luZGV4XSA9IHtcbiAgICAgICAgICBjb250YWluZXI6IGVsXG4gICAgICAgIH07XG4gICAgICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgaW5pdGlhbEZ1bGxWYWx1ZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHByb3ApLnJlcGxhY2UoJywnLCAnLicpO1xuICAgICAgICAgIGluaXRpYWxWYWx1ZSA9IHBhcnNlRmxvYXQoaW5pdGlhbEZ1bGxWYWx1ZSk7XG4gICAgICAgICAgdW5pdCA9IGluaXRpYWxGdWxsVmFsdWUucmVwbGFjZShpbml0aWFsVmFsdWUsICcnKTtcbiAgICAgICAgICBmaW5hbFZhbHVlID0gcGFyc2VGbG9hdChwcm9wc1twcm9wXSk7XG4gICAgICAgICAgZmluYWxGdWxsVmFsdWUgPSBwcm9wc1twcm9wXSArIHVuaXQ7XG4gICAgICAgICAgZWxlbWVudHNbaW5kZXhdW3Byb3BdID0ge1xuICAgICAgICAgICAgaW5pdGlhbEZ1bGxWYWx1ZTogaW5pdGlhbEZ1bGxWYWx1ZSxcbiAgICAgICAgICAgIGluaXRpYWxWYWx1ZTogaW5pdGlhbFZhbHVlLFxuICAgICAgICAgICAgdW5pdDogdW5pdCxcbiAgICAgICAgICAgIGZpbmFsVmFsdWU6IGZpbmFsVmFsdWUsXG4gICAgICAgICAgICBmaW5hbEZ1bGxWYWx1ZTogZmluYWxGdWxsVmFsdWUsXG4gICAgICAgICAgICBjdXJyZW50VmFsdWU6IGluaXRpYWxWYWx1ZVxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICB2YXIgc3RhcnRUaW1lID0gbnVsbDtcbiAgICAgIHZhciB0aW1lO1xuICAgICAgdmFyIGVsZW1lbnRzRG9uZSA9IDA7XG4gICAgICB2YXIgcHJvcHNEb25lID0gMDtcbiAgICAgIHZhciBkb25lO1xuICAgICAgdmFyIGJlZ2FuID0gZmFsc2U7XG4gICAgICBhLmFuaW1hdGluZyA9IHRydWU7XG5cbiAgICAgIGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgdGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICB2YXIgcHJvZ3Jlc3M7XG4gICAgICAgIHZhciBlYXNlUHJvZ3Jlc3M7IC8vIGxldCBlbDtcblxuICAgICAgICBpZiAoIWJlZ2FuKSB7XG4gICAgICAgICAgYmVnYW4gPSB0cnVlO1xuICAgICAgICAgIGlmIChwYXJhbXMuYmVnaW4pIHBhcmFtcy5iZWdpbihlbHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN0YXJ0VGltZSA9PT0gbnVsbCkge1xuICAgICAgICAgIHN0YXJ0VGltZSA9IHRpbWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyYW1zLnByb2dyZXNzKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgcGFyYW1zLnByb2dyZXNzKGVscywgTWF0aC5tYXgoTWF0aC5taW4oKHRpbWUgLSBzdGFydFRpbWUpIC8gcGFyYW1zLmR1cmF0aW9uLCAxKSwgMCksIHN0YXJ0VGltZSArIHBhcmFtcy5kdXJhdGlvbiAtIHRpbWUgPCAwID8gMCA6IHN0YXJ0VGltZSArIHBhcmFtcy5kdXJhdGlvbiAtIHRpbWUsIHN0YXJ0VGltZSk7XG4gICAgICAgIH1cblxuICAgICAgICBlbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgdmFyIGVsID0gZWxlbWVudDtcbiAgICAgICAgICBpZiAoZG9uZSB8fCBlbC5kb25lKSByZXR1cm47XG4gICAgICAgICAgT2JqZWN0LmtleXMocHJvcHMpLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICAgICAgICAgIGlmIChkb25lIHx8IGVsLmRvbmUpIHJldHVybjtcbiAgICAgICAgICAgIHByb2dyZXNzID0gTWF0aC5tYXgoTWF0aC5taW4oKHRpbWUgLSBzdGFydFRpbWUpIC8gcGFyYW1zLmR1cmF0aW9uLCAxKSwgMCk7XG4gICAgICAgICAgICBlYXNlUHJvZ3Jlc3MgPSBhLmVhc2luZ1Byb2dyZXNzKHBhcmFtcy5lYXNpbmcsIHByb2dyZXNzKTtcbiAgICAgICAgICAgIHZhciBfZWwkcHJvcCA9IGVsW3Byb3BdLFxuICAgICAgICAgICAgICAgIGluaXRpYWxWYWx1ZSA9IF9lbCRwcm9wLmluaXRpYWxWYWx1ZSxcbiAgICAgICAgICAgICAgICBmaW5hbFZhbHVlID0gX2VsJHByb3AuZmluYWxWYWx1ZSxcbiAgICAgICAgICAgICAgICB1bml0ID0gX2VsJHByb3AudW5pdDtcbiAgICAgICAgICAgIGVsW3Byb3BdLmN1cnJlbnRWYWx1ZSA9IGluaXRpYWxWYWx1ZSArIGVhc2VQcm9ncmVzcyAqIChmaW5hbFZhbHVlIC0gaW5pdGlhbFZhbHVlKTtcbiAgICAgICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBlbFtwcm9wXS5jdXJyZW50VmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChmaW5hbFZhbHVlID4gaW5pdGlhbFZhbHVlICYmIGN1cnJlbnRWYWx1ZSA+PSBmaW5hbFZhbHVlIHx8IGZpbmFsVmFsdWUgPCBpbml0aWFsVmFsdWUgJiYgY3VycmVudFZhbHVlIDw9IGZpbmFsVmFsdWUpIHtcbiAgICAgICAgICAgICAgZWwuY29udGFpbmVyLnN0eWxlW3Byb3BdID0gZmluYWxWYWx1ZSArIHVuaXQ7XG4gICAgICAgICAgICAgIHByb3BzRG9uZSArPSAxO1xuXG4gICAgICAgICAgICAgIGlmIChwcm9wc0RvbmUgPT09IE9iamVjdC5rZXlzKHByb3BzKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBlbC5kb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBlbGVtZW50c0RvbmUgKz0gMTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChlbGVtZW50c0RvbmUgPT09IGVsZW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgIGEuZG9uZShwYXJhbXMuY29tcGxldGUpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVsLmNvbnRhaW5lci5zdHlsZVtwcm9wXSA9IGN1cnJlbnRWYWx1ZSArIHVuaXQ7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZG9uZSkgcmV0dXJuOyAvLyBUaGVuIGNhbGxcblxuICAgICAgICBhLmZyYW1lSWQgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG4gICAgICB9XG5cbiAgICAgIGEuZnJhbWVJZCA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyKTtcbiAgICAgIHJldHVybiBhO1xuICAgIH1cbiAgfTtcblxuICBpZiAoYS5lbGVtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZWxzO1xuICB9XG5cbiAgdmFyIGFuaW1hdGVJbnN0YW5jZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGEuZWxlbWVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAoYS5lbGVtZW50c1tpXS5kb203QW5pbWF0ZUluc3RhbmNlKSB7XG4gICAgICBhbmltYXRlSW5zdGFuY2UgPSBhLmVsZW1lbnRzW2ldLmRvbTdBbmltYXRlSW5zdGFuY2U7XG4gICAgfSBlbHNlIGEuZWxlbWVudHNbaV0uZG9tN0FuaW1hdGVJbnN0YW5jZSA9IGE7XG4gIH1cblxuICBpZiAoIWFuaW1hdGVJbnN0YW5jZSkge1xuICAgIGFuaW1hdGVJbnN0YW5jZSA9IGE7XG4gIH1cblxuICBpZiAoaW5pdGlhbFByb3BzID09PSAnc3RvcCcpIHtcbiAgICBhbmltYXRlSW5zdGFuY2Uuc3RvcCgpO1xuICB9IGVsc2Uge1xuICAgIGFuaW1hdGVJbnN0YW5jZS5hbmltYXRlKGEucHJvcHMsIGEucGFyYW1zKTtcbiAgfVxuXG4gIHJldHVybiBlbHM7XG59XG5cbmZ1bmN0aW9uIHN0b3AoKSB7XG4gIHZhciBlbHMgPSB0aGlzO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZWxzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGVsc1tpXS5kb203QW5pbWF0ZUluc3RhbmNlKSB7XG4gICAgICBlbHNbaV0uZG9tN0FuaW1hdGVJbnN0YW5jZS5zdG9wKCk7XG4gICAgfVxuICB9XG59XG5cbnZhciBub1RyaWdnZXIgPSAncmVzaXplIHNjcm9sbCcuc3BsaXQoJyAnKTtcblxuZnVuY3Rpb24gc2hvcnRjdXQobmFtZSkge1xuICBmdW5jdGlvbiBldmVudEhhbmRsZXIoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAobm9UcmlnZ2VyLmluZGV4T2YobmFtZSkgPCAwKSB7XG4gICAgICAgICAgaWYgKG5hbWUgaW4gdGhpc1tpXSkgdGhpc1tpXVtuYW1lXSgpO2Vsc2Uge1xuICAgICAgICAgICAgJCh0aGlzW2ldKS50cmlnZ2VyKG5hbWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5vbi5hcHBseSh0aGlzLCBbbmFtZV0uY29uY2F0KGFyZ3MpKTtcbiAgfVxuXG4gIHJldHVybiBldmVudEhhbmRsZXI7XG59XG5cbnZhciBjbGljayA9IHNob3J0Y3V0KCdjbGljaycpO1xudmFyIGJsdXIgPSBzaG9ydGN1dCgnYmx1cicpO1xudmFyIGZvY3VzID0gc2hvcnRjdXQoJ2ZvY3VzJyk7XG52YXIgZm9jdXNpbiA9IHNob3J0Y3V0KCdmb2N1c2luJyk7XG52YXIgZm9jdXNvdXQgPSBzaG9ydGN1dCgnZm9jdXNvdXQnKTtcbnZhciBrZXl1cCA9IHNob3J0Y3V0KCdrZXl1cCcpO1xudmFyIGtleWRvd24gPSBzaG9ydGN1dCgna2V5ZG93bicpO1xudmFyIGtleXByZXNzID0gc2hvcnRjdXQoJ2tleXByZXNzJyk7XG52YXIgc3VibWl0ID0gc2hvcnRjdXQoJ3N1Ym1pdCcpO1xudmFyIGNoYW5nZSA9IHNob3J0Y3V0KCdjaGFuZ2UnKTtcbnZhciBtb3VzZWRvd24gPSBzaG9ydGN1dCgnbW91c2Vkb3duJyk7XG52YXIgbW91c2Vtb3ZlID0gc2hvcnRjdXQoJ21vdXNlbW92ZScpO1xudmFyIG1vdXNldXAgPSBzaG9ydGN1dCgnbW91c2V1cCcpO1xudmFyIG1vdXNlZW50ZXIgPSBzaG9ydGN1dCgnbW91c2VlbnRlcicpO1xudmFyIG1vdXNlbGVhdmUgPSBzaG9ydGN1dCgnbW91c2VsZWF2ZScpO1xudmFyIG1vdXNlb3V0ID0gc2hvcnRjdXQoJ21vdXNlb3V0Jyk7XG52YXIgbW91c2VvdmVyID0gc2hvcnRjdXQoJ21vdXNlb3ZlcicpO1xudmFyIHRvdWNoc3RhcnQgPSBzaG9ydGN1dCgndG91Y2hzdGFydCcpO1xudmFyIHRvdWNoZW5kID0gc2hvcnRjdXQoJ3RvdWNoZW5kJyk7XG52YXIgdG91Y2htb3ZlID0gc2hvcnRjdXQoJ3RvdWNobW92ZScpO1xudmFyIHJlc2l6ZSA9IHNob3J0Y3V0KCdyZXNpemUnKTtcbnZhciBzY3JvbGwgPSBzaG9ydGN1dCgnc2Nyb2xsJyk7XG5cbmV4cG9ydCBkZWZhdWx0ICQ7XG5leHBvcnQgeyAkLCBhZGQsIGFkZENsYXNzLCBhbmltYXRlLCBhbmltYXRpb25FbmQsIGFwcGVuZCwgYXBwZW5kVG8sIGF0dHIsIGJsdXIsIGNoYW5nZSwgY2hpbGRyZW4sIGNsaWNrLCBjbG9zZXN0LCBjc3MsIGRhdGEsIGRhdGFzZXQsIGRldGFjaCwgZWFjaCwgZW1wdHksIGVxLCBmaWx0ZXIsIGZpbmQsIGZvY3VzLCBmb2N1c2luLCBmb2N1c291dCwgaGFzQ2xhc3MsIGhlaWdodCwgaGlkZSwgaHRtbCwgaW5kZXgsIGluc2VydEFmdGVyLCBpbnNlcnRCZWZvcmUsIGlzLCBrZXlkb3duLCBrZXlwcmVzcywga2V5dXAsIG1vdXNlZG93biwgbW91c2VlbnRlciwgbW91c2VsZWF2ZSwgbW91c2Vtb3ZlLCBtb3VzZW91dCwgbW91c2VvdmVyLCBtb3VzZXVwLCBuZXh0LCBuZXh0QWxsLCBvZmYsIG9mZnNldCwgb24sIG9uY2UsIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoLCBwYXJlbnQsIHBhcmVudHMsIHByZXBlbmQsIHByZXBlbmRUbywgcHJldiwgcHJldkFsbCwgcHJvcCwgcmVtb3ZlLCByZW1vdmVBdHRyLCByZW1vdmVDbGFzcywgcmVtb3ZlRGF0YSwgcmVzaXplLCBzY3JvbGwsIHNjcm9sbExlZnQsIHNjcm9sbFRvLCBzY3JvbGxUb3AsIHNob3csIHNpYmxpbmdzLCBzdG9wLCBzdHlsZXMsIHN1Ym1pdCwgdGV4dCwgdG9nZ2xlQ2xhc3MsIHRvdWNoZW5kLCB0b3VjaG1vdmUsIHRvdWNoc3RhcnQsIHRyYW5zZm9ybSwgdHJhbnNpdGlvbiwgdHJhbnNpdGlvbkVuZCwgdHJpZ2dlciwgdmFsLCB2YWx1ZSwgd2lkdGggfTtcbiIsImltcG9ydCB7ICQsIGFkZENsYXNzLCByZW1vdmVDbGFzcywgaGFzQ2xhc3MsIHRvZ2dsZUNsYXNzLCBhdHRyLCByZW1vdmVBdHRyLCB0cmFuc2Zvcm0sIHRyYW5zaXRpb24sIG9uLCBvZmYsIHRyaWdnZXIsIHRyYW5zaXRpb25FbmQsIG91dGVyV2lkdGgsIG91dGVySGVpZ2h0LCBzdHlsZXMsIG9mZnNldCwgY3NzLCBlYWNoLCBodG1sLCB0ZXh0LCBpcywgaW5kZXgsIGVxLCBhcHBlbmQsIHByZXBlbmQsIG5leHQsIG5leHRBbGwsIHByZXYsIHByZXZBbGwsIHBhcmVudCwgcGFyZW50cywgY2xvc2VzdCwgZmluZCwgY2hpbGRyZW4sIGZpbHRlciwgcmVtb3ZlIH0gZnJvbSAnZG9tNyc7XG52YXIgTWV0aG9kcyA9IHtcbiAgYWRkQ2xhc3M6IGFkZENsYXNzLFxuICByZW1vdmVDbGFzczogcmVtb3ZlQ2xhc3MsXG4gIGhhc0NsYXNzOiBoYXNDbGFzcyxcbiAgdG9nZ2xlQ2xhc3M6IHRvZ2dsZUNsYXNzLFxuICBhdHRyOiBhdHRyLFxuICByZW1vdmVBdHRyOiByZW1vdmVBdHRyLFxuICB0cmFuc2Zvcm06IHRyYW5zZm9ybSxcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbixcbiAgb246IG9uLFxuICBvZmY6IG9mZixcbiAgdHJpZ2dlcjogdHJpZ2dlcixcbiAgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCxcbiAgb3V0ZXJXaWR0aDogb3V0ZXJXaWR0aCxcbiAgb3V0ZXJIZWlnaHQ6IG91dGVySGVpZ2h0LFxuICBzdHlsZXM6IHN0eWxlcyxcbiAgb2Zmc2V0OiBvZmZzZXQsXG4gIGNzczogY3NzLFxuICBlYWNoOiBlYWNoLFxuICBodG1sOiBodG1sLFxuICB0ZXh0OiB0ZXh0LFxuICBpczogaXMsXG4gIGluZGV4OiBpbmRleCxcbiAgZXE6IGVxLFxuICBhcHBlbmQ6IGFwcGVuZCxcbiAgcHJlcGVuZDogcHJlcGVuZCxcbiAgbmV4dDogbmV4dCxcbiAgbmV4dEFsbDogbmV4dEFsbCxcbiAgcHJldjogcHJldixcbiAgcHJldkFsbDogcHJldkFsbCxcbiAgcGFyZW50OiBwYXJlbnQsXG4gIHBhcmVudHM6IHBhcmVudHMsXG4gIGNsb3Nlc3Q6IGNsb3Nlc3QsXG4gIGZpbmQ6IGZpbmQsXG4gIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgZmlsdGVyOiBmaWx0ZXIsXG4gIHJlbW92ZTogcmVtb3ZlXG59O1xuT2JqZWN0LmtleXMoTWV0aG9kcykuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kTmFtZSkge1xuICAkLmZuW21ldGhvZE5hbWVdID0gTWV0aG9kc1ttZXRob2ROYW1lXTtcbn0pO1xuZXhwb3J0IGRlZmF1bHQgJDsiLCJpbXBvcnQgeyBnZXRXaW5kb3csIGdldERvY3VtZW50IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG52YXIgc3VwcG9ydDtcblxuZnVuY3Rpb24gY2FsY1N1cHBvcnQoKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgcmV0dXJuIHtcbiAgICB0b3VjaDogISEoJ29udG91Y2hzdGFydCcgaW4gd2luZG93IHx8IHdpbmRvdy5Eb2N1bWVudFRvdWNoICYmIGRvY3VtZW50IGluc3RhbmNlb2Ygd2luZG93LkRvY3VtZW50VG91Y2gpLFxuICAgIHBvaW50ZXJFdmVudHM6ICEhd2luZG93LlBvaW50ZXJFdmVudCAmJiAnbWF4VG91Y2hQb2ludHMnIGluIHdpbmRvdy5uYXZpZ2F0b3IgJiYgd2luZG93Lm5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+PSAwLFxuICAgIG9ic2VydmVyOiBmdW5jdGlvbiBjaGVja09ic2VydmVyKCkge1xuICAgICAgcmV0dXJuICdNdXRhdGlvbk9ic2VydmVyJyBpbiB3aW5kb3cgfHwgJ1dlYmtpdE11dGF0aW9uT2JzZXJ2ZXInIGluIHdpbmRvdztcbiAgICB9KCksXG4gICAgcGFzc2l2ZUxpc3RlbmVyOiBmdW5jdGlvbiBjaGVja1Bhc3NpdmVMaXN0ZW5lcigpIHtcbiAgICAgIHZhciBzdXBwb3J0c1Bhc3NpdmUgPSBmYWxzZTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG9wdHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdwYXNzaXZlJywge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgc3VwcG9ydHNQYXNzaXZlID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndGVzdFBhc3NpdmVMaXN0ZW5lcicsIG51bGwsIG9wdHMpO1xuICAgICAgfSBjYXRjaCAoZSkgey8vIE5vIHN1cHBvcnRcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN1cHBvcnRzUGFzc2l2ZTtcbiAgICB9KCksXG4gICAgZ2VzdHVyZXM6IGZ1bmN0aW9uIGNoZWNrR2VzdHVyZXMoKSB7XG4gICAgICByZXR1cm4gJ29uZ2VzdHVyZXN0YXJ0JyBpbiB3aW5kb3c7XG4gICAgfSgpXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFN1cHBvcnQoKSB7XG4gIGlmICghc3VwcG9ydCkge1xuICAgIHN1cHBvcnQgPSBjYWxjU3VwcG9ydCgpO1xuICB9XG5cbiAgcmV0dXJuIHN1cHBvcnQ7XG59XG5cbmV4cG9ydCB7IGdldFN1cHBvcnQgfTsiLCJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcbmltcG9ydCB7IGdldFN1cHBvcnQgfSBmcm9tICcuL2dldC1zdXBwb3J0JztcbnZhciBkZXZpY2U7XG5cbmZ1bmN0aW9uIGNhbGNEZXZpY2UoX3RlbXApIHtcbiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgIHVzZXJBZ2VudCA9IF9yZWYudXNlckFnZW50O1xuXG4gIHZhciBzdXBwb3J0ID0gZ2V0U3VwcG9ydCgpO1xuICB2YXIgd2luZG93ID0gZ2V0V2luZG93KCk7XG4gIHZhciBwbGF0Zm9ybSA9IHdpbmRvdy5uYXZpZ2F0b3IucGxhdGZvcm07XG4gIHZhciB1YSA9IHVzZXJBZ2VudCB8fCB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgdmFyIGRldmljZSA9IHtcbiAgICBpb3M6IGZhbHNlLFxuICAgIGFuZHJvaWQ6IGZhbHNlXG4gIH07XG4gIHZhciBzY3JlZW5XaWR0aCA9IHdpbmRvdy5zY3JlZW4ud2lkdGg7XG4gIHZhciBzY3JlZW5IZWlnaHQgPSB3aW5kb3cuc2NyZWVuLmhlaWdodDtcbiAgdmFyIGFuZHJvaWQgPSB1YS5tYXRjaCgvKEFuZHJvaWQpOz9bXFxzXFwvXSsoW1xcZC5dKyk/Lyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICB2YXIgaXBhZCA9IHVhLm1hdGNoKC8oaVBhZCkuKk9TXFxzKFtcXGRfXSspLyk7XG4gIHZhciBpcG9kID0gdWEubWF0Y2goLyhpUG9kKSguKk9TXFxzKFtcXGRfXSspKT8vKTtcbiAgdmFyIGlwaG9uZSA9ICFpcGFkICYmIHVhLm1hdGNoKC8oaVBob25lXFxzT1N8aU9TKVxccyhbXFxkX10rKS8pO1xuICB2YXIgd2luZG93cyA9IHBsYXRmb3JtID09PSAnV2luMzInO1xuICB2YXIgbWFjb3MgPSBwbGF0Zm9ybSA9PT0gJ01hY0ludGVsJzsgLy8gaVBhZE9zIDEzIGZpeFxuXG4gIHZhciBpUGFkU2NyZWVucyA9IFsnMTAyNHgxMzY2JywgJzEzNjZ4MTAyNCcsICc4MzR4MTE5NCcsICcxMTk0eDgzNCcsICc4MzR4MTExMicsICcxMTEyeDgzNCcsICc3Njh4MTAyNCcsICcxMDI0eDc2OCcsICc4MjB4MTE4MCcsICcxMTgweDgyMCcsICc4MTB4MTA4MCcsICcxMDgweDgxMCddO1xuXG4gIGlmICghaXBhZCAmJiBtYWNvcyAmJiBzdXBwb3J0LnRvdWNoICYmIGlQYWRTY3JlZW5zLmluZGV4T2Yoc2NyZWVuV2lkdGggKyBcInhcIiArIHNjcmVlbkhlaWdodCkgPj0gMCkge1xuICAgIGlwYWQgPSB1YS5tYXRjaCgvKFZlcnNpb24pXFwvKFtcXGQuXSspLyk7XG4gICAgaWYgKCFpcGFkKSBpcGFkID0gWzAsIDEsICcxM18wXzAnXTtcbiAgICBtYWNvcyA9IGZhbHNlO1xuICB9IC8vIEFuZHJvaWRcblxuXG4gIGlmIChhbmRyb2lkICYmICF3aW5kb3dzKSB7XG4gICAgZGV2aWNlLm9zID0gJ2FuZHJvaWQnO1xuICAgIGRldmljZS5hbmRyb2lkID0gdHJ1ZTtcbiAgfVxuXG4gIGlmIChpcGFkIHx8IGlwaG9uZSB8fCBpcG9kKSB7XG4gICAgZGV2aWNlLm9zID0gJ2lvcyc7XG4gICAgZGV2aWNlLmlvcyA9IHRydWU7XG4gIH0gLy8gRXhwb3J0IG9iamVjdFxuXG5cbiAgcmV0dXJuIGRldmljZTtcbn1cblxuZnVuY3Rpb24gZ2V0RGV2aWNlKG92ZXJyaWRlcykge1xuICBpZiAob3ZlcnJpZGVzID09PSB2b2lkIDApIHtcbiAgICBvdmVycmlkZXMgPSB7fTtcbiAgfVxuXG4gIGlmICghZGV2aWNlKSB7XG4gICAgZGV2aWNlID0gY2FsY0RldmljZShvdmVycmlkZXMpO1xuICB9XG5cbiAgcmV0dXJuIGRldmljZTtcbn1cblxuZXhwb3J0IHsgZ2V0RGV2aWNlIH07IiwiaW1wb3J0IHsgZ2V0V2luZG93IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG52YXIgYnJvd3NlcjtcblxuZnVuY3Rpb24gY2FsY0Jyb3dzZXIoKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuICBmdW5jdGlvbiBpc1NhZmFyaSgpIHtcbiAgICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiB1YS5pbmRleE9mKCdzYWZhcmknKSA+PSAwICYmIHVhLmluZGV4T2YoJ2Nocm9tZScpIDwgMCAmJiB1YS5pbmRleE9mKCdhbmRyb2lkJykgPCAwO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpc0VkZ2U6ICEhd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0VkZ2UvZyksXG4gICAgaXNTYWZhcmk6IGlzU2FmYXJpKCksXG4gICAgaXNXZWJWaWV3OiAvKGlQaG9uZXxpUG9kfGlQYWQpLipBcHBsZVdlYktpdCg/IS4qU2FmYXJpKS9pLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldEJyb3dzZXIoKSB7XG4gIGlmICghYnJvd3Nlcikge1xuICAgIGJyb3dzZXIgPSBjYWxjQnJvd3NlcigpO1xuICB9XG5cbiAgcmV0dXJuIGJyb3dzZXI7XG59XG5cbmV4cG9ydCB7IGdldEJyb3dzZXIgfTsiLCJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcblxuZnVuY3Rpb24gZGVsZXRlUHJvcHMob2JqKSB7XG4gIHZhciBvYmplY3QgPSBvYmo7XG4gIE9iamVjdC5rZXlzKG9iamVjdCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdHJ5IHtcbiAgICAgIG9iamVjdFtrZXldID0gbnVsbDtcbiAgICB9IGNhdGNoIChlKSB7Ly8gbm8gZ2V0dGVyIGZvciBvYmplY3RcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgZGVsZXRlIG9iamVjdFtrZXldO1xuICAgIH0gY2F0Y2ggKGUpIHsvLyBzb21ldGhpbmcgZ290IHdyb25nXG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gbmV4dFRpY2soY2FsbGJhY2ssIGRlbGF5KSB7XG4gIGlmIChkZWxheSA9PT0gdm9pZCAwKSB7XG4gICAgZGVsYXkgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHNldFRpbWVvdXQoY2FsbGJhY2ssIGRlbGF5KTtcbn1cblxuZnVuY3Rpb24gbm93KCkge1xuICByZXR1cm4gRGF0ZS5ub3coKTtcbn1cblxuZnVuY3Rpb24gZ2V0VHJhbnNsYXRlKGVsLCBheGlzKSB7XG4gIGlmIChheGlzID09PSB2b2lkIDApIHtcbiAgICBheGlzID0gJ3gnO1xuICB9XG5cbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICB2YXIgbWF0cml4O1xuICB2YXIgY3VyVHJhbnNmb3JtO1xuICB2YXIgdHJhbnNmb3JtTWF0cml4O1xuICB2YXIgY3VyU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCwgbnVsbCk7XG5cbiAgaWYgKHdpbmRvdy5XZWJLaXRDU1NNYXRyaXgpIHtcbiAgICBjdXJUcmFuc2Zvcm0gPSBjdXJTdHlsZS50cmFuc2Zvcm0gfHwgY3VyU3R5bGUud2Via2l0VHJhbnNmb3JtO1xuXG4gICAgaWYgKGN1clRyYW5zZm9ybS5zcGxpdCgnLCcpLmxlbmd0aCA+IDYpIHtcbiAgICAgIGN1clRyYW5zZm9ybSA9IGN1clRyYW5zZm9ybS5zcGxpdCgnLCAnKS5tYXAoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgcmV0dXJuIGEucmVwbGFjZSgnLCcsICcuJyk7XG4gICAgICB9KS5qb2luKCcsICcpO1xuICAgIH0gLy8gU29tZSBvbGQgdmVyc2lvbnMgb2YgV2Via2l0IGNob2tlIHdoZW4gJ25vbmUnIGlzIHBhc3NlZDsgcGFzc1xuICAgIC8vIGVtcHR5IHN0cmluZyBpbnN0ZWFkIGluIHRoaXMgY2FzZVxuXG5cbiAgICB0cmFuc2Zvcm1NYXRyaXggPSBuZXcgd2luZG93LldlYktpdENTU01hdHJpeChjdXJUcmFuc2Zvcm0gPT09ICdub25lJyA/ICcnIDogY3VyVHJhbnNmb3JtKTtcbiAgfSBlbHNlIHtcbiAgICB0cmFuc2Zvcm1NYXRyaXggPSBjdXJTdHlsZS5Nb3pUcmFuc2Zvcm0gfHwgY3VyU3R5bGUuT1RyYW5zZm9ybSB8fCBjdXJTdHlsZS5Nc1RyYW5zZm9ybSB8fCBjdXJTdHlsZS5tc1RyYW5zZm9ybSB8fCBjdXJTdHlsZS50cmFuc2Zvcm0gfHwgY3VyU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgndHJhbnNmb3JtJykucmVwbGFjZSgndHJhbnNsYXRlKCcsICdtYXRyaXgoMSwgMCwgMCwgMSwnKTtcbiAgICBtYXRyaXggPSB0cmFuc2Zvcm1NYXRyaXgudG9TdHJpbmcoKS5zcGxpdCgnLCcpO1xuICB9XG5cbiAgaWYgKGF4aXMgPT09ICd4Jykge1xuICAgIC8vIExhdGVzdCBDaHJvbWUgYW5kIHdlYmtpdHMgRml4XG4gICAgaWYgKHdpbmRvdy5XZWJLaXRDU1NNYXRyaXgpIGN1clRyYW5zZm9ybSA9IHRyYW5zZm9ybU1hdHJpeC5tNDE7IC8vIENyYXp5IElFMTAgTWF0cml4XG4gICAgZWxzZSBpZiAobWF0cml4Lmxlbmd0aCA9PT0gMTYpIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzEyXSk7IC8vIE5vcm1hbCBCcm93c2Vyc1xuICAgICAgZWxzZSBjdXJUcmFuc2Zvcm0gPSBwYXJzZUZsb2F0KG1hdHJpeFs0XSk7XG4gIH1cblxuICBpZiAoYXhpcyA9PT0gJ3knKSB7XG4gICAgLy8gTGF0ZXN0IENocm9tZSBhbmQgd2Via2l0cyBGaXhcbiAgICBpZiAod2luZG93LldlYktpdENTU01hdHJpeCkgY3VyVHJhbnNmb3JtID0gdHJhbnNmb3JtTWF0cml4Lm00MjsgLy8gQ3JhenkgSUUxMCBNYXRyaXhcbiAgICBlbHNlIGlmIChtYXRyaXgubGVuZ3RoID09PSAxNikgY3VyVHJhbnNmb3JtID0gcGFyc2VGbG9hdChtYXRyaXhbMTNdKTsgLy8gTm9ybWFsIEJyb3dzZXJzXG4gICAgICBlbHNlIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzVdKTtcbiAgfVxuXG4gIHJldHVybiBjdXJUcmFuc2Zvcm0gfHwgMDtcbn1cblxuZnVuY3Rpb24gaXNPYmplY3Qobykge1xuICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnICYmIG8gIT09IG51bGwgJiYgby5jb25zdHJ1Y3RvciAmJiBvLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG5cbmZ1bmN0aW9uIGV4dGVuZCgpIHtcbiAgdmFyIHRvID0gT2JqZWN0KGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXSk7XG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgbmV4dFNvdXJjZSA9IGkgPCAwIHx8IGFyZ3VtZW50cy5sZW5ndGggPD0gaSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1tpXTtcblxuICAgIGlmIChuZXh0U291cmNlICE9PSB1bmRlZmluZWQgJiYgbmV4dFNvdXJjZSAhPT0gbnVsbCkge1xuICAgICAgdmFyIGtleXNBcnJheSA9IE9iamVjdC5rZXlzKE9iamVjdChuZXh0U291cmNlKSk7XG5cbiAgICAgIGZvciAodmFyIG5leHRJbmRleCA9IDAsIGxlbiA9IGtleXNBcnJheS5sZW5ndGg7IG5leHRJbmRleCA8IGxlbjsgbmV4dEluZGV4ICs9IDEpIHtcbiAgICAgICAgdmFyIG5leHRLZXkgPSBrZXlzQXJyYXlbbmV4dEluZGV4XTtcbiAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG5leHRTb3VyY2UsIG5leHRLZXkpO1xuXG4gICAgICAgIGlmIChkZXNjICE9PSB1bmRlZmluZWQgJiYgZGVzYy5lbnVtZXJhYmxlKSB7XG4gICAgICAgICAgaWYgKGlzT2JqZWN0KHRvW25leHRLZXldKSAmJiBpc09iamVjdChuZXh0U291cmNlW25leHRLZXldKSkge1xuICAgICAgICAgICAgZXh0ZW5kKHRvW25leHRLZXldLCBuZXh0U291cmNlW25leHRLZXldKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKCFpc09iamVjdCh0b1tuZXh0S2V5XSkgJiYgaXNPYmplY3QobmV4dFNvdXJjZVtuZXh0S2V5XSkpIHtcbiAgICAgICAgICAgIHRvW25leHRLZXldID0ge307XG4gICAgICAgICAgICBleHRlbmQodG9bbmV4dEtleV0sIG5leHRTb3VyY2VbbmV4dEtleV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b1tuZXh0S2V5XSA9IG5leHRTb3VyY2VbbmV4dEtleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRvO1xufVxuXG5mdW5jdGlvbiBiaW5kTW9kdWxlTWV0aG9kcyhpbnN0YW5jZSwgb2JqKSB7XG4gIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KG9ialtrZXldKSkge1xuICAgICAgT2JqZWN0LmtleXMob2JqW2tleV0pLmZvckVhY2goZnVuY3Rpb24gKHN1YktleSkge1xuICAgICAgICBpZiAodHlwZW9mIG9ialtrZXldW3N1YktleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBvYmpba2V5XVtzdWJLZXldID0gb2JqW2tleV1bc3ViS2V5XS5iaW5kKGluc3RhbmNlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaW5zdGFuY2Vba2V5XSA9IG9ialtrZXldO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgZGVsZXRlUHJvcHMsIG5leHRUaWNrLCBub3csIGdldFRyYW5zbGF0ZSwgaXNPYmplY3QsIGV4dGVuZCwgYmluZE1vZHVsZU1ldGhvZHMgfTsiLCJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcbmltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3Jlc2l6ZScsXG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIGV4dGVuZChzd2lwZXIsIHtcbiAgICAgIHJlc2l6ZToge1xuICAgICAgICByZXNpemVIYW5kbGVyOiBmdW5jdGlvbiByZXNpemVIYW5kbGVyKCkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQgfHwgIXN3aXBlci5pbml0aWFsaXplZCkgcmV0dXJuO1xuICAgICAgICAgIHN3aXBlci5lbWl0KCdiZWZvcmVSZXNpemUnKTtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgncmVzaXplJyk7XG4gICAgICAgIH0sXG4gICAgICAgIG9yaWVudGF0aW9uQ2hhbmdlSGFuZGxlcjogZnVuY3Rpb24gb3JpZW50YXRpb25DaGFuZ2VIYW5kbGVyKCkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQgfHwgIXN3aXBlci5pbml0aWFsaXplZCkgcmV0dXJuO1xuICAgICAgICAgIHN3aXBlci5lbWl0KCdvcmllbnRhdGlvbmNoYW5nZScpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTsgLy8gRW1pdCByZXNpemVcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHN3aXBlci5yZXNpemUucmVzaXplSGFuZGxlcik7IC8vIEVtaXQgb3JpZW50YXRpb25jaGFuZ2VcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgc3dpcGVyLnJlc2l6ZS5vcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIpO1xuICAgIH0sXG4gICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveShzd2lwZXIpIHtcbiAgICAgIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzd2lwZXIucmVzaXplLnJlc2l6ZUhhbmRsZXIpO1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgc3dpcGVyLnJlc2l6ZS5vcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIpO1xuICAgIH1cbiAgfVxufTsiLCJmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5pbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcbmltcG9ydCB7IGJpbmRNb2R1bGVNZXRob2RzIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbHMnO1xudmFyIE9ic2VydmVyID0ge1xuICBhdHRhY2g6IGZ1bmN0aW9uIGF0dGFjaCh0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBPYnNlcnZlckZ1bmMgPSB3aW5kb3cuTXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuV2Via2l0TXV0YXRpb25PYnNlcnZlcjtcbiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgT2JzZXJ2ZXJGdW5jKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHtcbiAgICAgIC8vIFRoZSBvYnNlcnZlclVwZGF0ZSBldmVudCBzaG91bGQgb25seSBiZSB0cmlnZ2VyZWRcbiAgICAgIC8vIG9uY2UgZGVzcGl0ZSB0aGUgbnVtYmVyIG9mIG11dGF0aW9ucy4gIEFkZGl0aW9uYWxcbiAgICAgIC8vIHRyaWdnZXJzIGFyZSByZWR1bmRhbnQgYW5kIGFyZSB2ZXJ5IGNvc3RseVxuICAgICAgaWYgKG11dGF0aW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ29ic2VydmVyVXBkYXRlJywgbXV0YXRpb25zWzBdKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZXJVcGRhdGUgPSBmdW5jdGlvbiBvYnNlcnZlclVwZGF0ZSgpIHtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ29ic2VydmVyVXBkYXRlJywgbXV0YXRpb25zWzBdKTtcbiAgICAgIH07XG5cbiAgICAgIGlmICh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUob2JzZXJ2ZXJVcGRhdGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LnNldFRpbWVvdXQob2JzZXJ2ZXJVcGRhdGUsIDApO1xuICAgICAgfVxuICAgIH0pO1xuICAgIG9ic2VydmVyLm9ic2VydmUodGFyZ2V0LCB7XG4gICAgICBhdHRyaWJ1dGVzOiB0eXBlb2Ygb3B0aW9ucy5hdHRyaWJ1dGVzID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvcHRpb25zLmF0dHJpYnV0ZXMsXG4gICAgICBjaGlsZExpc3Q6IHR5cGVvZiBvcHRpb25zLmNoaWxkTGlzdCA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogb3B0aW9ucy5jaGlsZExpc3QsXG4gICAgICBjaGFyYWN0ZXJEYXRhOiB0eXBlb2Ygb3B0aW9ucy5jaGFyYWN0ZXJEYXRhID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvcHRpb25zLmNoYXJhY3RlckRhdGFcbiAgICB9KTtcbiAgICBzd2lwZXIub2JzZXJ2ZXIub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xuICB9LFxuICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyLnN1cHBvcnQub2JzZXJ2ZXIgfHwgIXN3aXBlci5wYXJhbXMub2JzZXJ2ZXIpIHJldHVybjtcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLm9ic2VydmVQYXJlbnRzKSB7XG4gICAgICB2YXIgY29udGFpbmVyUGFyZW50cyA9IHN3aXBlci4kZWwucGFyZW50cygpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbnRhaW5lclBhcmVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgc3dpcGVyLm9ic2VydmVyLmF0dGFjaChjb250YWluZXJQYXJlbnRzW2ldKTtcbiAgICAgIH1cbiAgICB9IC8vIE9ic2VydmUgY29udGFpbmVyXG5cblxuICAgIHN3aXBlci5vYnNlcnZlci5hdHRhY2goc3dpcGVyLiRlbFswXSwge1xuICAgICAgY2hpbGRMaXN0OiBzd2lwZXIucGFyYW1zLm9ic2VydmVTbGlkZUNoaWxkcmVuXG4gICAgfSk7IC8vIE9ic2VydmUgd3JhcHBlclxuXG4gICAgc3dpcGVyLm9ic2VydmVyLmF0dGFjaChzd2lwZXIuJHdyYXBwZXJFbFswXSwge1xuICAgICAgYXR0cmlidXRlczogZmFsc2VcbiAgICB9KTtcbiAgfSxcbiAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICBzd2lwZXIub2JzZXJ2ZXIub2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgfSk7XG4gICAgc3dpcGVyLm9ic2VydmVyLm9ic2VydmVycyA9IFtdO1xuICB9XG59O1xuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnb2JzZXJ2ZXInLFxuICBwYXJhbXM6IHtcbiAgICBvYnNlcnZlcjogZmFsc2UsXG4gICAgb2JzZXJ2ZVBhcmVudHM6IGZhbHNlLFxuICAgIG9ic2VydmVTbGlkZUNoaWxkcmVuOiBmYWxzZVxuICB9LFxuICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICBiaW5kTW9kdWxlTWV0aG9kcyhzd2lwZXIsIHtcbiAgICAgIG9ic2VydmVyOiBfZXh0ZW5kcyh7fSwgT2JzZXJ2ZXIsIHtcbiAgICAgICAgb2JzZXJ2ZXJzOiBbXVxuICAgICAgfSlcbiAgICB9KTtcbiAgfSxcbiAgb246IHtcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KHN3aXBlcikge1xuICAgICAgc3dpcGVyLm9ic2VydmVyLmluaXQoKTtcbiAgICB9LFxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICBzd2lwZXIub2JzZXJ2ZXIuZGVzdHJveSgpO1xuICAgIH1cbiAgfVxufTsiLCJpbXBvcnQgeyBnZXRXaW5kb3csIGdldERvY3VtZW50IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG5pbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuaW1wb3J0IHsgZXh0ZW5kLCBub3cgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvblRvdWNoU3RhcnQoZXZlbnQpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIGRhdGEgPSBzd2lwZXIudG91Y2hFdmVudHNEYXRhO1xuICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHRvdWNoZXMgPSBzd2lwZXIudG91Y2hlcztcblxuICBpZiAoc3dpcGVyLmFuaW1hdGluZyAmJiBwYXJhbXMucHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGUgPSBldmVudDtcbiAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDtcbiAgdmFyICR0YXJnZXRFbCA9ICQoZS50YXJnZXQpO1xuXG4gIGlmIChwYXJhbXMudG91Y2hFdmVudHNUYXJnZXQgPT09ICd3cmFwcGVyJykge1xuICAgIGlmICghJHRhcmdldEVsLmNsb3Nlc3Qoc3dpcGVyLndyYXBwZXJFbCkubGVuZ3RoKSByZXR1cm47XG4gIH1cblxuICBkYXRhLmlzVG91Y2hFdmVudCA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnO1xuICBpZiAoIWRhdGEuaXNUb3VjaEV2ZW50ICYmICd3aGljaCcgaW4gZSAmJiBlLndoaWNoID09PSAzKSByZXR1cm47XG4gIGlmICghZGF0YS5pc1RvdWNoRXZlbnQgJiYgJ2J1dHRvbicgaW4gZSAmJiBlLmJ1dHRvbiA+IDApIHJldHVybjtcbiAgaWYgKGRhdGEuaXNUb3VjaGVkICYmIGRhdGEuaXNNb3ZlZCkgcmV0dXJuOyAvLyBjaGFuZ2UgdGFyZ2V0IGVsIGZvciBzaGFkb3cgcm9vdCBjb21wb25lbmV0XG5cbiAgdmFyIHN3aXBpbmdDbGFzc0hhc1ZhbHVlID0gISFwYXJhbXMubm9Td2lwaW5nQ2xhc3MgJiYgcGFyYW1zLm5vU3dpcGluZ0NsYXNzICE9PSAnJztcblxuICBpZiAoc3dpcGluZ0NsYXNzSGFzVmFsdWUgJiYgZS50YXJnZXQgJiYgZS50YXJnZXQuc2hhZG93Um9vdCAmJiBldmVudC5wYXRoICYmIGV2ZW50LnBhdGhbMF0pIHtcbiAgICAkdGFyZ2V0RWwgPSAkKGV2ZW50LnBhdGhbMF0pO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5ub1N3aXBpbmcgJiYgJHRhcmdldEVsLmNsb3Nlc3QocGFyYW1zLm5vU3dpcGluZ1NlbGVjdG9yID8gcGFyYW1zLm5vU3dpcGluZ1NlbGVjdG9yIDogXCIuXCIgKyBwYXJhbXMubm9Td2lwaW5nQ2xhc3MpWzBdKSB7XG4gICAgc3dpcGVyLmFsbG93Q2xpY2sgPSB0cnVlO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChwYXJhbXMuc3dpcGVIYW5kbGVyKSB7XG4gICAgaWYgKCEkdGFyZ2V0RWwuY2xvc2VzdChwYXJhbXMuc3dpcGVIYW5kbGVyKVswXSkgcmV0dXJuO1xuICB9XG5cbiAgdG91Y2hlcy5jdXJyZW50WCA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgdG91Y2hlcy5jdXJyZW50WSA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZIDogZS5wYWdlWTtcbiAgdmFyIHN0YXJ0WCA9IHRvdWNoZXMuY3VycmVudFg7XG4gIHZhciBzdGFydFkgPSB0b3VjaGVzLmN1cnJlbnRZOyAvLyBEbyBOT1Qgc3RhcnQgaWYgaU9TIGVkZ2Ugc3dpcGUgaXMgZGV0ZWN0ZWQuIE90aGVyd2lzZSBpT1MgYXBwIGNhbm5vdCBzd2lwZS10by1nby1iYWNrIGFueW1vcmVcblxuICB2YXIgZWRnZVN3aXBlRGV0ZWN0aW9uID0gcGFyYW1zLmVkZ2VTd2lwZURldGVjdGlvbiB8fCBwYXJhbXMuaU9TRWRnZVN3aXBlRGV0ZWN0aW9uO1xuICB2YXIgZWRnZVN3aXBlVGhyZXNob2xkID0gcGFyYW1zLmVkZ2VTd2lwZVRocmVzaG9sZCB8fCBwYXJhbXMuaU9TRWRnZVN3aXBlVGhyZXNob2xkO1xuXG4gIGlmIChlZGdlU3dpcGVEZXRlY3Rpb24gJiYgKHN0YXJ0WCA8PSBlZGdlU3dpcGVUaHJlc2hvbGQgfHwgc3RhcnRYID49IHdpbmRvdy5pbm5lcldpZHRoIC0gZWRnZVN3aXBlVGhyZXNob2xkKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGV4dGVuZChkYXRhLCB7XG4gICAgaXNUb3VjaGVkOiB0cnVlLFxuICAgIGlzTW92ZWQ6IGZhbHNlLFxuICAgIGFsbG93VG91Y2hDYWxsYmFja3M6IHRydWUsXG4gICAgaXNTY3JvbGxpbmc6IHVuZGVmaW5lZCxcbiAgICBzdGFydE1vdmluZzogdW5kZWZpbmVkXG4gIH0pO1xuICB0b3VjaGVzLnN0YXJ0WCA9IHN0YXJ0WDtcbiAgdG91Y2hlcy5zdGFydFkgPSBzdGFydFk7XG4gIGRhdGEudG91Y2hTdGFydFRpbWUgPSBub3coKTtcbiAgc3dpcGVyLmFsbG93Q2xpY2sgPSB0cnVlO1xuICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPSB1bmRlZmluZWQ7XG4gIGlmIChwYXJhbXMudGhyZXNob2xkID4gMCkgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUgPSBmYWxzZTtcblxuICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcpIHtcbiAgICB2YXIgcHJldmVudERlZmF1bHQgPSB0cnVlO1xuICAgIGlmICgkdGFyZ2V0RWwuaXMoZGF0YS5mb3JtRWxlbWVudHMpKSBwcmV2ZW50RGVmYXVsdCA9IGZhbHNlO1xuXG4gICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgJChkb2N1bWVudC5hY3RpdmVFbGVtZW50KS5pcyhkYXRhLmZvcm1FbGVtZW50cykgJiYgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gJHRhcmdldEVsWzBdKSB7XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICB9XG5cbiAgICB2YXIgc2hvdWxkUHJldmVudERlZmF1bHQgPSBwcmV2ZW50RGVmYXVsdCAmJiBzd2lwZXIuYWxsb3dUb3VjaE1vdmUgJiYgcGFyYW1zLnRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdDtcblxuICAgIGlmICgocGFyYW1zLnRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0IHx8IHNob3VsZFByZXZlbnREZWZhdWx0KSAmJiAhJHRhcmdldEVsWzBdLmlzQ29udGVudEVkaXRhYmxlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9XG5cbiAgc3dpcGVyLmVtaXQoJ3RvdWNoU3RhcnQnLCBlKTtcbn0iLCJpbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJ3Nzci13aW5kb3cnO1xuaW1wb3J0ICQgZnJvbSAnLi4vLi4vLi4vdXRpbHMvZG9tJztcbmltcG9ydCB7IGV4dGVuZCwgbm93IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb25Ub3VjaE1vdmUoZXZlbnQpIHtcbiAgdmFyIGRvY3VtZW50ID0gZ2V0RG9jdW1lbnQoKTtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBkYXRhID0gc3dpcGVyLnRvdWNoRXZlbnRzRGF0YTtcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICB0b3VjaGVzID0gc3dpcGVyLnRvdWNoZXMsXG4gICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlO1xuICB2YXIgZSA9IGV2ZW50O1xuICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50O1xuXG4gIGlmICghZGF0YS5pc1RvdWNoZWQpIHtcbiAgICBpZiAoZGF0YS5zdGFydE1vdmluZyAmJiBkYXRhLmlzU2Nyb2xsaW5nKSB7XG4gICAgICBzd2lwZXIuZW1pdCgndG91Y2hNb3ZlT3Bwb3NpdGUnLCBlKTtcbiAgICB9XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoZGF0YS5pc1RvdWNoRXZlbnQgJiYgZS50eXBlICE9PSAndG91Y2htb3ZlJykgcmV0dXJuO1xuICB2YXIgdGFyZ2V0VG91Y2ggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIGUudGFyZ2V0VG91Y2hlcyAmJiAoZS50YXJnZXRUb3VjaGVzWzBdIHx8IGUuY2hhbmdlZFRvdWNoZXNbMF0pO1xuICB2YXIgcGFnZVggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnID8gdGFyZ2V0VG91Y2gucGFnZVggOiBlLnBhZ2VYO1xuICB2YXIgcGFnZVkgPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnID8gdGFyZ2V0VG91Y2gucGFnZVkgOiBlLnBhZ2VZO1xuXG4gIGlmIChlLnByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyKSB7XG4gICAgdG91Y2hlcy5zdGFydFggPSBwYWdlWDtcbiAgICB0b3VjaGVzLnN0YXJ0WSA9IHBhZ2VZO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghc3dpcGVyLmFsbG93VG91Y2hNb3ZlKSB7XG4gICAgLy8gaXNNb3ZlZCA9IHRydWU7XG4gICAgc3dpcGVyLmFsbG93Q2xpY2sgPSBmYWxzZTtcblxuICAgIGlmIChkYXRhLmlzVG91Y2hlZCkge1xuICAgICAgZXh0ZW5kKHRvdWNoZXMsIHtcbiAgICAgICAgc3RhcnRYOiBwYWdlWCxcbiAgICAgICAgc3RhcnRZOiBwYWdlWSxcbiAgICAgICAgY3VycmVudFg6IHBhZ2VYLFxuICAgICAgICBjdXJyZW50WTogcGFnZVlcbiAgICAgIH0pO1xuICAgICAgZGF0YS50b3VjaFN0YXJ0VGltZSA9IG5vdygpO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChkYXRhLmlzVG91Y2hFdmVudCAmJiBwYXJhbXMudG91Y2hSZWxlYXNlT25FZGdlcyAmJiAhcGFyYW1zLmxvb3ApIHtcbiAgICBpZiAoc3dpcGVyLmlzVmVydGljYWwoKSkge1xuICAgICAgLy8gVmVydGljYWxcbiAgICAgIGlmIChwYWdlWSA8IHRvdWNoZXMuc3RhcnRZICYmIHN3aXBlci50cmFuc2xhdGUgPD0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpIHx8IHBhZ2VZID4gdG91Y2hlcy5zdGFydFkgJiYgc3dpcGVyLnRyYW5zbGF0ZSA+PSBzd2lwZXIubWluVHJhbnNsYXRlKCkpIHtcbiAgICAgICAgZGF0YS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgZGF0YS5pc01vdmVkID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHBhZ2VYIDwgdG91Y2hlcy5zdGFydFggJiYgc3dpcGVyLnRyYW5zbGF0ZSA8PSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgfHwgcGFnZVggPiB0b3VjaGVzLnN0YXJ0WCAmJiBzd2lwZXIudHJhbnNsYXRlID49IHN3aXBlci5taW5UcmFuc2xhdGUoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkYXRhLmlzVG91Y2hFdmVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmICQoZS50YXJnZXQpLmlzKGRhdGEuZm9ybUVsZW1lbnRzKSkge1xuICAgICAgZGF0YS5pc01vdmVkID0gdHJ1ZTtcbiAgICAgIHN3aXBlci5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgaWYgKGRhdGEuYWxsb3dUb3VjaENhbGxiYWNrcykge1xuICAgIHN3aXBlci5lbWl0KCd0b3VjaE1vdmUnLCBlKTtcbiAgfVxuXG4gIGlmIChlLnRhcmdldFRvdWNoZXMgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA+IDEpIHJldHVybjtcbiAgdG91Y2hlcy5jdXJyZW50WCA9IHBhZ2VYO1xuICB0b3VjaGVzLmN1cnJlbnRZID0gcGFnZVk7XG4gIHZhciBkaWZmWCA9IHRvdWNoZXMuY3VycmVudFggLSB0b3VjaGVzLnN0YXJ0WDtcbiAgdmFyIGRpZmZZID0gdG91Y2hlcy5jdXJyZW50WSAtIHRvdWNoZXMuc3RhcnRZO1xuICBpZiAoc3dpcGVyLnBhcmFtcy50aHJlc2hvbGQgJiYgTWF0aC5zcXJ0KE1hdGgucG93KGRpZmZYLCAyKSArIE1hdGgucG93KGRpZmZZLCAyKSkgPCBzd2lwZXIucGFyYW1zLnRocmVzaG9sZCkgcmV0dXJuO1xuXG4gIGlmICh0eXBlb2YgZGF0YS5pc1Njcm9sbGluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgdG91Y2hBbmdsZTtcblxuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkgJiYgdG91Y2hlcy5jdXJyZW50WSA9PT0gdG91Y2hlcy5zdGFydFkgfHwgc3dpcGVyLmlzVmVydGljYWwoKSAmJiB0b3VjaGVzLmN1cnJlbnRYID09PSB0b3VjaGVzLnN0YXJ0WCkge1xuICAgICAgZGF0YS5pc1Njcm9sbGluZyA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIGlmIChkaWZmWCAqIGRpZmZYICsgZGlmZlkgKiBkaWZmWSA+PSAyNSkge1xuICAgICAgICB0b3VjaEFuZ2xlID0gTWF0aC5hdGFuMihNYXRoLmFicyhkaWZmWSksIE1hdGguYWJzKGRpZmZYKSkgKiAxODAgLyBNYXRoLlBJO1xuICAgICAgICBkYXRhLmlzU2Nyb2xsaW5nID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gdG91Y2hBbmdsZSA+IHBhcmFtcy50b3VjaEFuZ2xlIDogOTAgLSB0b3VjaEFuZ2xlID4gcGFyYW1zLnRvdWNoQW5nbGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKGRhdGEuaXNTY3JvbGxpbmcpIHtcbiAgICBzd2lwZXIuZW1pdCgndG91Y2hNb3ZlT3Bwb3NpdGUnLCBlKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZGF0YS5zdGFydE1vdmluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodG91Y2hlcy5jdXJyZW50WCAhPT0gdG91Y2hlcy5zdGFydFggfHwgdG91Y2hlcy5jdXJyZW50WSAhPT0gdG91Y2hlcy5zdGFydFkpIHtcbiAgICAgIGRhdGEuc3RhcnRNb3ZpbmcgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkYXRhLmlzU2Nyb2xsaW5nKSB7XG4gICAgZGF0YS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWRhdGEuc3RhcnRNb3ZpbmcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBzd2lwZXIuYWxsb3dDbGljayA9IGZhbHNlO1xuXG4gIGlmICghcGFyYW1zLmNzc01vZGUgJiYgZS5jYW5jZWxhYmxlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy50b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24gJiYgIXBhcmFtcy5uZXN0ZWQpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgaWYgKCFkYXRhLmlzTW92ZWQpIHtcbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgfVxuXG4gICAgZGF0YS5zdGFydFRyYW5zbGF0ZSA9IHN3aXBlci5nZXRUcmFuc2xhdGUoKTtcbiAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbigwKTtcblxuICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nKSB7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC50cmlnZ2VyKCd3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQnKTtcbiAgICB9XG5cbiAgICBkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UgPSBmYWxzZTsgLy8gR3JhYiBDdXJzb3JcblxuICAgIGlmIChwYXJhbXMuZ3JhYkN1cnNvciAmJiAoc3dpcGVyLmFsbG93U2xpZGVOZXh0ID09PSB0cnVlIHx8IHN3aXBlci5hbGxvd1NsaWRlUHJldiA9PT0gdHJ1ZSkpIHtcbiAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKHRydWUpO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdzbGlkZXJGaXJzdE1vdmUnLCBlKTtcbiAgfVxuXG4gIHN3aXBlci5lbWl0KCdzbGlkZXJNb3ZlJywgZSk7XG4gIGRhdGEuaXNNb3ZlZCA9IHRydWU7XG4gIHZhciBkaWZmID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gZGlmZlggOiBkaWZmWTtcbiAgdG91Y2hlcy5kaWZmID0gZGlmZjtcbiAgZGlmZiAqPSBwYXJhbXMudG91Y2hSYXRpbztcbiAgaWYgKHJ0bCkgZGlmZiA9IC1kaWZmO1xuICBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPSBkaWZmID4gMCA/ICdwcmV2JyA6ICduZXh0JztcbiAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGlmZiArIGRhdGEuc3RhcnRUcmFuc2xhdGU7XG4gIHZhciBkaXNhYmxlUGFyZW50U3dpcGVyID0gdHJ1ZTtcbiAgdmFyIHJlc2lzdGFuY2VSYXRpbyA9IHBhcmFtcy5yZXNpc3RhbmNlUmF0aW87XG5cbiAgaWYgKHBhcmFtcy50b3VjaFJlbGVhc2VPbkVkZ2VzKSB7XG4gICAgcmVzaXN0YW5jZVJhdGlvID0gMDtcbiAgfVxuXG4gIGlmIChkaWZmID4gMCAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPiBzd2lwZXIubWluVHJhbnNsYXRlKCkpIHtcbiAgICBkaXNhYmxlUGFyZW50U3dpcGVyID0gZmFsc2U7XG4gICAgaWYgKHBhcmFtcy5yZXNpc3RhbmNlKSBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPSBzd2lwZXIubWluVHJhbnNsYXRlKCkgLSAxICsgTWF0aC5wb3coLXN3aXBlci5taW5UcmFuc2xhdGUoKSArIGRhdGEuc3RhcnRUcmFuc2xhdGUgKyBkaWZmLCByZXNpc3RhbmNlUmF0aW8pO1xuICB9IGVsc2UgaWYgKGRpZmYgPCAwICYmIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA8IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkge1xuICAgIGRpc2FibGVQYXJlbnRTd2lwZXIgPSBmYWxzZTtcbiAgICBpZiAocGFyYW1zLnJlc2lzdGFuY2UpIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSArIDEgLSBNYXRoLnBvdyhzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBkYXRhLnN0YXJ0VHJhbnNsYXRlIC0gZGlmZiwgcmVzaXN0YW5jZVJhdGlvKTtcbiAgfVxuXG4gIGlmIChkaXNhYmxlUGFyZW50U3dpcGVyKSB7XG4gICAgZS5wcmV2ZW50ZWRCeU5lc3RlZFN3aXBlciA9IHRydWU7XG4gIH0gLy8gRGlyZWN0aW9ucyBsb2Nrc1xuXG5cbiAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZU5leHQgJiYgc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcgJiYgZGF0YS5jdXJyZW50VHJhbnNsYXRlIDwgZGF0YS5zdGFydFRyYW5zbGF0ZSkge1xuICAgIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IGRhdGEuc3RhcnRUcmFuc2xhdGU7XG4gIH1cblxuICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlUHJldiAmJiBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2JyAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPiBkYXRhLnN0YXJ0VHJhbnNsYXRlKSB7XG4gICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgfSAvLyBUaHJlc2hvbGRcblxuXG4gIGlmIChwYXJhbXMudGhyZXNob2xkID4gMCkge1xuICAgIGlmIChNYXRoLmFicyhkaWZmKSA+IHBhcmFtcy50aHJlc2hvbGQgfHwgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgIGlmICghZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgICAgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUgPSB0cnVlO1xuICAgICAgICB0b3VjaGVzLnN0YXJ0WCA9IHRvdWNoZXMuY3VycmVudFg7XG4gICAgICAgIHRvdWNoZXMuc3RhcnRZID0gdG91Y2hlcy5jdXJyZW50WTtcbiAgICAgICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgICAgICAgdG91Y2hlcy5kaWZmID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gdG91Y2hlcy5jdXJyZW50WCAtIHRvdWNoZXMuc3RhcnRYIDogdG91Y2hlcy5jdXJyZW50WSAtIHRvdWNoZXMuc3RhcnRZO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IGRhdGEuc3RhcnRUcmFuc2xhdGU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwYXJhbXMuZm9sbG93RmluZ2VyIHx8IHBhcmFtcy5jc3NNb2RlKSByZXR1cm47IC8vIFVwZGF0ZSBhY3RpdmUgaW5kZXggaW4gZnJlZSBtb2RlXG5cbiAgaWYgKHBhcmFtcy5mcmVlTW9kZSB8fCBwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyB8fCBwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KSB7XG4gICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuZnJlZU1vZGUpIHtcbiAgICAvLyBWZWxvY2l0eVxuICAgIGlmIChkYXRhLnZlbG9jaXRpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICBkYXRhLnZlbG9jaXRpZXMucHVzaCh7XG4gICAgICAgIHBvc2l0aW9uOiB0b3VjaGVzW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdzdGFydFgnIDogJ3N0YXJ0WSddLFxuICAgICAgICB0aW1lOiBkYXRhLnRvdWNoU3RhcnRUaW1lXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBkYXRhLnZlbG9jaXRpZXMucHVzaCh7XG4gICAgICBwb3NpdGlvbjogdG91Y2hlc1tzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnY3VycmVudFgnIDogJ2N1cnJlbnRZJ10sXG4gICAgICB0aW1lOiBub3coKVxuICAgIH0pO1xuICB9IC8vIFVwZGF0ZSBwcm9ncmVzc1xuXG5cbiAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKGRhdGEuY3VycmVudFRyYW5zbGF0ZSk7IC8vIFVwZGF0ZSB0cmFuc2xhdGVcblxuICBzd2lwZXIuc2V0VHJhbnNsYXRlKGRhdGEuY3VycmVudFRyYW5zbGF0ZSk7XG59IiwiaW1wb3J0IHsgbm93LCBuZXh0VGljayB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9uVG91Y2hFbmQoZXZlbnQpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBkYXRhID0gc3dpcGVyLnRvdWNoRXZlbnRzRGF0YTtcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICB0b3VjaGVzID0gc3dpcGVyLnRvdWNoZXMsXG4gICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlLFxuICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgc2xpZGVzR3JpZCA9IHN3aXBlci5zbGlkZXNHcmlkLFxuICAgICAgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQ7XG4gIHZhciBlID0gZXZlbnQ7XG4gIGlmIChlLm9yaWdpbmFsRXZlbnQpIGUgPSBlLm9yaWdpbmFsRXZlbnQ7XG5cbiAgaWYgKGRhdGEuYWxsb3dUb3VjaENhbGxiYWNrcykge1xuICAgIHN3aXBlci5lbWl0KCd0b3VjaEVuZCcsIGUpO1xuICB9XG5cbiAgZGF0YS5hbGxvd1RvdWNoQ2FsbGJhY2tzID0gZmFsc2U7XG5cbiAgaWYgKCFkYXRhLmlzVG91Y2hlZCkge1xuICAgIGlmIChkYXRhLmlzTW92ZWQgJiYgcGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKGZhbHNlKTtcbiAgICB9XG5cbiAgICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgICBkYXRhLnN0YXJ0TW92aW5nID0gZmFsc2U7XG4gICAgcmV0dXJuO1xuICB9IC8vIFJldHVybiBHcmFiIEN1cnNvclxuXG5cbiAgaWYgKHBhcmFtcy5ncmFiQ3Vyc29yICYmIGRhdGEuaXNNb3ZlZCAmJiBkYXRhLmlzVG91Y2hlZCAmJiAoc3dpcGVyLmFsbG93U2xpZGVOZXh0ID09PSB0cnVlIHx8IHN3aXBlci5hbGxvd1NsaWRlUHJldiA9PT0gdHJ1ZSkpIHtcbiAgICBzd2lwZXIuc2V0R3JhYkN1cnNvcihmYWxzZSk7XG4gIH0gLy8gVGltZSBkaWZmXG5cblxuICB2YXIgdG91Y2hFbmRUaW1lID0gbm93KCk7XG4gIHZhciB0aW1lRGlmZiA9IHRvdWNoRW5kVGltZSAtIGRhdGEudG91Y2hTdGFydFRpbWU7IC8vIFRhcCwgZG91YmxlVGFwLCBDbGlja1xuXG4gIGlmIChzd2lwZXIuYWxsb3dDbGljaykge1xuICAgIHN3aXBlci51cGRhdGVDbGlja2VkU2xpZGUoZSk7XG4gICAgc3dpcGVyLmVtaXQoJ3RhcCBjbGljaycsIGUpO1xuXG4gICAgaWYgKHRpbWVEaWZmIDwgMzAwICYmIHRvdWNoRW5kVGltZSAtIGRhdGEubGFzdENsaWNrVGltZSA8IDMwMCkge1xuICAgICAgc3dpcGVyLmVtaXQoJ2RvdWJsZVRhcCBkb3VibGVDbGljaycsIGUpO1xuICAgIH1cbiAgfVxuXG4gIGRhdGEubGFzdENsaWNrVGltZSA9IG5vdygpO1xuICBuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFzd2lwZXIuZGVzdHJveWVkKSBzd2lwZXIuYWxsb3dDbGljayA9IHRydWU7XG4gIH0pO1xuXG4gIGlmICghZGF0YS5pc1RvdWNoZWQgfHwgIWRhdGEuaXNNb3ZlZCB8fCAhc3dpcGVyLnN3aXBlRGlyZWN0aW9uIHx8IHRvdWNoZXMuZGlmZiA9PT0gMCB8fCBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPT09IGRhdGEuc3RhcnRUcmFuc2xhdGUpIHtcbiAgICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgIGRhdGEuaXNNb3ZlZCA9IGZhbHNlO1xuICAgIGRhdGEuc3RhcnRNb3ZpbmcgPSBmYWxzZTtcbiAgICByZXR1cm47XG4gIH1cblxuICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgZGF0YS5zdGFydE1vdmluZyA9IGZhbHNlO1xuICB2YXIgY3VycmVudFBvcztcblxuICBpZiAocGFyYW1zLmZvbGxvd0Zpbmdlcikge1xuICAgIGN1cnJlbnRQb3MgPSBydGwgPyBzd2lwZXIudHJhbnNsYXRlIDogLXN3aXBlci50cmFuc2xhdGU7XG4gIH0gZWxzZSB7XG4gICAgY3VycmVudFBvcyA9IC1kYXRhLmN1cnJlbnRUcmFuc2xhdGU7XG4gIH1cblxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAocGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgaWYgKGN1cnJlbnRQb3MgPCAtc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChjdXJyZW50UG9zID4gLXN3aXBlci5tYXhUcmFuc2xhdGUoKSkge1xuICAgICAgaWYgKHN3aXBlci5zbGlkZXMubGVuZ3RoIDwgc25hcEdyaWQubGVuZ3RoKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHNuYXBHcmlkLmxlbmd0aCAtIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMuZnJlZU1vZGVNb21lbnR1bSkge1xuICAgICAgaWYgKGRhdGEudmVsb2NpdGllcy5sZW5ndGggPiAxKSB7XG4gICAgICAgIHZhciBsYXN0TW92ZUV2ZW50ID0gZGF0YS52ZWxvY2l0aWVzLnBvcCgpO1xuICAgICAgICB2YXIgdmVsb2NpdHlFdmVudCA9IGRhdGEudmVsb2NpdGllcy5wb3AoKTtcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gbGFzdE1vdmVFdmVudC5wb3NpdGlvbiAtIHZlbG9jaXR5RXZlbnQucG9zaXRpb247XG4gICAgICAgIHZhciB0aW1lID0gbGFzdE1vdmVFdmVudC50aW1lIC0gdmVsb2NpdHlFdmVudC50aW1lO1xuICAgICAgICBzd2lwZXIudmVsb2NpdHkgPSBkaXN0YW5jZSAvIHRpbWU7XG4gICAgICAgIHN3aXBlci52ZWxvY2l0eSAvPSAyO1xuXG4gICAgICAgIGlmIChNYXRoLmFicyhzd2lwZXIudmVsb2NpdHkpIDwgcGFyYW1zLmZyZWVNb2RlTWluaW11bVZlbG9jaXR5KSB7XG4gICAgICAgICAgc3dpcGVyLnZlbG9jaXR5ID0gMDtcbiAgICAgICAgfSAvLyB0aGlzIGltcGxpZXMgdGhhdCB0aGUgdXNlciBzdG9wcGVkIG1vdmluZyBhIGZpbmdlciB0aGVuIHJlbGVhc2VkLlxuICAgICAgICAvLyBUaGVyZSB3b3VsZCBiZSBubyBldmVudHMgd2l0aCBkaXN0YW5jZSB6ZXJvLCBzbyB0aGUgbGFzdCBldmVudCBpcyBzdGFsZS5cblxuXG4gICAgICAgIGlmICh0aW1lID4gMTUwIHx8IG5vdygpIC0gbGFzdE1vdmVFdmVudC50aW1lID4gMzAwKSB7XG4gICAgICAgICAgc3dpcGVyLnZlbG9jaXR5ID0gMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnZlbG9jaXR5ID0gMDtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLnZlbG9jaXR5ICo9IHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbztcbiAgICAgIGRhdGEudmVsb2NpdGllcy5sZW5ndGggPSAwO1xuICAgICAgdmFyIG1vbWVudHVtRHVyYXRpb24gPSAxMDAwICogcGFyYW1zLmZyZWVNb2RlTW9tZW50dW1SYXRpbztcbiAgICAgIHZhciBtb21lbnR1bURpc3RhbmNlID0gc3dpcGVyLnZlbG9jaXR5ICogbW9tZW50dW1EdXJhdGlvbjtcbiAgICAgIHZhciBuZXdQb3NpdGlvbiA9IHN3aXBlci50cmFuc2xhdGUgKyBtb21lbnR1bURpc3RhbmNlO1xuICAgICAgaWYgKHJ0bCkgbmV3UG9zaXRpb24gPSAtbmV3UG9zaXRpb247XG4gICAgICB2YXIgZG9Cb3VuY2UgPSBmYWxzZTtcbiAgICAgIHZhciBhZnRlckJvdW5jZVBvc2l0aW9uO1xuICAgICAgdmFyIGJvdW5jZUFtb3VudCA9IE1hdGguYWJzKHN3aXBlci52ZWxvY2l0eSkgKiAyMCAqIHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW87XG4gICAgICB2YXIgbmVlZHNMb29wRml4O1xuXG4gICAgICBpZiAobmV3UG9zaXRpb24gPCBzd2lwZXIubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlKSB7XG4gICAgICAgICAgaWYgKG5ld1Bvc2l0aW9uICsgc3dpcGVyLm1heFRyYW5zbGF0ZSgpIDwgLWJvdW5jZUFtb3VudCkge1xuICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBib3VuY2VBbW91bnQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYWZ0ZXJCb3VuY2VQb3NpdGlvbiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKTtcbiAgICAgICAgICBkb0JvdW5jZSA9IHRydWU7XG4gICAgICAgICAgZGF0YS5hbGxvd01vbWVudHVtQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdQb3NpdGlvbiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJhbXMubG9vcCAmJiBwYXJhbXMuY2VudGVyZWRTbGlkZXMpIG5lZWRzTG9vcEZpeCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKG5ld1Bvc2l0aW9uID4gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICAgIGlmIChwYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZSkge1xuICAgICAgICAgIGlmIChuZXdQb3NpdGlvbiAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSA+IGJvdW5jZUFtb3VudCkge1xuICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzd2lwZXIubWluVHJhbnNsYXRlKCkgKyBib3VuY2VBbW91bnQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYWZ0ZXJCb3VuY2VQb3NpdGlvbiA9IHN3aXBlci5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgICBkb0JvdW5jZSA9IHRydWU7XG4gICAgICAgICAgZGF0YS5hbGxvd01vbWVudHVtQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdQb3NpdGlvbiA9IHN3aXBlci5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJhbXMubG9vcCAmJiBwYXJhbXMuY2VudGVyZWRTbGlkZXMpIG5lZWRzTG9vcEZpeCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICB2YXIgbmV4dFNsaWRlO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgc25hcEdyaWQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICBpZiAoc25hcEdyaWRbal0gPiAtbmV3UG9zaXRpb24pIHtcbiAgICAgICAgICAgIG5leHRTbGlkZSA9IGo7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoTWF0aC5hYnMoc25hcEdyaWRbbmV4dFNsaWRlXSAtIG5ld1Bvc2l0aW9uKSA8IE1hdGguYWJzKHNuYXBHcmlkW25leHRTbGlkZSAtIDFdIC0gbmV3UG9zaXRpb24pIHx8IHN3aXBlci5zd2lwZURpcmVjdGlvbiA9PT0gJ25leHQnKSB7XG4gICAgICAgICAgbmV3UG9zaXRpb24gPSBzbmFwR3JpZFtuZXh0U2xpZGVdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc25hcEdyaWRbbmV4dFNsaWRlIC0gMV07XG4gICAgICAgIH1cblxuICAgICAgICBuZXdQb3NpdGlvbiA9IC1uZXdQb3NpdGlvbjtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRzTG9vcEZpeCkge1xuICAgICAgICBzd2lwZXIub25jZSgndHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBzd2lwZXIubG9vcEZpeCgpO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy8gRml4IGR1cmF0aW9uXG5cblxuICAgICAgaWYgKHN3aXBlci52ZWxvY2l0eSAhPT0gMCkge1xuICAgICAgICBpZiAocnRsKSB7XG4gICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKCgtbmV3UG9zaXRpb24gLSBzd2lwZXIudHJhbnNsYXRlKSAvIHN3aXBlci52ZWxvY2l0eSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKChuZXdQb3NpdGlvbiAtIHN3aXBlci50cmFuc2xhdGUpIC8gc3dpcGVyLnZlbG9jaXR5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgICAgICAvLyBJZiBmcmVlTW9kZVN0aWNreSBpcyBhY3RpdmUgYW5kIHRoZSB1c2VyIGVuZHMgYSBzd2lwZSB3aXRoIGEgc2xvdy12ZWxvY2l0eVxuICAgICAgICAgIC8vIGV2ZW50LCB0aGVuIGR1cmF0aW9ucyBjYW4gYmUgMjArIHNlY29uZHMgdG8gc2xpZGUgb25lIChvciB6ZXJvISkgc2xpZGVzLlxuICAgICAgICAgIC8vIEl0J3MgZWFzeSB0byBzZWUgdGhpcyB3aGVuIHNpbXVsYXRpbmcgdG91Y2ggd2l0aCBtb3VzZSBldmVudHMuIFRvIGZpeCB0aGlzLFxuICAgICAgICAgIC8vIGxpbWl0IHNpbmdsZS1zbGlkZSBzd2lwZXMgdG8gdGhlIGRlZmF1bHQgc2xpZGUgZHVyYXRpb24uIFRoaXMgYWxzbyBoYXMgdGhlXG4gICAgICAgICAgLy8gbmljZSBzaWRlIGVmZmVjdCBvZiBtYXRjaGluZyBzbGlkZSBzcGVlZCBpZiB0aGUgdXNlciBzdG9wcGVkIG1vdmluZyBiZWZvcmVcbiAgICAgICAgICAvLyBsaWZ0aW5nIGZpbmdlciBvciBtb3VzZSB2cy4gbW92aW5nIHNsb3dseSBiZWZvcmUgbGlmdGluZyB0aGUgZmluZ2VyL21vdXNlLlxuICAgICAgICAgIC8vIEZvciBmYXN0ZXIgc3dpcGVzLCBhbHNvIGFwcGx5IGxpbWl0cyAoYWxiZWl0IGhpZ2hlciBvbmVzKS5cbiAgICAgICAgICB2YXIgbW92ZURpc3RhbmNlID0gTWF0aC5hYnMoKHJ0bCA/IC1uZXdQb3NpdGlvbiA6IG5ld1Bvc2l0aW9uKSAtIHN3aXBlci50cmFuc2xhdGUpO1xuICAgICAgICAgIHZhciBjdXJyZW50U2xpZGVTaXplID0gc3dpcGVyLnNsaWRlc1NpemVzR3JpZFtzd2lwZXIuYWN0aXZlSW5kZXhdO1xuXG4gICAgICAgICAgaWYgKG1vdmVEaXN0YW5jZSA8IGN1cnJlbnRTbGlkZVNpemUpIHtcbiAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBwYXJhbXMuc3BlZWQ7XG4gICAgICAgICAgfSBlbHNlIGlmIChtb3ZlRGlzdGFuY2UgPCAyICogY3VycmVudFNsaWRlU2l6ZSkge1xuICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IHBhcmFtcy5zcGVlZCAqIDEuNTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IHBhcmFtcy5zcGVlZCAqIDIuNTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAocGFyYW1zLmZyZWVNb2RlU3RpY2t5KSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZSAmJiBkb0JvdW5jZSkge1xuICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MoYWZ0ZXJCb3VuY2VQb3NpdGlvbik7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pO1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgICBzd2lwZXIuYW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgJHdyYXBwZXJFbC50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkIHx8ICFkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnbW9tZW50dW1Cb3VuY2UnKTtcbiAgICAgICAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbihwYXJhbXMuc3BlZWQpO1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShhZnRlckJvdW5jZVBvc2l0aW9uKTtcbiAgICAgICAgICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sIDApO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLnZlbG9jaXR5KSB7XG4gICAgICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcyhuZXdQb3NpdGlvbik7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pO1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuXG4gICAgICAgIGlmICghc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgICAgIHN3aXBlci5hbmltYXRpbmcgPSB0cnVlO1xuICAgICAgICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgICAgICAgICBzd2lwZXIudHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MobmV3UG9zaXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgfSBlbHNlIGlmIChwYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghcGFyYW1zLmZyZWVNb2RlTW9tZW50dW0gfHwgdGltZURpZmYgPj0gcGFyYW1zLmxvbmdTd2lwZXNNcykge1xuICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKCk7XG4gICAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9IC8vIEZpbmQgY3VycmVudCBzbGlkZVxuXG5cbiAgdmFyIHN0b3BJbmRleCA9IDA7XG4gIHZhciBncm91cFNpemUgPSBzd2lwZXIuc2xpZGVzU2l6ZXNHcmlkWzBdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzR3JpZC5sZW5ndGg7IGkgKz0gaSA8IHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAgPyAxIDogcGFyYW1zLnNsaWRlc1Blckdyb3VwKSB7XG4gICAgdmFyIF9pbmNyZW1lbnQgPSBpIDwgcGFyYW1zLnNsaWRlc1Blckdyb3VwU2tpcCAtIDEgPyAxIDogcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gICAgaWYgKHR5cGVvZiBzbGlkZXNHcmlkW2kgKyBfaW5jcmVtZW50XSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChjdXJyZW50UG9zID49IHNsaWRlc0dyaWRbaV0gJiYgY3VycmVudFBvcyA8IHNsaWRlc0dyaWRbaSArIF9pbmNyZW1lbnRdKSB7XG4gICAgICAgIHN0b3BJbmRleCA9IGk7XG4gICAgICAgIGdyb3VwU2l6ZSA9IHNsaWRlc0dyaWRbaSArIF9pbmNyZW1lbnRdIC0gc2xpZGVzR3JpZFtpXTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRQb3MgPj0gc2xpZGVzR3JpZFtpXSkge1xuICAgICAgc3RvcEluZGV4ID0gaTtcbiAgICAgIGdyb3VwU2l6ZSA9IHNsaWRlc0dyaWRbc2xpZGVzR3JpZC5sZW5ndGggLSAxXSAtIHNsaWRlc0dyaWRbc2xpZGVzR3JpZC5sZW5ndGggLSAyXTtcbiAgICB9XG4gIH0gLy8gRmluZCBjdXJyZW50IHNsaWRlIHNpemVcblxuXG4gIHZhciByYXRpbyA9IChjdXJyZW50UG9zIC0gc2xpZGVzR3JpZFtzdG9wSW5kZXhdKSAvIGdyb3VwU2l6ZTtcbiAgdmFyIGluY3JlbWVudCA9IHN0b3BJbmRleCA8IHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAgLSAxID8gMSA6IHBhcmFtcy5zbGlkZXNQZXJHcm91cDtcblxuICBpZiAodGltZURpZmYgPiBwYXJhbXMubG9uZ1N3aXBlc01zKSB7XG4gICAgLy8gTG9uZyB0b3VjaGVzXG4gICAgaWYgKCFwYXJhbXMubG9uZ1N3aXBlcykge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgIGlmIChyYXRpbyA+PSBwYXJhbXMubG9uZ1N3aXBlc1JhdGlvKSBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO2Vsc2Ugc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4KTtcbiAgICB9XG5cbiAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAncHJldicpIHtcbiAgICAgIGlmIChyYXRpbyA+IDEgLSBwYXJhbXMubG9uZ1N3aXBlc1JhdGlvKSBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO2Vsc2Ugc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gU2hvcnQgc3dpcGVzXG4gICAgaWYgKCFwYXJhbXMuc2hvcnRTd2lwZXMpIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGlzTmF2QnV0dG9uVGFyZ2V0ID0gc3dpcGVyLm5hdmlnYXRpb24gJiYgKGUudGFyZ2V0ID09PSBzd2lwZXIubmF2aWdhdGlvbi5uZXh0RWwgfHwgZS50YXJnZXQgPT09IHN3aXBlci5uYXZpZ2F0aW9uLnByZXZFbCk7XG5cbiAgICBpZiAoIWlzTmF2QnV0dG9uVGFyZ2V0KSB7XG4gICAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlVG8oc3RvcEluZGV4ICsgaW5jcmVtZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN3aXBlci5zd2lwZURpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlLnRhcmdldCA9PT0gc3dpcGVyLm5hdmlnYXRpb24ubmV4dEVsKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXgpO1xuICAgIH1cbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICBlbCA9IHN3aXBlci5lbDtcbiAgaWYgKGVsICYmIGVsLm9mZnNldFdpZHRoID09PSAwKSByZXR1cm47IC8vIEJyZWFrcG9pbnRzXG5cbiAgaWYgKHBhcmFtcy5icmVha3BvaW50cykge1xuICAgIHN3aXBlci5zZXRCcmVha3BvaW50KCk7XG4gIH0gLy8gU2F2ZSBsb2Nrc1xuXG5cbiAgdmFyIGFsbG93U2xpZGVOZXh0ID0gc3dpcGVyLmFsbG93U2xpZGVOZXh0LFxuICAgICAgYWxsb3dTbGlkZVByZXYgPSBzd2lwZXIuYWxsb3dTbGlkZVByZXYsXG4gICAgICBzbmFwR3JpZCA9IHN3aXBlci5zbmFwR3JpZDsgLy8gRGlzYWJsZSBsb2NrcyBvbiByZXNpemVcblxuICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSB0cnVlO1xuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSB0cnVlO1xuICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICBzd2lwZXIudXBkYXRlU2xpZGVzKCk7XG4gIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgaWYgKChwYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nIHx8IHBhcmFtcy5zbGlkZXNQZXJWaWV3ID4gMSkgJiYgc3dpcGVyLmlzRW5kICYmICFzd2lwZXIuaXNCZWdpbm5pbmcgJiYgIXN3aXBlci5wYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIDEsIDAsIGZhbHNlLCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcbiAgfVxuXG4gIGlmIChzd2lwZXIuYXV0b3BsYXkgJiYgc3dpcGVyLmF1dG9wbGF5LnJ1bm5pbmcgJiYgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCkge1xuICAgIHN3aXBlci5hdXRvcGxheS5ydW4oKTtcbiAgfSAvLyBSZXR1cm4gbG9ja3MgYWZ0ZXIgcmVzaXplXG5cblxuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSBhbGxvd1NsaWRlUHJldjtcbiAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gYWxsb3dTbGlkZU5leHQ7XG5cbiAgaWYgKHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzbmFwR3JpZCAhPT0gc3dpcGVyLnNuYXBHcmlkKSB7XG4gICAgc3dpcGVyLmNoZWNrT3ZlcmZsb3coKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcblxuICBpZiAoIXN3aXBlci5hbGxvd0NsaWNrKSB7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMucHJldmVudENsaWNrcykgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMucHJldmVudENsaWNrc1Byb3BhZ2F0aW9uICYmIHN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgIH1cbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9uU2Nyb2xsKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHdyYXBwZXJFbCA9IHN3aXBlci53cmFwcGVyRWwsXG4gICAgICBydGxUcmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlO1xuICBzd2lwZXIucHJldmlvdXNUcmFuc2xhdGUgPSBzd2lwZXIudHJhbnNsYXRlO1xuXG4gIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICBpZiAocnRsVHJhbnNsYXRlKSB7XG4gICAgICBzd2lwZXIudHJhbnNsYXRlID0gd3JhcHBlckVsLnNjcm9sbFdpZHRoIC0gd3JhcHBlckVsLm9mZnNldFdpZHRoIC0gd3JhcHBlckVsLnNjcm9sbExlZnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci50cmFuc2xhdGUgPSAtd3JhcHBlckVsLnNjcm9sbExlZnQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci50cmFuc2xhdGUgPSAtd3JhcHBlckVsLnNjcm9sbFRvcDtcbiAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblxuXG4gIGlmIChzd2lwZXIudHJhbnNsYXRlID09PSAtMCkgc3dpcGVyLnRyYW5zbGF0ZSA9IDA7XG4gIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleCgpO1xuICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICB2YXIgbmV3UHJvZ3Jlc3M7XG4gIHZhciB0cmFuc2xhdGVzRGlmZiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKTtcblxuICBpZiAodHJhbnNsYXRlc0RpZmYgPT09IDApIHtcbiAgICBuZXdQcm9ncmVzcyA9IDA7XG4gIH0gZWxzZSB7XG4gICAgbmV3UHJvZ3Jlc3MgPSAoc3dpcGVyLnRyYW5zbGF0ZSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSkgLyB0cmFuc2xhdGVzRGlmZjtcbiAgfVxuXG4gIGlmIChuZXdQcm9ncmVzcyAhPT0gc3dpcGVyLnByb2dyZXNzKSB7XG4gICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKHJ0bFRyYW5zbGF0ZSA/IC1zd2lwZXIudHJhbnNsYXRlIDogc3dpcGVyLnRyYW5zbGF0ZSk7XG4gIH1cblxuICBzd2lwZXIuZW1pdCgnc2V0VHJhbnNsYXRlJywgc3dpcGVyLnRyYW5zbGF0ZSwgZmFsc2UpO1xufSIsImltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG5pbXBvcnQgb25Ub3VjaFN0YXJ0IGZyb20gJy4vb25Ub3VjaFN0YXJ0JztcbmltcG9ydCBvblRvdWNoTW92ZSBmcm9tICcuL29uVG91Y2hNb3ZlJztcbmltcG9ydCBvblRvdWNoRW5kIGZyb20gJy4vb25Ub3VjaEVuZCc7XG5pbXBvcnQgb25SZXNpemUgZnJvbSAnLi9vblJlc2l6ZSc7XG5pbXBvcnQgb25DbGljayBmcm9tICcuL29uQ2xpY2snO1xuaW1wb3J0IG9uU2Nyb2xsIGZyb20gJy4vb25TY3JvbGwnO1xudmFyIGR1bW15RXZlbnRBdHRhY2hlZCA9IGZhbHNlO1xuXG5mdW5jdGlvbiBkdW1teUV2ZW50TGlzdGVuZXIoKSB7fVxuXG5mdW5jdGlvbiBhdHRhY2hFdmVudHMoKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHRvdWNoRXZlbnRzID0gc3dpcGVyLnRvdWNoRXZlbnRzLFxuICAgICAgZWwgPSBzd2lwZXIuZWwsXG4gICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsLFxuICAgICAgZGV2aWNlID0gc3dpcGVyLmRldmljZSxcbiAgICAgIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgc3dpcGVyLm9uVG91Y2hTdGFydCA9IG9uVG91Y2hTdGFydC5iaW5kKHN3aXBlcik7XG4gIHN3aXBlci5vblRvdWNoTW92ZSA9IG9uVG91Y2hNb3ZlLmJpbmQoc3dpcGVyKTtcbiAgc3dpcGVyLm9uVG91Y2hFbmQgPSBvblRvdWNoRW5kLmJpbmQoc3dpcGVyKTtcblxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICBzd2lwZXIub25TY3JvbGwgPSBvblNjcm9sbC5iaW5kKHN3aXBlcik7XG4gIH1cblxuICBzd2lwZXIub25DbGljayA9IG9uQ2xpY2suYmluZChzd2lwZXIpO1xuICB2YXIgY2FwdHVyZSA9ICEhcGFyYW1zLm5lc3RlZDsgLy8gVG91Y2ggRXZlbnRzXG5cbiAgaWYgKCFzdXBwb3J0LnRvdWNoICYmIHN1cHBvcnQucG9pbnRlckV2ZW50cykge1xuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuc3RhcnQsIHN3aXBlci5vblRvdWNoU3RhcnQsIGZhbHNlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLm1vdmUsIHN3aXBlci5vblRvdWNoTW92ZSwgY2FwdHVyZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHN1cHBvcnQudG91Y2gpIHtcbiAgICAgIHZhciBwYXNzaXZlTGlzdGVuZXIgPSB0b3VjaEV2ZW50cy5zdGFydCA9PT0gJ3RvdWNoc3RhcnQnICYmIHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8ge1xuICAgICAgICBwYXNzaXZlOiB0cnVlLFxuICAgICAgICBjYXB0dXJlOiBmYWxzZVxuICAgICAgfSA6IGZhbHNlO1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLm9uVG91Y2hTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBzdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciA/IHtcbiAgICAgICAgcGFzc2l2ZTogZmFsc2UsXG4gICAgICAgIGNhcHR1cmU6IGNhcHR1cmVcbiAgICAgIH0gOiBjYXB0dXJlKTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcblxuICAgICAgaWYgKHRvdWNoRXZlbnRzLmNhbmNlbCkge1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLmNhbmNlbCwgc3dpcGVyLm9uVG91Y2hFbmQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICB9XG5cbiAgICAgIGlmICghZHVtbXlFdmVudEF0dGFjaGVkKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBkdW1teUV2ZW50TGlzdGVuZXIpO1xuICAgICAgICBkdW1teUV2ZW50QXR0YWNoZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwYXJhbXMuc2ltdWxhdGVUb3VjaCAmJiAhZGV2aWNlLmlvcyAmJiAhZGV2aWNlLmFuZHJvaWQgfHwgcGFyYW1zLnNpbXVsYXRlVG91Y2ggJiYgIXN1cHBvcnQudG91Y2ggJiYgZGV2aWNlLmlvcykge1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgc3dpcGVyLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBzd2lwZXIub25Ub3VjaEVuZCwgZmFsc2UpO1xuICAgIH1cbiAgfSAvLyBQcmV2ZW50IExpbmtzIENsaWNrc1xuXG5cbiAgaWYgKHBhcmFtcy5wcmV2ZW50Q2xpY2tzIHx8IHBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24pIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN3aXBlci5vbkNsaWNrLCB0cnVlKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgIHdyYXBwZXJFbC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBzd2lwZXIub25TY3JvbGwpO1xuICB9IC8vIFJlc2l6ZSBoYW5kbGVyXG5cblxuICBpZiAocGFyYW1zLnVwZGF0ZU9uV2luZG93UmVzaXplKSB7XG4gICAgc3dpcGVyLm9uKGRldmljZS5pb3MgfHwgZGV2aWNlLmFuZHJvaWQgPyAncmVzaXplIG9yaWVudGF0aW9uY2hhbmdlIG9ic2VydmVyVXBkYXRlJyA6ICdyZXNpemUgb2JzZXJ2ZXJVcGRhdGUnLCBvblJlc2l6ZSwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVyLm9uKCdvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplLCB0cnVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBkZXRhY2hFdmVudHMoKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHRvdWNoRXZlbnRzID0gc3dpcGVyLnRvdWNoRXZlbnRzLFxuICAgICAgZWwgPSBzd2lwZXIuZWwsXG4gICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsLFxuICAgICAgZGV2aWNlID0gc3dpcGVyLmRldmljZSxcbiAgICAgIHN1cHBvcnQgPSBzd2lwZXIuc3VwcG9ydDtcbiAgdmFyIGNhcHR1cmUgPSAhIXBhcmFtcy5uZXN0ZWQ7IC8vIFRvdWNoIEV2ZW50c1xuXG4gIGlmICghc3VwcG9ydC50b3VjaCAmJiBzdXBwb3J0LnBvaW50ZXJFdmVudHMpIHtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLnN0YXJ0LCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5tb3ZlLCBzd2lwZXIub25Ub3VjaE1vdmUsIGNhcHR1cmUpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgZmFsc2UpO1xuICB9IGVsc2Uge1xuICAgIGlmIChzdXBwb3J0LnRvdWNoKSB7XG4gICAgICB2YXIgcGFzc2l2ZUxpc3RlbmVyID0gdG91Y2hFdmVudHMuc3RhcnQgPT09ICdvblRvdWNoU3RhcnQnICYmIHN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8ge1xuICAgICAgICBwYXNzaXZlOiB0cnVlLFxuICAgICAgICBjYXB0dXJlOiBmYWxzZVxuICAgICAgfSA6IGZhbHNlO1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLm9uVG91Y2hTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcblxuICAgICAgaWYgKHRvdWNoRXZlbnRzLmNhbmNlbCkge1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLmNhbmNlbCwgc3dpcGVyLm9uVG91Y2hFbmQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFkZXZpY2UuaW9zICYmICFkZXZpY2UuYW5kcm9pZCB8fCBwYXJhbXMuc2ltdWxhdGVUb3VjaCAmJiAhc3VwcG9ydC50b3VjaCAmJiBkZXZpY2UuaW9zKSB7XG4gICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBzd2lwZXIub25Ub3VjaE1vdmUsIGNhcHR1cmUpO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gICAgfVxuICB9IC8vIFByZXZlbnQgTGlua3MgQ2xpY2tzXG5cblxuICBpZiAocGFyYW1zLnByZXZlbnRDbGlja3MgfHwgcGFyYW1zLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbikge1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpcGVyLm9uQ2xpY2ssIHRydWUpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgd3JhcHBlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHN3aXBlci5vblNjcm9sbCk7XG4gIH0gLy8gUmVzaXplIGhhbmRsZXJcblxuXG4gIHN3aXBlci5vZmYoZGV2aWNlLmlvcyB8fCBkZXZpY2UuYW5kcm9pZCA/ICdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGUnIDogJ3Jlc2l6ZSBvYnNlcnZlclVwZGF0ZScsIG9uUmVzaXplKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBhdHRhY2hFdmVudHM6IGF0dGFjaEV2ZW50cyxcbiAgZGV0YWNoRXZlbnRzOiBkZXRhY2hFdmVudHNcbn07IiwiZnVuY3Rpb24gY2hlY2tPdmVyZmxvdygpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zO1xuICB2YXIgd2FzTG9ja2VkID0gc3dpcGVyLmlzTG9ja2VkO1xuICB2YXIgbGFzdFNsaWRlUG9zaXRpb24gPSBzd2lwZXIuc2xpZGVzLmxlbmd0aCA+IDAgJiYgcGFyYW1zLnNsaWRlc09mZnNldEJlZm9yZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKiAoc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKSArIHN3aXBlci5zbGlkZXNbMF0ub2Zmc2V0V2lkdGggKiBzd2lwZXIuc2xpZGVzLmxlbmd0aDtcblxuICBpZiAocGFyYW1zLnNsaWRlc09mZnNldEJlZm9yZSAmJiBwYXJhbXMuc2xpZGVzT2Zmc2V0QWZ0ZXIgJiYgbGFzdFNsaWRlUG9zaXRpb24pIHtcbiAgICBzd2lwZXIuaXNMb2NrZWQgPSBsYXN0U2xpZGVQb3NpdGlvbiA8PSBzd2lwZXIuc2l6ZTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIuaXNMb2NrZWQgPSBzd2lwZXIuc25hcEdyaWQubGVuZ3RoID09PSAxO1xuICB9XG5cbiAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gIXN3aXBlci5pc0xvY2tlZDtcbiAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gIXN3aXBlci5pc0xvY2tlZDsgLy8gZXZlbnRzXG5cbiAgaWYgKHdhc0xvY2tlZCAhPT0gc3dpcGVyLmlzTG9ja2VkKSBzd2lwZXIuZW1pdChzd2lwZXIuaXNMb2NrZWQgPyAnbG9jaycgOiAndW5sb2NrJyk7XG5cbiAgaWYgKHdhc0xvY2tlZCAmJiB3YXNMb2NrZWQgIT09IHN3aXBlci5pc0xvY2tlZCkge1xuICAgIHN3aXBlci5pc0VuZCA9IGZhbHNlO1xuICAgIGlmIChzd2lwZXIubmF2aWdhdGlvbikgc3dpcGVyLm5hdmlnYXRpb24udXBkYXRlKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBjaGVja092ZXJmbG93OiBjaGVja092ZXJmbG93XG59OyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogdHJ1ZSxcbiAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gIHRvdWNoRXZlbnRzVGFyZ2V0OiAnY29udGFpbmVyJyxcbiAgaW5pdGlhbFNsaWRlOiAwLFxuICBzcGVlZDogMzAwLFxuICBjc3NNb2RlOiBmYWxzZSxcbiAgdXBkYXRlT25XaW5kb3dSZXNpemU6IHRydWUsXG4gIG5lc3RlZDogZmFsc2UsXG4gIC8vIE92ZXJyaWRlc1xuICB3aWR0aDogbnVsbCxcbiAgaGVpZ2h0OiBudWxsLFxuICAvL1xuICBwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb246IGZhbHNlLFxuICAvLyBzc3JcbiAgdXNlckFnZW50OiBudWxsLFxuICB1cmw6IG51bGwsXG4gIC8vIFRvIHN1cHBvcnQgaU9TJ3Mgc3dpcGUtdG8tZ28tYmFjayBnZXN0dXJlICh3aGVuIGJlaW5nIHVzZWQgaW4tYXBwKS5cbiAgZWRnZVN3aXBlRGV0ZWN0aW9uOiBmYWxzZSxcbiAgZWRnZVN3aXBlVGhyZXNob2xkOiAyMCxcbiAgLy8gRnJlZSBtb2RlXG4gIGZyZWVNb2RlOiBmYWxzZSxcbiAgZnJlZU1vZGVNb21lbnR1bTogdHJ1ZSxcbiAgZnJlZU1vZGVNb21lbnR1bVJhdGlvOiAxLFxuICBmcmVlTW9kZU1vbWVudHVtQm91bmNlOiB0cnVlLFxuICBmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86IDEsXG4gIGZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvOiAxLFxuICBmcmVlTW9kZVN0aWNreTogZmFsc2UsXG4gIGZyZWVNb2RlTWluaW11bVZlbG9jaXR5OiAwLjAyLFxuICAvLyBBdXRvaGVpZ2h0XG4gIGF1dG9IZWlnaHQ6IGZhbHNlLFxuICAvLyBTZXQgd3JhcHBlciB3aWR0aFxuICBzZXRXcmFwcGVyU2l6ZTogZmFsc2UsXG4gIC8vIFZpcnR1YWwgVHJhbnNsYXRlXG4gIHZpcnR1YWxUcmFuc2xhdGU6IGZhbHNlLFxuICAvLyBFZmZlY3RzXG4gIGVmZmVjdDogJ3NsaWRlJyxcbiAgLy8gJ3NsaWRlJyBvciAnZmFkZScgb3IgJ2N1YmUnIG9yICdjb3ZlcmZsb3cnIG9yICdmbGlwJ1xuICAvLyBCcmVha3BvaW50c1xuICBicmVha3BvaW50czogdW5kZWZpbmVkLFxuICAvLyBTbGlkZXMgZ3JpZFxuICBzcGFjZUJldHdlZW46IDAsXG4gIHNsaWRlc1BlclZpZXc6IDEsXG4gIHNsaWRlc1BlckNvbHVtbjogMSxcbiAgc2xpZGVzUGVyQ29sdW1uRmlsbDogJ2NvbHVtbicsXG4gIHNsaWRlc1Blckdyb3VwOiAxLFxuICBzbGlkZXNQZXJHcm91cFNraXA6IDAsXG4gIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcbiAgY2VudGVyZWRTbGlkZXNCb3VuZHM6IGZhbHNlLFxuICBzbGlkZXNPZmZzZXRCZWZvcmU6IDAsXG4gIC8vIGluIHB4XG4gIHNsaWRlc09mZnNldEFmdGVyOiAwLFxuICAvLyBpbiBweFxuICBub3JtYWxpemVTbGlkZUluZGV4OiB0cnVlLFxuICBjZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXM6IGZhbHNlLFxuICAvLyBEaXNhYmxlIHN3aXBlciBhbmQgaGlkZSBuYXZpZ2F0aW9uIHdoZW4gY29udGFpbmVyIG5vdCBvdmVyZmxvd1xuICB3YXRjaE92ZXJmbG93OiBmYWxzZSxcbiAgLy8gUm91bmQgbGVuZ3RoXG4gIHJvdW5kTGVuZ3RoczogZmFsc2UsXG4gIC8vIFRvdWNoZXNcbiAgdG91Y2hSYXRpbzogMSxcbiAgdG91Y2hBbmdsZTogNDUsXG4gIHNpbXVsYXRlVG91Y2g6IHRydWUsXG4gIHNob3J0U3dpcGVzOiB0cnVlLFxuICBsb25nU3dpcGVzOiB0cnVlLFxuICBsb25nU3dpcGVzUmF0aW86IDAuNSxcbiAgbG9uZ1N3aXBlc01zOiAzMDAsXG4gIGZvbGxvd0ZpbmdlcjogdHJ1ZSxcbiAgYWxsb3dUb3VjaE1vdmU6IHRydWUsXG4gIHRocmVzaG9sZDogMCxcbiAgdG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uOiBmYWxzZSxcbiAgdG91Y2hTdGFydFByZXZlbnREZWZhdWx0OiB0cnVlLFxuICB0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdDogZmFsc2UsXG4gIHRvdWNoUmVsZWFzZU9uRWRnZXM6IGZhbHNlLFxuICAvLyBVbmlxdWUgTmF2aWdhdGlvbiBFbGVtZW50c1xuICB1bmlxdWVOYXZFbGVtZW50czogdHJ1ZSxcbiAgLy8gUmVzaXN0YW5jZVxuICByZXNpc3RhbmNlOiB0cnVlLFxuICByZXNpc3RhbmNlUmF0aW86IDAuODUsXG4gIC8vIFByb2dyZXNzXG4gIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IGZhbHNlLFxuICB3YXRjaFNsaWRlc1Zpc2liaWxpdHk6IGZhbHNlLFxuICAvLyBDdXJzb3JcbiAgZ3JhYkN1cnNvcjogZmFsc2UsXG4gIC8vIENsaWNrc1xuICBwcmV2ZW50Q2xpY2tzOiB0cnVlLFxuICBwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb246IHRydWUsXG4gIHNsaWRlVG9DbGlja2VkU2xpZGU6IGZhbHNlLFxuICAvLyBJbWFnZXNcbiAgcHJlbG9hZEltYWdlczogdHJ1ZSxcbiAgdXBkYXRlT25JbWFnZXNSZWFkeTogdHJ1ZSxcbiAgLy8gbG9vcFxuICBsb29wOiBmYWxzZSxcbiAgbG9vcEFkZGl0aW9uYWxTbGlkZXM6IDAsXG4gIGxvb3BlZFNsaWRlczogbnVsbCxcbiAgbG9vcEZpbGxHcm91cFdpdGhCbGFuazogZmFsc2UsXG4gIGxvb3BQcmV2ZW50c1NsaWRlOiB0cnVlLFxuICAvLyBTd2lwaW5nL25vIHN3aXBpbmdcbiAgYWxsb3dTbGlkZVByZXY6IHRydWUsXG4gIGFsbG93U2xpZGVOZXh0OiB0cnVlLFxuICBzd2lwZUhhbmRsZXI6IG51bGwsXG4gIC8vICcuc3dpcGUtaGFuZGxlcicsXG4gIG5vU3dpcGluZzogdHJ1ZSxcbiAgbm9Td2lwaW5nQ2xhc3M6ICdzd2lwZXItbm8tc3dpcGluZycsXG4gIG5vU3dpcGluZ1NlbGVjdG9yOiBudWxsLFxuICAvLyBQYXNzaXZlIExpc3RlbmVyc1xuICBwYXNzaXZlTGlzdGVuZXJzOiB0cnVlLFxuICAvLyBOU1xuICBjb250YWluZXJNb2RpZmllckNsYXNzOiAnc3dpcGVyLWNvbnRhaW5lci0nLFxuICAvLyBORVdcbiAgc2xpZGVDbGFzczogJ3N3aXBlci1zbGlkZScsXG4gIHNsaWRlQmxhbmtDbGFzczogJ3N3aXBlci1zbGlkZS1pbnZpc2libGUtYmxhbmsnLFxuICBzbGlkZUFjdGl2ZUNsYXNzOiAnc3dpcGVyLXNsaWRlLWFjdGl2ZScsXG4gIHNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3M6ICdzd2lwZXItc2xpZGUtZHVwbGljYXRlLWFjdGl2ZScsXG4gIHNsaWRlVmlzaWJsZUNsYXNzOiAnc3dpcGVyLXNsaWRlLXZpc2libGUnLFxuICBzbGlkZUR1cGxpY2F0ZUNsYXNzOiAnc3dpcGVyLXNsaWRlLWR1cGxpY2F0ZScsXG4gIHNsaWRlTmV4dENsYXNzOiAnc3dpcGVyLXNsaWRlLW5leHQnLFxuICBzbGlkZUR1cGxpY2F0ZU5leHRDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUtbmV4dCcsXG4gIHNsaWRlUHJldkNsYXNzOiAnc3dpcGVyLXNsaWRlLXByZXYnLFxuICBzbGlkZUR1cGxpY2F0ZVByZXZDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUtcHJldicsXG4gIHdyYXBwZXJDbGFzczogJ3N3aXBlci13cmFwcGVyJyxcbiAgLy8gQ2FsbGJhY2tzXG4gIHJ1bkNhbGxiYWNrc09uSW5pdDogdHJ1ZSxcbiAgLy8gSW50ZXJuYWxzXG4gIF9lbWl0Q2xhc3NlczogZmFsc2Vcbn07IiwiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG4vKiBlc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246IFwib2ZmXCIgKi9cbmltcG9ydCAkIGZyb20gJy4uLy4uL3V0aWxzL2RvbSc7XG5pbXBvcnQgeyBleHRlbmQsIG5vdywgZGVsZXRlUHJvcHMgfSBmcm9tICcuLi8uLi91dGlscy91dGlscyc7XG5pbXBvcnQgeyBnZXRTdXBwb3J0IH0gZnJvbSAnLi4vLi4vdXRpbHMvZ2V0LXN1cHBvcnQnO1xuaW1wb3J0IHsgZ2V0RGV2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvZ2V0LWRldmljZSc7XG5pbXBvcnQgeyBnZXRCcm93c2VyIH0gZnJvbSAnLi4vLi4vdXRpbHMvZ2V0LWJyb3dzZXInO1xuaW1wb3J0IFJlc2l6ZSBmcm9tICcuLi8uLi9tb2R1bGVzL3Jlc2l6ZS9yZXNpemUnO1xuaW1wb3J0IE9ic2VydmVyIGZyb20gJy4uLy4uL21vZHVsZXMvb2JzZXJ2ZXIvb2JzZXJ2ZXInO1xuaW1wb3J0IG1vZHVsYXIgZnJvbSAnLi9tb2R1bGFyJztcbmltcG9ydCBldmVudHNFbWl0dGVyIGZyb20gJy4vZXZlbnRzLWVtaXR0ZXInO1xuaW1wb3J0IHVwZGF0ZSBmcm9tICcuL3VwZGF0ZS9pbmRleCc7XG5pbXBvcnQgdHJhbnNsYXRlIGZyb20gJy4vdHJhbnNsYXRlL2luZGV4JztcbmltcG9ydCB0cmFuc2l0aW9uIGZyb20gJy4vdHJhbnNpdGlvbi9pbmRleCc7XG5pbXBvcnQgc2xpZGUgZnJvbSAnLi9zbGlkZS9pbmRleCc7XG5pbXBvcnQgbG9vcCBmcm9tICcuL2xvb3AvaW5kZXgnO1xuaW1wb3J0IGdyYWJDdXJzb3IgZnJvbSAnLi9ncmFiLWN1cnNvci9pbmRleCc7XG5pbXBvcnQgbWFuaXB1bGF0aW9uIGZyb20gJy4vbWFuaXB1bGF0aW9uL2luZGV4JztcbmltcG9ydCBldmVudHMgZnJvbSAnLi9ldmVudHMvaW5kZXgnO1xuaW1wb3J0IGJyZWFrcG9pbnRzIGZyb20gJy4vYnJlYWtwb2ludHMvaW5kZXgnO1xuaW1wb3J0IGNsYXNzZXMgZnJvbSAnLi9jbGFzc2VzL2luZGV4JztcbmltcG9ydCBpbWFnZXMgZnJvbSAnLi9pbWFnZXMvaW5kZXgnO1xuaW1wb3J0IGNoZWNrT3ZlcmZsb3cgZnJvbSAnLi9jaGVjay1vdmVyZmxvdy9pbmRleCc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi9kZWZhdWx0cyc7XG52YXIgcHJvdG90eXBlcyA9IHtcbiAgbW9kdWxhcjogbW9kdWxhcixcbiAgZXZlbnRzRW1pdHRlcjogZXZlbnRzRW1pdHRlcixcbiAgdXBkYXRlOiB1cGRhdGUsXG4gIHRyYW5zbGF0ZTogdHJhbnNsYXRlLFxuICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uLFxuICBzbGlkZTogc2xpZGUsXG4gIGxvb3A6IGxvb3AsXG4gIGdyYWJDdXJzb3I6IGdyYWJDdXJzb3IsXG4gIG1hbmlwdWxhdGlvbjogbWFuaXB1bGF0aW9uLFxuICBldmVudHM6IGV2ZW50cyxcbiAgYnJlYWtwb2ludHM6IGJyZWFrcG9pbnRzLFxuICBjaGVja092ZXJmbG93OiBjaGVja092ZXJmbG93LFxuICBjbGFzc2VzOiBjbGFzc2VzLFxuICBpbWFnZXM6IGltYWdlc1xufTtcbnZhciBleHRlbmRlZERlZmF1bHRzID0ge307XG5cbnZhciBTd2lwZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTd2lwZXIoKSB7XG4gICAgdmFyIGVsO1xuICAgIHZhciBwYXJhbXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmIGFyZ3NbMF0uY29uc3RydWN0b3IgJiYgYXJnc1swXS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XG4gICAgICBwYXJhbXMgPSBhcmdzWzBdO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbCA9IGFyZ3NbMF07XG4gICAgICBwYXJhbXMgPSBhcmdzWzFdO1xuICAgIH1cblxuICAgIGlmICghcGFyYW1zKSBwYXJhbXMgPSB7fTtcbiAgICBwYXJhbXMgPSBleHRlbmQoe30sIHBhcmFtcyk7XG4gICAgaWYgKGVsICYmICFwYXJhbXMuZWwpIHBhcmFtcy5lbCA9IGVsOyAvLyBTd2lwZXIgSW5zdGFuY2VcblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHN3aXBlci5zdXBwb3J0ID0gZ2V0U3VwcG9ydCgpO1xuICAgIHN3aXBlci5kZXZpY2UgPSBnZXREZXZpY2Uoe1xuICAgICAgdXNlckFnZW50OiBwYXJhbXMudXNlckFnZW50XG4gICAgfSk7XG4gICAgc3dpcGVyLmJyb3dzZXIgPSBnZXRCcm93c2VyKCk7XG4gICAgc3dpcGVyLmV2ZW50c0xpc3RlbmVycyA9IHt9O1xuICAgIHN3aXBlci5ldmVudHNBbnlMaXN0ZW5lcnMgPSBbXTtcblxuICAgIGlmICh0eXBlb2Ygc3dpcGVyLm1vZHVsZXMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBzd2lwZXIubW9kdWxlcyA9IHt9O1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHN3aXBlci5tb2R1bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVOYW1lKSB7XG4gICAgICB2YXIgbW9kdWxlID0gc3dpcGVyLm1vZHVsZXNbbW9kdWxlTmFtZV07XG5cbiAgICAgIGlmIChtb2R1bGUucGFyYW1zKSB7XG4gICAgICAgIHZhciBtb2R1bGVQYXJhbU5hbWUgPSBPYmplY3Qua2V5cyhtb2R1bGUucGFyYW1zKVswXTtcbiAgICAgICAgdmFyIG1vZHVsZVBhcmFtcyA9IG1vZHVsZS5wYXJhbXNbbW9kdWxlUGFyYW1OYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVQYXJhbXMgIT09ICdvYmplY3QnIHx8IG1vZHVsZVBhcmFtcyA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBpZiAoIShtb2R1bGVQYXJhbU5hbWUgaW4gcGFyYW1zICYmICdlbmFibGVkJyBpbiBtb2R1bGVQYXJhbXMpKSByZXR1cm47XG5cbiAgICAgICAgaWYgKHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdID09PSB0cnVlKSB7XG4gICAgICAgICAgcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0gPSB7XG4gICAgICAgICAgICBlbmFibGVkOiB0cnVlXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0gPT09ICdvYmplY3QnICYmICEoJ2VuYWJsZWQnIGluIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdKSkge1xuICAgICAgICAgIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFwYXJhbXNbbW9kdWxlUGFyYW1OYW1lXSkgcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0gPSB7XG4gICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTsgLy8gRXh0ZW5kIGRlZmF1bHRzIHdpdGggbW9kdWxlcyBwYXJhbXNcblxuICAgIHZhciBzd2lwZXJQYXJhbXMgPSBleHRlbmQoe30sIGRlZmF1bHRzKTtcbiAgICBzd2lwZXIudXNlUGFyYW1zKHN3aXBlclBhcmFtcyk7IC8vIEV4dGVuZCBkZWZhdWx0cyB3aXRoIHBhc3NlZCBwYXJhbXNcblxuICAgIHN3aXBlci5wYXJhbXMgPSBleHRlbmQoe30sIHN3aXBlclBhcmFtcywgZXh0ZW5kZWREZWZhdWx0cywgcGFyYW1zKTtcbiAgICBzd2lwZXIub3JpZ2luYWxQYXJhbXMgPSBleHRlbmQoe30sIHN3aXBlci5wYXJhbXMpO1xuICAgIHN3aXBlci5wYXNzZWRQYXJhbXMgPSBleHRlbmQoe30sIHBhcmFtcyk7IC8vIGFkZCBldmVudCBsaXN0ZW5lcnNcblxuICAgIGlmIChzd2lwZXIucGFyYW1zICYmIHN3aXBlci5wYXJhbXMub24pIHtcbiAgICAgIE9iamVjdC5rZXlzKHN3aXBlci5wYXJhbXMub24pLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgICBzd2lwZXIub24oZXZlbnROYW1lLCBzd2lwZXIucGFyYW1zLm9uW2V2ZW50TmFtZV0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMgJiYgc3dpcGVyLnBhcmFtcy5vbkFueSkge1xuICAgICAgc3dpcGVyLm9uQW55KHN3aXBlci5wYXJhbXMub25BbnkpO1xuICAgIH0gLy8gU2F2ZSBEb20gbGliXG5cblxuICAgIHN3aXBlci4kID0gJDsgLy8gRmluZCBlbFxuXG4gICAgdmFyICRlbCA9ICQoc3dpcGVyLnBhcmFtcy5lbCk7XG4gICAgZWwgPSAkZWxbMF07XG5cbiAgICBpZiAoIWVsKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmICgkZWwubGVuZ3RoID4gMSkge1xuICAgICAgdmFyIHN3aXBlcnMgPSBbXTtcbiAgICAgICRlbC5lYWNoKGZ1bmN0aW9uIChjb250YWluZXJFbCkge1xuICAgICAgICB2YXIgbmV3UGFyYW1zID0gZXh0ZW5kKHt9LCBwYXJhbXMsIHtcbiAgICAgICAgICBlbDogY29udGFpbmVyRWxcbiAgICAgICAgfSk7XG4gICAgICAgIHN3aXBlcnMucHVzaChuZXcgU3dpcGVyKG5ld1BhcmFtcykpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gc3dpcGVycztcbiAgICB9XG5cbiAgICBlbC5zd2lwZXIgPSBzd2lwZXI7IC8vIEZpbmQgV3JhcHBlclxuXG4gICAgdmFyICR3cmFwcGVyRWw7XG5cbiAgICBpZiAoZWwgJiYgZWwuc2hhZG93Um9vdCAmJiBlbC5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IpIHtcbiAgICAgICR3cmFwcGVyRWwgPSAkKGVsLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvcihcIi5cIiArIHN3aXBlci5wYXJhbXMud3JhcHBlckNsYXNzKSk7IC8vIENoaWxkcmVuIG5lZWRzIHRvIHJldHVybiBzbG90IGl0ZW1zXG5cbiAgICAgICR3cmFwcGVyRWwuY2hpbGRyZW4gPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gJGVsLmNoaWxkcmVuKG9wdGlvbnMpO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHdyYXBwZXJFbCA9ICRlbC5jaGlsZHJlbihcIi5cIiArIHN3aXBlci5wYXJhbXMud3JhcHBlckNsYXNzKTtcbiAgICB9IC8vIEV4dGVuZCBTd2lwZXJcblxuXG4gICAgZXh0ZW5kKHN3aXBlciwge1xuICAgICAgJGVsOiAkZWwsXG4gICAgICBlbDogZWwsXG4gICAgICAkd3JhcHBlckVsOiAkd3JhcHBlckVsLFxuICAgICAgd3JhcHBlckVsOiAkd3JhcHBlckVsWzBdLFxuICAgICAgLy8gQ2xhc3Nlc1xuICAgICAgY2xhc3NOYW1lczogW10sXG4gICAgICAvLyBTbGlkZXNcbiAgICAgIHNsaWRlczogJCgpLFxuICAgICAgc2xpZGVzR3JpZDogW10sXG4gICAgICBzbmFwR3JpZDogW10sXG4gICAgICBzbGlkZXNTaXplc0dyaWQ6IFtdLFxuICAgICAgLy8gaXNEaXJlY3Rpb25cbiAgICAgIGlzSG9yaXpvbnRhbDogZnVuY3Rpb24gaXNIb3Jpem9udGFsKCkge1xuICAgICAgICByZXR1cm4gc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJztcbiAgICAgIH0sXG4gICAgICBpc1ZlcnRpY2FsOiBmdW5jdGlvbiBpc1ZlcnRpY2FsKCkge1xuICAgICAgICByZXR1cm4gc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCc7XG4gICAgICB9LFxuICAgICAgLy8gUlRMXG4gICAgICBydGw6IGVsLmRpci50b0xvd2VyQ2FzZSgpID09PSAncnRsJyB8fCAkZWwuY3NzKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcsXG4gICAgICBydGxUcmFuc2xhdGU6IHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uID09PSAnaG9yaXpvbnRhbCcgJiYgKGVsLmRpci50b0xvd2VyQ2FzZSgpID09PSAncnRsJyB8fCAkZWwuY3NzKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcpLFxuICAgICAgd3JvbmdSVEw6ICR3cmFwcGVyRWwuY3NzKCdkaXNwbGF5JykgPT09ICctd2Via2l0LWJveCcsXG4gICAgICAvLyBJbmRleGVzXG4gICAgICBhY3RpdmVJbmRleDogMCxcbiAgICAgIHJlYWxJbmRleDogMCxcbiAgICAgIC8vXG4gICAgICBpc0JlZ2lubmluZzogdHJ1ZSxcbiAgICAgIGlzRW5kOiBmYWxzZSxcbiAgICAgIC8vIFByb3BzXG4gICAgICB0cmFuc2xhdGU6IDAsXG4gICAgICBwcmV2aW91c1RyYW5zbGF0ZTogMCxcbiAgICAgIHByb2dyZXNzOiAwLFxuICAgICAgdmVsb2NpdHk6IDAsXG4gICAgICBhbmltYXRpbmc6IGZhbHNlLFxuICAgICAgLy8gTG9ja3NcbiAgICAgIGFsbG93U2xpZGVOZXh0OiBzd2lwZXIucGFyYW1zLmFsbG93U2xpZGVOZXh0LFxuICAgICAgYWxsb3dTbGlkZVByZXY6IHN3aXBlci5wYXJhbXMuYWxsb3dTbGlkZVByZXYsXG4gICAgICAvLyBUb3VjaCBFdmVudHNcbiAgICAgIHRvdWNoRXZlbnRzOiBmdW5jdGlvbiB0b3VjaEV2ZW50cygpIHtcbiAgICAgICAgdmFyIHRvdWNoID0gWyd0b3VjaHN0YXJ0JywgJ3RvdWNobW92ZScsICd0b3VjaGVuZCcsICd0b3VjaGNhbmNlbCddO1xuICAgICAgICB2YXIgZGVza3RvcCA9IFsnbW91c2Vkb3duJywgJ21vdXNlbW92ZScsICdtb3VzZXVwJ107XG5cbiAgICAgICAgaWYgKHN3aXBlci5zdXBwb3J0LnBvaW50ZXJFdmVudHMpIHtcbiAgICAgICAgICBkZXNrdG9wID0gWydwb2ludGVyZG93bicsICdwb2ludGVybW92ZScsICdwb2ludGVydXAnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXBlci50b3VjaEV2ZW50c1RvdWNoID0ge1xuICAgICAgICAgIHN0YXJ0OiB0b3VjaFswXSxcbiAgICAgICAgICBtb3ZlOiB0b3VjaFsxXSxcbiAgICAgICAgICBlbmQ6IHRvdWNoWzJdLFxuICAgICAgICAgIGNhbmNlbDogdG91Y2hbM11cbiAgICAgICAgfTtcbiAgICAgICAgc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcCA9IHtcbiAgICAgICAgICBzdGFydDogZGVza3RvcFswXSxcbiAgICAgICAgICBtb3ZlOiBkZXNrdG9wWzFdLFxuICAgICAgICAgIGVuZDogZGVza3RvcFsyXVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3dpcGVyLnN1cHBvcnQudG91Y2ggfHwgIXN3aXBlci5wYXJhbXMuc2ltdWxhdGVUb3VjaCA/IHN3aXBlci50b3VjaEV2ZW50c1RvdWNoIDogc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcDtcbiAgICAgIH0oKSxcbiAgICAgIHRvdWNoRXZlbnRzRGF0YToge1xuICAgICAgICBpc1RvdWNoZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgaXNNb3ZlZDogdW5kZWZpbmVkLFxuICAgICAgICBhbGxvd1RvdWNoQ2FsbGJhY2tzOiB1bmRlZmluZWQsXG4gICAgICAgIHRvdWNoU3RhcnRUaW1lOiB1bmRlZmluZWQsXG4gICAgICAgIGlzU2Nyb2xsaW5nOiB1bmRlZmluZWQsXG4gICAgICAgIGN1cnJlbnRUcmFuc2xhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhcnRUcmFuc2xhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgYWxsb3dUaHJlc2hvbGRNb3ZlOiB1bmRlZmluZWQsXG4gICAgICAgIC8vIEZvcm0gZWxlbWVudHMgdG8gbWF0Y2hcbiAgICAgICAgZm9ybUVsZW1lbnRzOiAnaW5wdXQsIHNlbGVjdCwgb3B0aW9uLCB0ZXh0YXJlYSwgYnV0dG9uLCB2aWRlbywgbGFiZWwnLFxuICAgICAgICAvLyBMYXN0IGNsaWNrIHRpbWVcbiAgICAgICAgbGFzdENsaWNrVGltZTogbm93KCksXG4gICAgICAgIGNsaWNrVGltZW91dDogdW5kZWZpbmVkLFxuICAgICAgICAvLyBWZWxvY2l0aWVzXG4gICAgICAgIHZlbG9jaXRpZXM6IFtdLFxuICAgICAgICBhbGxvd01vbWVudHVtQm91bmNlOiB1bmRlZmluZWQsXG4gICAgICAgIGlzVG91Y2hFdmVudDogdW5kZWZpbmVkLFxuICAgICAgICBzdGFydE1vdmluZzogdW5kZWZpbmVkXG4gICAgICB9LFxuICAgICAgLy8gQ2xpY2tzXG4gICAgICBhbGxvd0NsaWNrOiB0cnVlLFxuICAgICAgLy8gVG91Y2hlc1xuICAgICAgYWxsb3dUb3VjaE1vdmU6IHN3aXBlci5wYXJhbXMuYWxsb3dUb3VjaE1vdmUsXG4gICAgICB0b3VjaGVzOiB7XG4gICAgICAgIHN0YXJ0WDogMCxcbiAgICAgICAgc3RhcnRZOiAwLFxuICAgICAgICBjdXJyZW50WDogMCxcbiAgICAgICAgY3VycmVudFk6IDAsXG4gICAgICAgIGRpZmY6IDBcbiAgICAgIH0sXG4gICAgICAvLyBJbWFnZXNcbiAgICAgIGltYWdlc1RvTG9hZDogW10sXG4gICAgICBpbWFnZXNMb2FkZWQ6IDBcbiAgICB9KTsgLy8gSW5zdGFsbCBNb2R1bGVzXG5cbiAgICBzd2lwZXIudXNlTW9kdWxlcygpO1xuICAgIHN3aXBlci5lbWl0KCdfc3dpcGVyJyk7IC8vIEluaXRcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLmluaXQpIHtcbiAgICAgIHN3aXBlci5pbml0KCk7XG4gICAgfSAvLyBSZXR1cm4gYXBwIGluc3RhbmNlXG5cblxuICAgIHJldHVybiBzd2lwZXI7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpcGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZW1pdENvbnRhaW5lckNsYXNzZXMgPSBmdW5jdGlvbiBlbWl0Q29udGFpbmVyQ2xhc3NlcygpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoIXN3aXBlci5wYXJhbXMuX2VtaXRDbGFzc2VzIHx8ICFzd2lwZXIuZWwpIHJldHVybjtcbiAgICB2YXIgY2xhc3NlcyA9IHN3aXBlci5lbC5jbGFzc05hbWUuc3BsaXQoJyAnKS5maWx0ZXIoZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgICAgcmV0dXJuIGNsYXNzTmFtZS5pbmRleE9mKCdzd2lwZXItY29udGFpbmVyJykgPT09IDAgfHwgY2xhc3NOYW1lLmluZGV4T2Yoc3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzKSA9PT0gMDtcbiAgICB9KTtcbiAgICBzd2lwZXIuZW1pdCgnX2NvbnRhaW5lckNsYXNzZXMnLCBjbGFzc2VzLmpvaW4oJyAnKSk7XG4gIH07XG5cbiAgX3Byb3RvLmdldFNsaWRlQ2xhc3NlcyA9IGZ1bmN0aW9uIGdldFNsaWRlQ2xhc3NlcyhzbGlkZUVsKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgcmV0dXJuIHNsaWRlRWwuY2xhc3NOYW1lLnNwbGl0KCcgJykuZmlsdGVyKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgIHJldHVybiBjbGFzc05hbWUuaW5kZXhPZignc3dpcGVyLXNsaWRlJykgPT09IDAgfHwgY2xhc3NOYW1lLmluZGV4T2Yoc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzKSA9PT0gMDtcbiAgICB9KS5qb2luKCcgJyk7XG4gIH07XG5cbiAgX3Byb3RvLmVtaXRTbGlkZXNDbGFzc2VzID0gZnVuY3Rpb24gZW1pdFNsaWRlc0NsYXNzZXMoKSB7XG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKCFzd2lwZXIucGFyYW1zLl9lbWl0Q2xhc3NlcyB8fCAhc3dpcGVyLmVsKSByZXR1cm47XG4gICAgc3dpcGVyLnNsaWRlcy5lYWNoKGZ1bmN0aW9uIChzbGlkZUVsKSB7XG4gICAgICB2YXIgY2xhc3NOYW1lcyA9IHN3aXBlci5nZXRTbGlkZUNsYXNzZXMoc2xpZGVFbCk7XG4gICAgICBzd2lwZXIuZW1pdCgnX3NsaWRlQ2xhc3MnLCBzbGlkZUVsLCBjbGFzc05hbWVzKTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uc2xpZGVzUGVyVmlld0R5bmFtaWMgPSBmdW5jdGlvbiBzbGlkZXNQZXJWaWV3RHluYW1pYygpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgICAgc2xpZGVzID0gc3dpcGVyLnNsaWRlcyxcbiAgICAgICAgc2xpZGVzR3JpZCA9IHN3aXBlci5zbGlkZXNHcmlkLFxuICAgICAgICBzd2lwZXJTaXplID0gc3dpcGVyLnNpemUsXG4gICAgICAgIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4O1xuICAgIHZhciBzcHYgPSAxO1xuXG4gICAgaWYgKHBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgdmFyIHNsaWRlU2l6ZSA9IHNsaWRlc1thY3RpdmVJbmRleF0uc3dpcGVyU2xpZGVTaXplO1xuICAgICAgdmFyIGJyZWFrTG9vcDtcblxuICAgICAgZm9yICh2YXIgaSA9IGFjdGl2ZUluZGV4ICsgMTsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoc2xpZGVzW2ldICYmICFicmVha0xvb3ApIHtcbiAgICAgICAgICBzbGlkZVNpemUgKz0gc2xpZGVzW2ldLnN3aXBlclNsaWRlU2l6ZTtcbiAgICAgICAgICBzcHYgKz0gMTtcbiAgICAgICAgICBpZiAoc2xpZGVTaXplID4gc3dpcGVyU2l6ZSkgYnJlYWtMb29wID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfaSA9IGFjdGl2ZUluZGV4IC0gMTsgX2kgPj0gMDsgX2kgLT0gMSkge1xuICAgICAgICBpZiAoc2xpZGVzW19pXSAmJiAhYnJlYWtMb29wKSB7XG4gICAgICAgICAgc2xpZGVTaXplICs9IHNsaWRlc1tfaV0uc3dpcGVyU2xpZGVTaXplO1xuICAgICAgICAgIHNwdiArPSAxO1xuICAgICAgICAgIGlmIChzbGlkZVNpemUgPiBzd2lwZXJTaXplKSBicmVha0xvb3AgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAodmFyIF9pMiA9IGFjdGl2ZUluZGV4ICsgMTsgX2kyIDwgc2xpZGVzLmxlbmd0aDsgX2kyICs9IDEpIHtcbiAgICAgICAgaWYgKHNsaWRlc0dyaWRbX2kyXSAtIHNsaWRlc0dyaWRbYWN0aXZlSW5kZXhdIDwgc3dpcGVyU2l6ZSkge1xuICAgICAgICAgIHNwdiArPSAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNwdjtcbiAgfTtcblxuICBfcHJvdG8udXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICB2YXIgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7IC8vIEJyZWFrcG9pbnRzXG5cbiAgICBpZiAocGFyYW1zLmJyZWFrcG9pbnRzKSB7XG4gICAgICBzd2lwZXIuc2V0QnJlYWtwb2ludCgpO1xuICAgIH1cblxuICAgIHN3aXBlci51cGRhdGVTaXplKCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlcygpO1xuICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcygpO1xuICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgICBmdW5jdGlvbiBzZXRUcmFuc2xhdGUoKSB7XG4gICAgICB2YXIgdHJhbnNsYXRlVmFsdWUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSAqIC0xIDogc3dpcGVyLnRyYW5zbGF0ZTtcbiAgICAgIHZhciBuZXdUcmFuc2xhdGUgPSBNYXRoLm1pbihNYXRoLm1heCh0cmFuc2xhdGVWYWx1ZSwgc3dpcGVyLm1heFRyYW5zbGF0ZSgpKSwgc3dpcGVyLm1pblRyYW5zbGF0ZSgpKTtcbiAgICAgIHN3aXBlci5zZXRUcmFuc2xhdGUobmV3VHJhbnNsYXRlKTtcbiAgICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICB9XG5cbiAgICB2YXIgdHJhbnNsYXRlZDtcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgICBzZXRUcmFuc2xhdGUoKTtcblxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuYXV0b0hlaWdodCkge1xuICAgICAgICBzd2lwZXIudXBkYXRlQXV0b0hlaWdodCgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nIHx8IHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpICYmIHN3aXBlci5pc0VuZCAmJiAhc3dpcGVyLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICB0cmFuc2xhdGVkID0gc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0cmFuc2xhdGVkID0gc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4LCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdHJhbnNsYXRlZCkge1xuICAgICAgICBzZXRUcmFuc2xhdGUoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc25hcEdyaWQgIT09IHN3aXBlci5zbmFwR3JpZCkge1xuICAgICAgc3dpcGVyLmNoZWNrT3ZlcmZsb3coKTtcbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgndXBkYXRlJyk7XG4gIH07XG5cbiAgX3Byb3RvLmNoYW5nZURpcmVjdGlvbiA9IGZ1bmN0aW9uIGNoYW5nZURpcmVjdGlvbihuZXdEaXJlY3Rpb24sIG5lZWRVcGRhdGUpIHtcbiAgICBpZiAobmVlZFVwZGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBuZWVkVXBkYXRlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgY3VycmVudERpcmVjdGlvbiA9IHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uO1xuXG4gICAgaWYgKCFuZXdEaXJlY3Rpb24pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgbmV3RGlyZWN0aW9uID0gY3VycmVudERpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnID8gJ3ZlcnRpY2FsJyA6ICdob3Jpem9udGFsJztcbiAgICB9XG5cbiAgICBpZiAobmV3RGlyZWN0aW9uID09PSBjdXJyZW50RGlyZWN0aW9uIHx8IG5ld0RpcmVjdGlvbiAhPT0gJ2hvcml6b250YWwnICYmIG5ld0RpcmVjdGlvbiAhPT0gJ3ZlcnRpY2FsJykge1xuICAgICAgcmV0dXJuIHN3aXBlcjtcbiAgICB9XG5cbiAgICBzd2lwZXIuJGVsLnJlbW92ZUNsYXNzKFwiXCIgKyBzd2lwZXIucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBjdXJyZW50RGlyZWN0aW9uKS5hZGRDbGFzcyhcIlwiICsgc3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgbmV3RGlyZWN0aW9uKTtcbiAgICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbiAgICBzd2lwZXIucGFyYW1zLmRpcmVjdGlvbiA9IG5ld0RpcmVjdGlvbjtcbiAgICBzd2lwZXIuc2xpZGVzLmVhY2goZnVuY3Rpb24gKHNsaWRlRWwpIHtcbiAgICAgIGlmIChuZXdEaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgc2xpZGVFbC5zdHlsZS53aWR0aCA9ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVFbC5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICAgIH1cbiAgICB9KTtcbiAgICBzd2lwZXIuZW1pdCgnY2hhbmdlRGlyZWN0aW9uJyk7XG4gICAgaWYgKG5lZWRVcGRhdGUpIHN3aXBlci51cGRhdGUoKTtcbiAgICByZXR1cm4gc3dpcGVyO1xuICB9O1xuXG4gIF9wcm90by5pbml0ID0gZnVuY3Rpb24gaW5pdCgpIHtcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoc3dpcGVyLmluaXRpYWxpemVkKSByZXR1cm47XG4gICAgc3dpcGVyLmVtaXQoJ2JlZm9yZUluaXQnKTsgLy8gU2V0IGJyZWFrcG9pbnRcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLmJyZWFrcG9pbnRzKSB7XG4gICAgICBzd2lwZXIuc2V0QnJlYWtwb2ludCgpO1xuICAgIH0gLy8gQWRkIENsYXNzZXNcblxuXG4gICAgc3dpcGVyLmFkZENsYXNzZXMoKTsgLy8gQ3JlYXRlIGxvb3BcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gICAgfSAvLyBVcGRhdGUgc2l6ZVxuXG5cbiAgICBzd2lwZXIudXBkYXRlU2l6ZSgpOyAvLyBVcGRhdGUgc2xpZGVzXG5cbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzKCk7XG5cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy53YXRjaE92ZXJmbG93KSB7XG4gICAgICBzd2lwZXIuY2hlY2tPdmVyZmxvdygpO1xuICAgIH0gLy8gU2V0IEdyYWIgQ3Vyc29yXG5cblxuICAgIGlmIChzd2lwZXIucGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKCk7XG4gICAgfVxuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMucHJlbG9hZEltYWdlcykge1xuICAgICAgc3dpcGVyLnByZWxvYWRJbWFnZXMoKTtcbiAgICB9IC8vIFNsaWRlIFRvIEluaXRpYWwgU2xpZGVcblxuXG4gICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnBhcmFtcy5pbml0aWFsU2xpZGUgKyBzd2lwZXIubG9vcGVkU2xpZGVzLCAwLCBzd2lwZXIucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5wYXJhbXMuaW5pdGlhbFNsaWRlLCAwLCBzd2lwZXIucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCk7XG4gICAgfSAvLyBBdHRhY2ggZXZlbnRzXG5cblxuICAgIHN3aXBlci5hdHRhY2hFdmVudHMoKTsgLy8gSW5pdCBGbGFnXG5cbiAgICBzd2lwZXIuaW5pdGlhbGl6ZWQgPSB0cnVlOyAvLyBFbWl0XG5cbiAgICBzd2lwZXIuZW1pdCgnaW5pdCcpO1xuICAgIHN3aXBlci5lbWl0KCdhZnRlckluaXQnKTtcbiAgfTtcblxuICBfcHJvdG8uZGVzdHJveSA9IGZ1bmN0aW9uIGRlc3Ryb3koZGVsZXRlSW5zdGFuY2UsIGNsZWFuU3R5bGVzKSB7XG4gICAgaWYgKGRlbGV0ZUluc3RhbmNlID09PSB2b2lkIDApIHtcbiAgICAgIGRlbGV0ZUluc3RhbmNlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoY2xlYW5TdHlsZXMgPT09IHZvaWQgMCkge1xuICAgICAgY2xlYW5TdHlsZXMgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgICAkZWwgPSBzd2lwZXIuJGVsLFxuICAgICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXM7XG5cbiAgICBpZiAodHlwZW9mIHN3aXBlci5wYXJhbXMgPT09ICd1bmRlZmluZWQnIHx8IHN3aXBlci5kZXN0cm95ZWQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdiZWZvcmVEZXN0cm95Jyk7IC8vIEluaXQgRmxhZ1xuXG4gICAgc3dpcGVyLmluaXRpYWxpemVkID0gZmFsc2U7IC8vIERldGFjaCBldmVudHNcblxuICAgIHN3aXBlci5kZXRhY2hFdmVudHMoKTsgLy8gRGVzdHJveSBsb29wXG5cbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wRGVzdHJveSgpO1xuICAgIH0gLy8gQ2xlYW51cCBzdHlsZXNcblxuXG4gICAgaWYgKGNsZWFuU3R5bGVzKSB7XG4gICAgICBzd2lwZXIucmVtb3ZlQ2xhc3NlcygpO1xuICAgICAgJGVsLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG4gICAgICAkd3JhcHBlckVsLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG5cbiAgICAgIGlmIChzbGlkZXMgJiYgc2xpZGVzLmxlbmd0aCkge1xuICAgICAgICBzbGlkZXMucmVtb3ZlQ2xhc3MoW3BhcmFtcy5zbGlkZVZpc2libGVDbGFzcywgcGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3MsIHBhcmFtcy5zbGlkZU5leHRDbGFzcywgcGFyYW1zLnNsaWRlUHJldkNsYXNzXS5qb2luKCcgJykpLnJlbW92ZUF0dHIoJ3N0eWxlJykucmVtb3ZlQXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgnZGVzdHJveScpOyAvLyBEZXRhY2ggZW1pdHRlciBldmVudHNcblxuICAgIE9iamVjdC5rZXlzKHN3aXBlci5ldmVudHNMaXN0ZW5lcnMpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgc3dpcGVyLm9mZihldmVudE5hbWUpO1xuICAgIH0pO1xuXG4gICAgaWYgKGRlbGV0ZUluc3RhbmNlICE9PSBmYWxzZSkge1xuICAgICAgc3dpcGVyLiRlbFswXS5zd2lwZXIgPSBudWxsO1xuICAgICAgZGVsZXRlUHJvcHMoc3dpcGVyKTtcbiAgICB9XG5cbiAgICBzd2lwZXIuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICBTd2lwZXIuZXh0ZW5kRGVmYXVsdHMgPSBmdW5jdGlvbiBleHRlbmREZWZhdWx0cyhuZXdEZWZhdWx0cykge1xuICAgIGV4dGVuZChleHRlbmRlZERlZmF1bHRzLCBuZXdEZWZhdWx0cyk7XG4gIH07XG5cbiAgU3dpcGVyLmluc3RhbGxNb2R1bGUgPSBmdW5jdGlvbiBpbnN0YWxsTW9kdWxlKG1vZHVsZSkge1xuICAgIGlmICghU3dpcGVyLnByb3RvdHlwZS5tb2R1bGVzKSBTd2lwZXIucHJvdG90eXBlLm1vZHVsZXMgPSB7fTtcbiAgICB2YXIgbmFtZSA9IG1vZHVsZS5uYW1lIHx8IE9iamVjdC5rZXlzKFN3aXBlci5wcm90b3R5cGUubW9kdWxlcykubGVuZ3RoICsgXCJfXCIgKyBub3coKTtcbiAgICBTd2lwZXIucHJvdG90eXBlLm1vZHVsZXNbbmFtZV0gPSBtb2R1bGU7XG4gIH07XG5cbiAgU3dpcGVyLnVzZSA9IGZ1bmN0aW9uIHVzZShtb2R1bGUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShtb2R1bGUpKSB7XG4gICAgICBtb2R1bGUuZm9yRWFjaChmdW5jdGlvbiAobSkge1xuICAgICAgICByZXR1cm4gU3dpcGVyLmluc3RhbGxNb2R1bGUobSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBTd2lwZXI7XG4gICAgfVxuXG4gICAgU3dpcGVyLmluc3RhbGxNb2R1bGUobW9kdWxlKTtcbiAgICByZXR1cm4gU3dpcGVyO1xuICB9O1xuXG4gIF9jcmVhdGVDbGFzcyhTd2lwZXIsIG51bGwsIFt7XG4gICAga2V5OiBcImV4dGVuZGVkRGVmYXVsdHNcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBleHRlbmRlZERlZmF1bHRzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkZWZhdWx0c1wiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIGRlZmF1bHRzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTd2lwZXI7XG59KCk7XG5cbk9iamVjdC5rZXlzKHByb3RvdHlwZXMpLmZvckVhY2goZnVuY3Rpb24gKHByb3RvdHlwZUdyb3VwKSB7XG4gIE9iamVjdC5rZXlzKHByb3RvdHlwZXNbcHJvdG90eXBlR3JvdXBdKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm90b01ldGhvZCkge1xuICAgIFN3aXBlci5wcm90b3R5cGVbcHJvdG9NZXRob2RdID0gcHJvdG90eXBlc1twcm90b3R5cGVHcm91cF1bcHJvdG9NZXRob2RdO1xuICB9KTtcbn0pO1xuU3dpcGVyLnVzZShbUmVzaXplLCBPYnNlcnZlcl0pO1xuZXhwb3J0IGRlZmF1bHQgU3dpcGVyOyIsImltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgdXNlUGFyYW1zOiBmdW5jdGlvbiB1c2VQYXJhbXMoaW5zdGFuY2VQYXJhbXMpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzO1xuICAgIGlmICghaW5zdGFuY2UubW9kdWxlcykgcmV0dXJuO1xuICAgIE9iamVjdC5rZXlzKGluc3RhbmNlLm1vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZU5hbWUpIHtcbiAgICAgIHZhciBtb2R1bGUgPSBpbnN0YW5jZS5tb2R1bGVzW21vZHVsZU5hbWVdOyAvLyBFeHRlbmQgcGFyYW1zXG5cbiAgICAgIGlmIChtb2R1bGUucGFyYW1zKSB7XG4gICAgICAgIGV4dGVuZChpbnN0YW5jZVBhcmFtcywgbW9kdWxlLnBhcmFtcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIHVzZU1vZHVsZXM6IGZ1bmN0aW9uIHVzZU1vZHVsZXMobW9kdWxlc1BhcmFtcykge1xuICAgIGlmIChtb2R1bGVzUGFyYW1zID09PSB2b2lkIDApIHtcbiAgICAgIG1vZHVsZXNQYXJhbXMgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgaW5zdGFuY2UgPSB0aGlzO1xuICAgIGlmICghaW5zdGFuY2UubW9kdWxlcykgcmV0dXJuO1xuICAgIE9iamVjdC5rZXlzKGluc3RhbmNlLm1vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZU5hbWUpIHtcbiAgICAgIHZhciBtb2R1bGUgPSBpbnN0YW5jZS5tb2R1bGVzW21vZHVsZU5hbWVdO1xuICAgICAgdmFyIG1vZHVsZVBhcmFtcyA9IG1vZHVsZXNQYXJhbXNbbW9kdWxlTmFtZV0gfHwge307IC8vIEFkZCBldmVudCBsaXN0ZW5lcnNcblxuICAgICAgaWYgKG1vZHVsZS5vbiAmJiBpbnN0YW5jZS5vbikge1xuICAgICAgICBPYmplY3Qua2V5cyhtb2R1bGUub24pLmZvckVhY2goZnVuY3Rpb24gKG1vZHVsZUV2ZW50TmFtZSkge1xuICAgICAgICAgIGluc3RhbmNlLm9uKG1vZHVsZUV2ZW50TmFtZSwgbW9kdWxlLm9uW21vZHVsZUV2ZW50TmFtZV0pO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy8gTW9kdWxlIGNyZWF0ZSBjYWxsYmFja1xuXG5cbiAgICAgIGlmIChtb2R1bGUuY3JlYXRlKSB7XG4gICAgICAgIG1vZHVsZS5jcmVhdGUuYmluZChpbnN0YW5jZSkobW9kdWxlUGFyYW1zKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufTsiLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlcnNjb3JlLWRhbmdsZSAqL1xuZXhwb3J0IGRlZmF1bHQge1xuICBvbjogZnVuY3Rpb24gb24oZXZlbnRzLCBoYW5kbGVyLCBwcmlvcml0eSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHJldHVybiBzZWxmO1xuICAgIHZhciBtZXRob2QgPSBwcmlvcml0eSA/ICd1bnNoaWZ0JyA6ICdwdXNoJztcbiAgICBldmVudHMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKCFzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0pIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgc2VsZi5ldmVudHNMaXN0ZW5lcnNbZXZlbnRdW21ldGhvZF0oaGFuZGxlcik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH0sXG4gIG9uY2U6IGZ1bmN0aW9uIG9uY2UoZXZlbnRzLCBoYW5kbGVyLCBwcmlvcml0eSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHJldHVybiBzZWxmO1xuXG4gICAgZnVuY3Rpb24gb25jZUhhbmRsZXIoKSB7XG4gICAgICBzZWxmLm9mZihldmVudHMsIG9uY2VIYW5kbGVyKTtcblxuICAgICAgaWYgKG9uY2VIYW5kbGVyLl9fZW1pdHRlclByb3h5KSB7XG4gICAgICAgIGRlbGV0ZSBvbmNlSGFuZGxlci5fX2VtaXR0ZXJQcm94eTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIGhhbmRsZXIuYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgfVxuXG4gICAgb25jZUhhbmRsZXIuX19lbWl0dGVyUHJveHkgPSBoYW5kbGVyO1xuICAgIHJldHVybiBzZWxmLm9uKGV2ZW50cywgb25jZUhhbmRsZXIsIHByaW9yaXR5KTtcbiAgfSxcbiAgb25Bbnk6IGZ1bmN0aW9uIG9uQW55KGhhbmRsZXIsIHByaW9yaXR5KSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGlmICh0eXBlb2YgaGFuZGxlciAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHNlbGY7XG4gICAgdmFyIG1ldGhvZCA9IHByaW9yaXR5ID8gJ3Vuc2hpZnQnIDogJ3B1c2gnO1xuXG4gICAgaWYgKHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzLmluZGV4T2YoaGFuZGxlcikgPCAwKSB7XG4gICAgICBzZWxmLmV2ZW50c0FueUxpc3RlbmVyc1ttZXRob2RdKGhhbmRsZXIpO1xuICAgIH1cblxuICAgIHJldHVybiBzZWxmO1xuICB9LFxuICBvZmZBbnk6IGZ1bmN0aW9uIG9mZkFueShoYW5kbGVyKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGlmICghc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgIHZhciBpbmRleCA9IHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzLmluZGV4T2YoaGFuZGxlcik7XG5cbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgc2VsZi5ldmVudHNBbnlMaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZjtcbiAgfSxcbiAgb2ZmOiBmdW5jdGlvbiBvZmYoZXZlbnRzLCBoYW5kbGVyKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgIGV2ZW50cy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgfSBlbHNlIGlmIChzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0pIHtcbiAgICAgICAgc2VsZi5ldmVudHNMaXN0ZW5lcnNbZXZlbnRdLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50SGFuZGxlciwgaW5kZXgpIHtcbiAgICAgICAgICBpZiAoZXZlbnRIYW5kbGVyID09PSBoYW5kbGVyIHx8IGV2ZW50SGFuZGxlci5fX2VtaXR0ZXJQcm94eSAmJiBldmVudEhhbmRsZXIuX19lbWl0dGVyUHJveHkgPT09IGhhbmRsZXIpIHtcbiAgICAgICAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH0sXG4gIGVtaXQ6IGZ1bmN0aW9uIGVtaXQoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgIHZhciBldmVudHM7XG4gICAgdmFyIGRhdGE7XG4gICAgdmFyIGNvbnRleHQ7XG5cbiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnIHx8IEFycmF5LmlzQXJyYXkoYXJnc1swXSkpIHtcbiAgICAgIGV2ZW50cyA9IGFyZ3NbMF07XG4gICAgICBkYXRhID0gYXJncy5zbGljZSgxLCBhcmdzLmxlbmd0aCk7XG4gICAgICBjb250ZXh0ID0gc2VsZjtcbiAgICB9IGVsc2Uge1xuICAgICAgZXZlbnRzID0gYXJnc1swXS5ldmVudHM7XG4gICAgICBkYXRhID0gYXJnc1swXS5kYXRhO1xuICAgICAgY29udGV4dCA9IGFyZ3NbMF0uY29udGV4dCB8fCBzZWxmO1xuICAgIH1cblxuICAgIGRhdGEudW5zaGlmdChjb250ZXh0KTtcbiAgICB2YXIgZXZlbnRzQXJyYXkgPSBBcnJheS5pc0FycmF5KGV2ZW50cykgPyBldmVudHMgOiBldmVudHMuc3BsaXQoJyAnKTtcbiAgICBldmVudHNBcnJheS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzICYmIHNlbGYuZXZlbnRzQW55TGlzdGVuZXJzLmxlbmd0aCkge1xuICAgICAgICBzZWxmLmV2ZW50c0FueUxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChldmVudEhhbmRsZXIpIHtcbiAgICAgICAgICBldmVudEhhbmRsZXIuYXBwbHkoY29udGV4dCwgW2V2ZW50XS5jb25jYXQoZGF0YSkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNlbGYuZXZlbnRzTGlzdGVuZXJzICYmIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0uZm9yRWFjaChmdW5jdGlvbiAoZXZlbnRIYW5kbGVyKSB7XG4gICAgICAgICAgZXZlbnRIYW5kbGVyLmFwcGx5KGNvbnRleHQsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZjtcbiAgfVxufTsiLCJpbXBvcnQgdXBkYXRlU2l6ZSBmcm9tICcuL3VwZGF0ZVNpemUnO1xuaW1wb3J0IHVwZGF0ZVNsaWRlcyBmcm9tICcuL3VwZGF0ZVNsaWRlcyc7XG5pbXBvcnQgdXBkYXRlQXV0b0hlaWdodCBmcm9tICcuL3VwZGF0ZUF1dG9IZWlnaHQnO1xuaW1wb3J0IHVwZGF0ZVNsaWRlc09mZnNldCBmcm9tICcuL3VwZGF0ZVNsaWRlc09mZnNldCc7XG5pbXBvcnQgdXBkYXRlU2xpZGVzUHJvZ3Jlc3MgZnJvbSAnLi91cGRhdGVTbGlkZXNQcm9ncmVzcyc7XG5pbXBvcnQgdXBkYXRlUHJvZ3Jlc3MgZnJvbSAnLi91cGRhdGVQcm9ncmVzcyc7XG5pbXBvcnQgdXBkYXRlU2xpZGVzQ2xhc3NlcyBmcm9tICcuL3VwZGF0ZVNsaWRlc0NsYXNzZXMnO1xuaW1wb3J0IHVwZGF0ZUFjdGl2ZUluZGV4IGZyb20gJy4vdXBkYXRlQWN0aXZlSW5kZXgnO1xuaW1wb3J0IHVwZGF0ZUNsaWNrZWRTbGlkZSBmcm9tICcuL3VwZGF0ZUNsaWNrZWRTbGlkZSc7XG5leHBvcnQgZGVmYXVsdCB7XG4gIHVwZGF0ZVNpemU6IHVwZGF0ZVNpemUsXG4gIHVwZGF0ZVNsaWRlczogdXBkYXRlU2xpZGVzLFxuICB1cGRhdGVBdXRvSGVpZ2h0OiB1cGRhdGVBdXRvSGVpZ2h0LFxuICB1cGRhdGVTbGlkZXNPZmZzZXQ6IHVwZGF0ZVNsaWRlc09mZnNldCxcbiAgdXBkYXRlU2xpZGVzUHJvZ3Jlc3M6IHVwZGF0ZVNsaWRlc1Byb2dyZXNzLFxuICB1cGRhdGVQcm9ncmVzczogdXBkYXRlUHJvZ3Jlc3MsXG4gIHVwZGF0ZVNsaWRlc0NsYXNzZXM6IHVwZGF0ZVNsaWRlc0NsYXNzZXMsXG4gIHVwZGF0ZUFjdGl2ZUluZGV4OiB1cGRhdGVBY3RpdmVJbmRleCxcbiAgdXBkYXRlQ2xpY2tlZFNsaWRlOiB1cGRhdGVDbGlja2VkU2xpZGVcbn07IiwiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlU2l6ZSgpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciB3aWR0aDtcbiAgdmFyIGhlaWdodDtcbiAgdmFyICRlbCA9IHN3aXBlci4kZWw7XG5cbiAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zLndpZHRoICE9PSAndW5kZWZpbmVkJyAmJiBzd2lwZXIucGFyYW1zLndpZHRoICE9PSBudWxsKSB7XG4gICAgd2lkdGggPSBzd2lwZXIucGFyYW1zLndpZHRoO1xuICB9IGVsc2Uge1xuICAgIHdpZHRoID0gJGVsWzBdLmNsaWVudFdpZHRoO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zLmhlaWdodCAhPT0gJ3VuZGVmaW5lZCcgJiYgc3dpcGVyLnBhcmFtcy5oZWlnaHQgIT09IG51bGwpIHtcbiAgICBoZWlnaHQgPSBzd2lwZXIucGFyYW1zLmhlaWdodDtcbiAgfSBlbHNlIHtcbiAgICBoZWlnaHQgPSAkZWxbMF0uY2xpZW50SGVpZ2h0O1xuICB9XG5cbiAgaWYgKHdpZHRoID09PSAwICYmIHN3aXBlci5pc0hvcml6b250YWwoKSB8fCBoZWlnaHQgPT09IDAgJiYgc3dpcGVyLmlzVmVydGljYWwoKSkge1xuICAgIHJldHVybjtcbiAgfSAvLyBTdWJ0cmFjdCBwYWRkaW5nc1xuXG5cbiAgd2lkdGggPSB3aWR0aCAtIHBhcnNlSW50KCRlbC5jc3MoJ3BhZGRpbmctbGVmdCcpIHx8IDAsIDEwKSAtIHBhcnNlSW50KCRlbC5jc3MoJ3BhZGRpbmctcmlnaHQnKSB8fCAwLCAxMCk7XG4gIGhlaWdodCA9IGhlaWdodCAtIHBhcnNlSW50KCRlbC5jc3MoJ3BhZGRpbmctdG9wJykgfHwgMCwgMTApIC0gcGFyc2VJbnQoJGVsLmNzcygncGFkZGluZy1ib3R0b20nKSB8fCAwLCAxMCk7XG4gIGlmIChOdW1iZXIuaXNOYU4od2lkdGgpKSB3aWR0aCA9IDA7XG4gIGlmIChOdW1iZXIuaXNOYU4oaGVpZ2h0KSkgaGVpZ2h0ID0gMDtcbiAgZXh0ZW5kKHN3aXBlciwge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICBzaXplOiBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyB3aWR0aCA6IGhlaWdodFxuICB9KTtcbn0iLCJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcbmltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVwZGF0ZVNsaWRlcygpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gIHZhciAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICBzd2lwZXJTaXplID0gc3dpcGVyLnNpemUsXG4gICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlLFxuICAgICAgd3JvbmdSVEwgPSBzd2lwZXIud3JvbmdSVEw7XG4gIHZhciBpc1ZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCAmJiBwYXJhbXMudmlydHVhbC5lbmFibGVkO1xuICB2YXIgcHJldmlvdXNTbGlkZXNMZW5ndGggPSBpc1ZpcnR1YWwgPyBzd2lwZXIudmlydHVhbC5zbGlkZXMubGVuZ3RoIDogc3dpcGVyLnNsaWRlcy5sZW5ndGg7XG4gIHZhciBzbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgc3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzKTtcbiAgdmFyIHNsaWRlc0xlbmd0aCA9IGlzVmlydHVhbCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzbGlkZXMubGVuZ3RoO1xuICB2YXIgc25hcEdyaWQgPSBbXTtcbiAgdmFyIHNsaWRlc0dyaWQgPSBbXTtcbiAgdmFyIHNsaWRlc1NpemVzR3JpZCA9IFtdO1xuXG4gIGZ1bmN0aW9uIHNsaWRlc0Zvck1hcmdpbihzbGlkZUVsLCBzbGlkZUluZGV4KSB7XG4gICAgaWYgKCFwYXJhbXMuY3NzTW9kZSkgcmV0dXJuIHRydWU7XG5cbiAgICBpZiAoc2xpZGVJbmRleCA9PT0gc2xpZGVzLmxlbmd0aCAtIDEpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHZhciBvZmZzZXRCZWZvcmUgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QmVmb3JlO1xuXG4gIGlmICh0eXBlb2Ygb2Zmc2V0QmVmb3JlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb2Zmc2V0QmVmb3JlID0gcGFyYW1zLnNsaWRlc09mZnNldEJlZm9yZS5jYWxsKHN3aXBlcik7XG4gIH1cblxuICB2YXIgb2Zmc2V0QWZ0ZXIgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QWZ0ZXI7XG5cbiAgaWYgKHR5cGVvZiBvZmZzZXRBZnRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9mZnNldEFmdGVyID0gcGFyYW1zLnNsaWRlc09mZnNldEFmdGVyLmNhbGwoc3dpcGVyKTtcbiAgfVxuXG4gIHZhciBwcmV2aW91c1NuYXBHcmlkTGVuZ3RoID0gc3dpcGVyLnNuYXBHcmlkLmxlbmd0aDtcbiAgdmFyIHByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCA9IHN3aXBlci5zbGlkZXNHcmlkLmxlbmd0aDtcbiAgdmFyIHNwYWNlQmV0d2VlbiA9IHBhcmFtcy5zcGFjZUJldHdlZW47XG4gIHZhciBzbGlkZVBvc2l0aW9uID0gLW9mZnNldEJlZm9yZTtcbiAgdmFyIHByZXZTbGlkZVNpemUgPSAwO1xuICB2YXIgaW5kZXggPSAwO1xuXG4gIGlmICh0eXBlb2Ygc3dpcGVyU2l6ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodHlwZW9mIHNwYWNlQmV0d2VlbiA9PT0gJ3N0cmluZycgJiYgc3BhY2VCZXR3ZWVuLmluZGV4T2YoJyUnKSA+PSAwKSB7XG4gICAgc3BhY2VCZXR3ZWVuID0gcGFyc2VGbG9hdChzcGFjZUJldHdlZW4ucmVwbGFjZSgnJScsICcnKSkgLyAxMDAgKiBzd2lwZXJTaXplO1xuICB9XG5cbiAgc3dpcGVyLnZpcnR1YWxTaXplID0gLXNwYWNlQmV0d2VlbjsgLy8gcmVzZXQgbWFyZ2luc1xuXG4gIGlmIChydGwpIHNsaWRlcy5jc3Moe1xuICAgIG1hcmdpbkxlZnQ6ICcnLFxuICAgIG1hcmdpblRvcDogJydcbiAgfSk7ZWxzZSBzbGlkZXMuY3NzKHtcbiAgICBtYXJnaW5SaWdodDogJycsXG4gICAgbWFyZ2luQm90dG9tOiAnJ1xuICB9KTtcbiAgdmFyIHNsaWRlc051bWJlckV2ZW5Ub1Jvd3M7XG5cbiAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgaWYgKE1hdGguZmxvb3Ioc2xpZGVzTGVuZ3RoIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbikgPT09IHNsaWRlc0xlbmd0aCAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uKSB7XG4gICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gc2xpZGVzTGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gTWF0aC5jZWlsKHNsaWRlc0xlbmd0aCAvIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pICogcGFyYW1zLnNsaWRlc1BlckNvbHVtbjtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnNsaWRlc1BlclZpZXcgIT09ICdhdXRvJyAmJiBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ3JvdycpIHtcbiAgICAgIHNsaWRlc051bWJlckV2ZW5Ub1Jvd3MgPSBNYXRoLm1heChzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzLCBwYXJhbXMuc2xpZGVzUGVyVmlldyAqIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pO1xuICAgIH1cbiAgfSAvLyBDYWxjIHNsaWRlc1xuXG5cbiAgdmFyIHNsaWRlU2l6ZTtcbiAgdmFyIHNsaWRlc1BlckNvbHVtbiA9IHBhcmFtcy5zbGlkZXNQZXJDb2x1bW47XG4gIHZhciBzbGlkZXNQZXJSb3cgPSBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIC8gc2xpZGVzUGVyQ29sdW1uO1xuICB2YXIgbnVtRnVsbENvbHVtbnMgPSBNYXRoLmZsb29yKHNsaWRlc0xlbmd0aCAvIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVzTGVuZ3RoOyBpICs9IDEpIHtcbiAgICBzbGlkZVNpemUgPSAwO1xuICAgIHZhciBzbGlkZSA9IHNsaWRlcy5lcShpKTtcblxuICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMSkge1xuICAgICAgLy8gU2V0IHNsaWRlcyBvcmRlclxuICAgICAgdmFyIG5ld1NsaWRlT3JkZXJJbmRleCA9IHZvaWQgMDtcbiAgICAgIHZhciBjb2x1bW4gPSB2b2lkIDA7XG4gICAgICB2YXIgcm93ID0gdm9pZCAwO1xuXG4gICAgICBpZiAocGFyYW1zLnNsaWRlc1BlckNvbHVtbkZpbGwgPT09ICdyb3cnICYmIHBhcmFtcy5zbGlkZXNQZXJHcm91cCA+IDEpIHtcbiAgICAgICAgdmFyIGdyb3VwSW5kZXggPSBNYXRoLmZsb29yKGkgLyAocGFyYW1zLnNsaWRlc1Blckdyb3VwICogcGFyYW1zLnNsaWRlc1BlckNvbHVtbikpO1xuICAgICAgICB2YXIgc2xpZGVJbmRleEluR3JvdXAgPSBpIC0gcGFyYW1zLnNsaWRlc1BlckNvbHVtbiAqIHBhcmFtcy5zbGlkZXNQZXJHcm91cCAqIGdyb3VwSW5kZXg7XG4gICAgICAgIHZhciBjb2x1bW5zSW5Hcm91cCA9IGdyb3VwSW5kZXggPT09IDAgPyBwYXJhbXMuc2xpZGVzUGVyR3JvdXAgOiBNYXRoLm1pbihNYXRoLmNlaWwoKHNsaWRlc0xlbmd0aCAtIGdyb3VwSW5kZXggKiBzbGlkZXNQZXJDb2x1bW4gKiBwYXJhbXMuc2xpZGVzUGVyR3JvdXApIC8gc2xpZGVzUGVyQ29sdW1uKSwgcGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgICAgICAgcm93ID0gTWF0aC5mbG9vcihzbGlkZUluZGV4SW5Hcm91cCAvIGNvbHVtbnNJbkdyb3VwKTtcbiAgICAgICAgY29sdW1uID0gc2xpZGVJbmRleEluR3JvdXAgLSByb3cgKiBjb2x1bW5zSW5Hcm91cCArIGdyb3VwSW5kZXggKiBwYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgICAgIG5ld1NsaWRlT3JkZXJJbmRleCA9IGNvbHVtbiArIHJvdyAqIHNsaWRlc051bWJlckV2ZW5Ub1Jvd3MgLyBzbGlkZXNQZXJDb2x1bW47XG4gICAgICAgIHNsaWRlLmNzcyh7XG4gICAgICAgICAgJy13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAnOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgJy1tb3otYm94LW9yZGluYWwtZ3JvdXAnOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgJy1tcy1mbGV4LW9yZGVyJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgICctd2Via2l0LW9yZGVyJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgIG9yZGVyOiBuZXdTbGlkZU9yZGVySW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAnY29sdW1uJykge1xuICAgICAgICBjb2x1bW4gPSBNYXRoLmZsb29yKGkgLyBzbGlkZXNQZXJDb2x1bW4pO1xuICAgICAgICByb3cgPSBpIC0gY29sdW1uICogc2xpZGVzUGVyQ29sdW1uO1xuXG4gICAgICAgIGlmIChjb2x1bW4gPiBudW1GdWxsQ29sdW1ucyB8fCBjb2x1bW4gPT09IG51bUZ1bGxDb2x1bW5zICYmIHJvdyA9PT0gc2xpZGVzUGVyQ29sdW1uIC0gMSkge1xuICAgICAgICAgIHJvdyArPSAxO1xuXG4gICAgICAgICAgaWYgKHJvdyA+PSBzbGlkZXNQZXJDb2x1bW4pIHtcbiAgICAgICAgICAgIHJvdyA9IDA7XG4gICAgICAgICAgICBjb2x1bW4gKz0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJvdyA9IE1hdGguZmxvb3IoaSAvIHNsaWRlc1BlclJvdyk7XG4gICAgICAgIGNvbHVtbiA9IGkgLSByb3cgKiBzbGlkZXNQZXJSb3c7XG4gICAgICB9XG5cbiAgICAgIHNsaWRlLmNzcyhcIm1hcmdpbi1cIiArIChzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAndG9wJyA6ICdsZWZ0JyksIHJvdyAhPT0gMCAmJiBwYXJhbXMuc3BhY2VCZXR3ZWVuICYmIHBhcmFtcy5zcGFjZUJldHdlZW4gKyBcInB4XCIpO1xuICAgIH1cblxuICAgIGlmIChzbGlkZS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ25vbmUnKSBjb250aW51ZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycpIHtcbiAgICAgIHZhciBzbGlkZVN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHNsaWRlWzBdLCBudWxsKTtcbiAgICAgIHZhciBjdXJyZW50VHJhbnNmb3JtID0gc2xpZGVbMF0uc3R5bGUudHJhbnNmb3JtO1xuICAgICAgdmFyIGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0gPSBzbGlkZVswXS5zdHlsZS53ZWJraXRUcmFuc2Zvcm07XG5cbiAgICAgIGlmIChjdXJyZW50VHJhbnNmb3JtKSB7XG4gICAgICAgIHNsaWRlWzBdLnN0eWxlLnRyYW5zZm9ybSA9ICdub25lJztcbiAgICAgIH1cblxuICAgICAgaWYgKGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0pIHtcbiAgICAgICAgc2xpZGVbMF0uc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ25vbmUnO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykge1xuICAgICAgICBzbGlkZVNpemUgPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyBzbGlkZS5vdXRlcldpZHRoKHRydWUpIDogc2xpZGUub3V0ZXJIZWlnaHQodHJ1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgIHZhciB3aWR0aCA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnd2lkdGgnKSB8fCAwKTtcbiAgICAgICAgICB2YXIgcGFkZGluZ0xlZnQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctbGVmdCcpIHx8IDApO1xuICAgICAgICAgIHZhciBwYWRkaW5nUmlnaHQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctcmlnaHQnKSB8fCAwKTtcbiAgICAgICAgICB2YXIgbWFyZ2luTGVmdCA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLWxlZnQnKSB8fCAwKTtcbiAgICAgICAgICB2YXIgbWFyZ2luUmlnaHQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1yaWdodCcpIHx8IDApO1xuICAgICAgICAgIHZhciBib3hTaXppbmcgPSBzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdib3gtc2l6aW5nJyk7XG5cbiAgICAgICAgICBpZiAoYm94U2l6aW5nICYmIGJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnKSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgPSB3aWR0aCArIG1hcmdpbkxlZnQgKyBtYXJnaW5SaWdodDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIF9zbGlkZSQgPSBzbGlkZVswXSxcbiAgICAgICAgICAgICAgICBjbGllbnRXaWR0aCA9IF9zbGlkZSQuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICAgICAgb2Zmc2V0V2lkdGggPSBfc2xpZGUkLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgc2xpZGVTaXplID0gd2lkdGggKyBwYWRkaW5nTGVmdCArIHBhZGRpbmdSaWdodCArIG1hcmdpbkxlZnQgKyBtYXJnaW5SaWdodCArIChvZmZzZXRXaWR0aCAtIGNsaWVudFdpZHRoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGhlaWdodCA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnaGVpZ2h0JykgfHwgMCk7XG4gICAgICAgICAgdmFyIHBhZGRpbmdUb3AgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctdG9wJykgfHwgMCk7XG4gICAgICAgICAgdmFyIHBhZGRpbmdCb3R0b20gPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctYm90dG9tJykgfHwgMCk7XG4gICAgICAgICAgdmFyIG1hcmdpblRvcCA9IHBhcnNlRmxvYXQoc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLXRvcCcpIHx8IDApO1xuICAgICAgICAgIHZhciBtYXJnaW5Cb3R0b20gPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1ib3R0b20nKSB8fCAwKTtcblxuICAgICAgICAgIHZhciBfYm94U2l6aW5nID0gc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnYm94LXNpemluZycpO1xuXG4gICAgICAgICAgaWYgKF9ib3hTaXppbmcgJiYgX2JveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnKSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgPSBoZWlnaHQgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b207XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBfc2xpZGUkMiA9IHNsaWRlWzBdLFxuICAgICAgICAgICAgICAgIGNsaWVudEhlaWdodCA9IF9zbGlkZSQyLmNsaWVudEhlaWdodCxcbiAgICAgICAgICAgICAgICBvZmZzZXRIZWlnaHQgPSBfc2xpZGUkMi5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICBzbGlkZVNpemUgPSBoZWlnaHQgKyBwYWRkaW5nVG9wICsgcGFkZGluZ0JvdHRvbSArIG1hcmdpblRvcCArIG1hcmdpbkJvdHRvbSArIChvZmZzZXRIZWlnaHQgLSBjbGllbnRIZWlnaHQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudFRyYW5zZm9ybSkge1xuICAgICAgICBzbGlkZVswXS5zdHlsZS50cmFuc2Zvcm0gPSBjdXJyZW50VHJhbnNmb3JtO1xuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudFdlYktpdFRyYW5zZm9ybSkge1xuICAgICAgICBzbGlkZVswXS5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSBjdXJyZW50V2ViS2l0VHJhbnNmb3JtO1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVTaXplID0gTWF0aC5mbG9vcihzbGlkZVNpemUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzbGlkZVNpemUgPSAoc3dpcGVyU2l6ZSAtIChwYXJhbXMuc2xpZGVzUGVyVmlldyAtIDEpICogc3BhY2VCZXR3ZWVuKSAvIHBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgICAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHNsaWRlU2l6ZSA9IE1hdGguZmxvb3Ioc2xpZGVTaXplKTtcblxuICAgICAgaWYgKHNsaWRlc1tpXSkge1xuICAgICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgc2xpZGVzW2ldLnN0eWxlLndpZHRoID0gc2xpZGVTaXplICsgXCJweFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNsaWRlc1tpXS5zdHlsZS5oZWlnaHQgPSBzbGlkZVNpemUgKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc2xpZGVzW2ldKSB7XG4gICAgICBzbGlkZXNbaV0uc3dpcGVyU2xpZGVTaXplID0gc2xpZGVTaXplO1xuICAgIH1cblxuICAgIHNsaWRlc1NpemVzR3JpZC5wdXNoKHNsaWRlU2l6ZSk7XG5cbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiArIHNsaWRlU2l6ZSAvIDIgKyBwcmV2U2xpZGVTaXplIC8gMiArIHNwYWNlQmV0d2VlbjtcbiAgICAgIGlmIChwcmV2U2xpZGVTaXplID09PSAwICYmIGkgIT09IDApIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uIC0gc3dpcGVyU2l6ZSAvIDIgLSBzcGFjZUJldHdlZW47XG4gICAgICBpZiAoaSA9PT0gMCkgc2xpZGVQb3NpdGlvbiA9IHNsaWRlUG9zaXRpb24gLSBzd2lwZXJTaXplIC8gMiAtIHNwYWNlQmV0d2VlbjtcbiAgICAgIGlmIChNYXRoLmFicyhzbGlkZVBvc2l0aW9uKSA8IDEgLyAxMDAwKSBzbGlkZVBvc2l0aW9uID0gMDtcbiAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZVBvc2l0aW9uID0gTWF0aC5mbG9vcihzbGlkZVBvc2l0aW9uKTtcbiAgICAgIGlmIChpbmRleCAlIHBhcmFtcy5zbGlkZXNQZXJHcm91cCA9PT0gMCkgc25hcEdyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHNsaWRlUG9zaXRpb24gPSBNYXRoLmZsb29yKHNsaWRlUG9zaXRpb24pO1xuICAgICAgaWYgKChpbmRleCAtIE1hdGgubWluKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBpbmRleCkpICUgc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCA9PT0gMCkgc25hcEdyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uICsgc2xpZGVTaXplICsgc3BhY2VCZXR3ZWVuO1xuICAgIH1cblxuICAgIHN3aXBlci52aXJ0dWFsU2l6ZSArPSBzbGlkZVNpemUgKyBzcGFjZUJldHdlZW47XG4gICAgcHJldlNsaWRlU2l6ZSA9IHNsaWRlU2l6ZTtcbiAgICBpbmRleCArPSAxO1xuICB9XG5cbiAgc3dpcGVyLnZpcnR1YWxTaXplID0gTWF0aC5tYXgoc3dpcGVyLnZpcnR1YWxTaXplLCBzd2lwZXJTaXplKSArIG9mZnNldEFmdGVyO1xuICB2YXIgbmV3U2xpZGVzR3JpZDtcblxuICBpZiAocnRsICYmIHdyb25nUlRMICYmIChwYXJhbXMuZWZmZWN0ID09PSAnc2xpZGUnIHx8IHBhcmFtcy5lZmZlY3QgPT09ICdjb3ZlcmZsb3cnKSkge1xuICAgICR3cmFwcGVyRWwuY3NzKHtcbiAgICAgIHdpZHRoOiBzd2lwZXIudmlydHVhbFNpemUgKyBwYXJhbXMuc3BhY2VCZXR3ZWVuICsgXCJweFwiXG4gICAgfSk7XG4gIH1cblxuICBpZiAocGFyYW1zLnNldFdyYXBwZXJTaXplKSB7XG4gICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkgJHdyYXBwZXJFbC5jc3Moe1xuICAgICAgd2lkdGg6IHN3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICB9KTtlbHNlICR3cmFwcGVyRWwuY3NzKHtcbiAgICAgIGhlaWdodDogc3dpcGVyLnZpcnR1YWxTaXplICsgcGFyYW1zLnNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgc3dpcGVyLnZpcnR1YWxTaXplID0gKHNsaWRlU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4pICogc2xpZGVzTnVtYmVyRXZlblRvUm93cztcbiAgICBzd2lwZXIudmlydHVhbFNpemUgPSBNYXRoLmNlaWwoc3dpcGVyLnZpcnR1YWxTaXplIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbikgLSBwYXJhbXMuc3BhY2VCZXR3ZWVuO1xuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpICR3cmFwcGVyRWwuY3NzKHtcbiAgICAgIHdpZHRoOiBzd2lwZXIudmlydHVhbFNpemUgKyBwYXJhbXMuc3BhY2VCZXR3ZWVuICsgXCJweFwiXG4gICAgfSk7ZWxzZSAkd3JhcHBlckVsLmNzcyh7XG4gICAgICBoZWlnaHQ6IHN3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICB9KTtcblxuICAgIGlmIChwYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgIG5ld1NsaWRlc0dyaWQgPSBbXTtcblxuICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHNuYXBHcmlkLmxlbmd0aDsgX2kgKz0gMSkge1xuICAgICAgICB2YXIgc2xpZGVzR3JpZEl0ZW0gPSBzbmFwR3JpZFtfaV07XG4gICAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZXNHcmlkSXRlbSA9IE1hdGguZmxvb3Ioc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgICBpZiAoc25hcEdyaWRbX2ldIDwgc3dpcGVyLnZpcnR1YWxTaXplICsgc25hcEdyaWRbMF0pIG5ld1NsaWRlc0dyaWQucHVzaChzbGlkZXNHcmlkSXRlbSk7XG4gICAgICB9XG5cbiAgICAgIHNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcbiAgICB9XG4gIH0gLy8gUmVtb3ZlIGxhc3QgZ3JpZCBlbGVtZW50cyBkZXBlbmRpbmcgb24gd2lkdGhcblxuXG4gIGlmICghcGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgbmV3U2xpZGVzR3JpZCA9IFtdO1xuXG4gICAgZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgc25hcEdyaWQubGVuZ3RoOyBfaTIgKz0gMSkge1xuICAgICAgdmFyIF9zbGlkZXNHcmlkSXRlbSA9IHNuYXBHcmlkW19pMl07XG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3RocykgX3NsaWRlc0dyaWRJdGVtID0gTWF0aC5mbG9vcihfc2xpZGVzR3JpZEl0ZW0pO1xuXG4gICAgICBpZiAoc25hcEdyaWRbX2kyXSA8PSBzd2lwZXIudmlydHVhbFNpemUgLSBzd2lwZXJTaXplKSB7XG4gICAgICAgIG5ld1NsaWRlc0dyaWQucHVzaChfc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcblxuICAgIGlmIChNYXRoLmZsb29yKHN3aXBlci52aXJ0dWFsU2l6ZSAtIHN3aXBlclNpemUpIC0gTWF0aC5mbG9vcihzbmFwR3JpZFtzbmFwR3JpZC5sZW5ndGggLSAxXSkgPiAxKSB7XG4gICAgICBzbmFwR3JpZC5wdXNoKHN3aXBlci52aXJ0dWFsU2l6ZSAtIHN3aXBlclNpemUpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzbmFwR3JpZC5sZW5ndGggPT09IDApIHNuYXBHcmlkID0gWzBdO1xuXG4gIGlmIChwYXJhbXMuc3BhY2VCZXR3ZWVuICE9PSAwKSB7XG4gICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgaWYgKHJ0bCkgc2xpZGVzLmZpbHRlcihzbGlkZXNGb3JNYXJnaW4pLmNzcyh7XG4gICAgICAgIG1hcmdpbkxlZnQ6IHNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgfSk7ZWxzZSBzbGlkZXMuZmlsdGVyKHNsaWRlc0Zvck1hcmdpbikuY3NzKHtcbiAgICAgICAgbWFyZ2luUmlnaHQ6IHNwYWNlQmV0d2VlbiArIFwicHhcIlxuICAgICAgfSk7XG4gICAgfSBlbHNlIHNsaWRlcy5maWx0ZXIoc2xpZGVzRm9yTWFyZ2luKS5jc3Moe1xuICAgICAgbWFyZ2luQm90dG9tOiBzcGFjZUJldHdlZW4gKyBcInB4XCJcbiAgICB9KTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuY2VudGVyZWRTbGlkZXMgJiYgcGFyYW1zLmNlbnRlcmVkU2xpZGVzQm91bmRzKSB7XG4gICAgdmFyIGFsbFNsaWRlc1NpemUgPSAwO1xuICAgIHNsaWRlc1NpemVzR3JpZC5mb3JFYWNoKGZ1bmN0aW9uIChzbGlkZVNpemVWYWx1ZSkge1xuICAgICAgYWxsU2xpZGVzU2l6ZSArPSBzbGlkZVNpemVWYWx1ZSArIChwYXJhbXMuc3BhY2VCZXR3ZWVuID8gcGFyYW1zLnNwYWNlQmV0d2VlbiA6IDApO1xuICAgIH0pO1xuICAgIGFsbFNsaWRlc1NpemUgLT0gcGFyYW1zLnNwYWNlQmV0d2VlbjtcbiAgICB2YXIgbWF4U25hcCA9IGFsbFNsaWRlc1NpemUgLSBzd2lwZXJTaXplO1xuICAgIHNuYXBHcmlkID0gc25hcEdyaWQubWFwKGZ1bmN0aW9uIChzbmFwKSB7XG4gICAgICBpZiAoc25hcCA8IDApIHJldHVybiAtb2Zmc2V0QmVmb3JlO1xuICAgICAgaWYgKHNuYXAgPiBtYXhTbmFwKSByZXR1cm4gbWF4U25hcCArIG9mZnNldEFmdGVyO1xuICAgICAgcmV0dXJuIHNuYXA7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocGFyYW1zLmNlbnRlckluc3VmZmljaWVudFNsaWRlcykge1xuICAgIHZhciBfYWxsU2xpZGVzU2l6ZSA9IDA7XG4gICAgc2xpZGVzU2l6ZXNHcmlkLmZvckVhY2goZnVuY3Rpb24gKHNsaWRlU2l6ZVZhbHVlKSB7XG4gICAgICBfYWxsU2xpZGVzU2l6ZSArPSBzbGlkZVNpemVWYWx1ZSArIChwYXJhbXMuc3BhY2VCZXR3ZWVuID8gcGFyYW1zLnNwYWNlQmV0d2VlbiA6IDApO1xuICAgIH0pO1xuICAgIF9hbGxTbGlkZXNTaXplIC09IHBhcmFtcy5zcGFjZUJldHdlZW47XG5cbiAgICBpZiAoX2FsbFNsaWRlc1NpemUgPCBzd2lwZXJTaXplKSB7XG4gICAgICB2YXIgYWxsU2xpZGVzT2Zmc2V0ID0gKHN3aXBlclNpemUgLSBfYWxsU2xpZGVzU2l6ZSkgLyAyO1xuICAgICAgc25hcEdyaWQuZm9yRWFjaChmdW5jdGlvbiAoc25hcCwgc25hcEluZGV4KSB7XG4gICAgICAgIHNuYXBHcmlkW3NuYXBJbmRleF0gPSBzbmFwIC0gYWxsU2xpZGVzT2Zmc2V0O1xuICAgICAgfSk7XG4gICAgICBzbGlkZXNHcmlkLmZvckVhY2goZnVuY3Rpb24gKHNuYXAsIHNuYXBJbmRleCkge1xuICAgICAgICBzbGlkZXNHcmlkW3NuYXBJbmRleF0gPSBzbmFwICsgYWxsU2xpZGVzT2Zmc2V0O1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZXh0ZW5kKHN3aXBlciwge1xuICAgIHNsaWRlczogc2xpZGVzLFxuICAgIHNuYXBHcmlkOiBzbmFwR3JpZCxcbiAgICBzbGlkZXNHcmlkOiBzbGlkZXNHcmlkLFxuICAgIHNsaWRlc1NpemVzR3JpZDogc2xpZGVzU2l6ZXNHcmlkXG4gIH0pO1xuXG4gIGlmIChzbGlkZXNMZW5ndGggIT09IHByZXZpb3VzU2xpZGVzTGVuZ3RoKSB7XG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlc0xlbmd0aENoYW5nZScpO1xuICB9XG5cbiAgaWYgKHNuYXBHcmlkLmxlbmd0aCAhPT0gcHJldmlvdXNTbmFwR3JpZExlbmd0aCkge1xuICAgIGlmIChzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cpIHN3aXBlci5jaGVja092ZXJmbG93KCk7XG4gICAgc3dpcGVyLmVtaXQoJ3NuYXBHcmlkTGVuZ3RoQ2hhbmdlJyk7XG4gIH1cblxuICBpZiAoc2xpZGVzR3JpZC5sZW5ndGggIT09IHByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCkge1xuICAgIHN3aXBlci5lbWl0KCdzbGlkZXNHcmlkTGVuZ3RoQ2hhbmdlJyk7XG4gIH1cblxuICBpZiAocGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MgfHwgcGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkge1xuICAgIHN3aXBlci51cGRhdGVTbGlkZXNPZmZzZXQoKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVwZGF0ZUF1dG9IZWlnaHQoc3BlZWQpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBhY3RpdmVTbGlkZXMgPSBbXTtcbiAgdmFyIG5ld0hlaWdodCA9IDA7XG4gIHZhciBpO1xuXG4gIGlmICh0eXBlb2Ygc3BlZWQgPT09ICdudW1iZXInKSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3BlZWQpO1xuICB9IGVsc2UgaWYgKHNwZWVkID09PSB0cnVlKSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3dpcGVyLnBhcmFtcy5zcGVlZCk7XG4gIH0gLy8gRmluZCBzbGlkZXMgY3VycmVudGx5IGluIHZpZXdcblxuXG4gIGlmIChzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgIT09ICdhdXRvJyAmJiBzd2lwZXIucGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxKSB7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzLmVhY2goZnVuY3Rpb24gKHNsaWRlKSB7XG4gICAgICAgIGFjdGl2ZVNsaWRlcy5wdXNoKHNsaWRlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgTWF0aC5jZWlsKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyk7IGkgKz0gMSkge1xuICAgICAgICB2YXIgaW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXggKyBpO1xuICAgICAgICBpZiAoaW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCkgYnJlYWs7XG4gICAgICAgIGFjdGl2ZVNsaWRlcy5wdXNoKHN3aXBlci5zbGlkZXMuZXEoaW5kZXgpWzBdKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYWN0aXZlU2xpZGVzLnB1c2goc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpWzBdKTtcbiAgfSAvLyBGaW5kIG5ldyBoZWlnaHQgZnJvbSBoaWdoZXN0IHNsaWRlIGluIHZpZXdcblxuXG4gIGZvciAoaSA9IDA7IGkgPCBhY3RpdmVTbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodHlwZW9mIGFjdGl2ZVNsaWRlc1tpXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBoZWlnaHQgPSBhY3RpdmVTbGlkZXNbaV0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgbmV3SGVpZ2h0ID0gaGVpZ2h0ID4gbmV3SGVpZ2h0ID8gaGVpZ2h0IDogbmV3SGVpZ2h0O1xuICAgIH1cbiAgfSAvLyBVcGRhdGUgSGVpZ2h0XG5cblxuICBpZiAobmV3SGVpZ2h0KSBzd2lwZXIuJHdyYXBwZXJFbC5jc3MoJ2hlaWdodCcsIG5ld0hlaWdodCArIFwicHhcIik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlU2xpZGVzT2Zmc2V0KCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXM7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBzbGlkZXNbaV0uc3dpcGVyU2xpZGVPZmZzZXQgPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyBzbGlkZXNbaV0ub2Zmc2V0TGVmdCA6IHNsaWRlc1tpXS5vZmZzZXRUb3A7XG4gIH1cbn0iLCJpbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlU2xpZGVzUHJvZ3Jlc3ModHJhbnNsYXRlKSB7XG4gIGlmICh0cmFuc2xhdGUgPT09IHZvaWQgMCkge1xuICAgIHRyYW5zbGF0ZSA9IHRoaXMgJiYgdGhpcy50cmFuc2xhdGUgfHwgMDtcbiAgfVxuXG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcbiAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlO1xuICBpZiAoc2xpZGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICBpZiAodHlwZW9mIHNsaWRlc1swXS5zd2lwZXJTbGlkZU9mZnNldCA9PT0gJ3VuZGVmaW5lZCcpIHN3aXBlci51cGRhdGVTbGlkZXNPZmZzZXQoKTtcbiAgdmFyIG9mZnNldENlbnRlciA9IC10cmFuc2xhdGU7XG4gIGlmIChydGwpIG9mZnNldENlbnRlciA9IHRyYW5zbGF0ZTsgLy8gVmlzaWJsZSBTbGlkZXNcblxuICBzbGlkZXMucmVtb3ZlQ2xhc3MocGFyYW1zLnNsaWRlVmlzaWJsZUNsYXNzKTtcbiAgc3dpcGVyLnZpc2libGVTbGlkZXNJbmRleGVzID0gW107XG4gIHN3aXBlci52aXNpYmxlU2xpZGVzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgc2xpZGUgPSBzbGlkZXNbaV07XG4gICAgdmFyIHNsaWRlUHJvZ3Jlc3MgPSAob2Zmc2V0Q2VudGVyICsgKHBhcmFtcy5jZW50ZXJlZFNsaWRlcyA/IHN3aXBlci5taW5UcmFuc2xhdGUoKSA6IDApIC0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXQpIC8gKHNsaWRlLnN3aXBlclNsaWRlU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4pO1xuXG4gICAgaWYgKHBhcmFtcy53YXRjaFNsaWRlc1Zpc2liaWxpdHkgfHwgcGFyYW1zLmNlbnRlcmVkU2xpZGVzICYmIHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICB2YXIgc2xpZGVCZWZvcmUgPSAtKG9mZnNldENlbnRlciAtIHNsaWRlLnN3aXBlclNsaWRlT2Zmc2V0KTtcbiAgICAgIHZhciBzbGlkZUFmdGVyID0gc2xpZGVCZWZvcmUgKyBzd2lwZXIuc2xpZGVzU2l6ZXNHcmlkW2ldO1xuICAgICAgdmFyIGlzVmlzaWJsZSA9IHNsaWRlQmVmb3JlID49IDAgJiYgc2xpZGVCZWZvcmUgPCBzd2lwZXIuc2l6ZSAtIDEgfHwgc2xpZGVBZnRlciA+IDEgJiYgc2xpZGVBZnRlciA8PSBzd2lwZXIuc2l6ZSB8fCBzbGlkZUJlZm9yZSA8PSAwICYmIHNsaWRlQWZ0ZXIgPj0gc3dpcGVyLnNpemU7XG5cbiAgICAgIGlmIChpc1Zpc2libGUpIHtcbiAgICAgICAgc3dpcGVyLnZpc2libGVTbGlkZXMucHVzaChzbGlkZSk7XG4gICAgICAgIHN3aXBlci52aXNpYmxlU2xpZGVzSW5kZXhlcy5wdXNoKGkpO1xuICAgICAgICBzbGlkZXMuZXEoaSkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlVmlzaWJsZUNsYXNzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzbGlkZS5wcm9ncmVzcyA9IHJ0bCA/IC1zbGlkZVByb2dyZXNzIDogc2xpZGVQcm9ncmVzcztcbiAgfVxuXG4gIHN3aXBlci52aXNpYmxlU2xpZGVzID0gJChzd2lwZXIudmlzaWJsZVNsaWRlcyk7XG59IiwiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlUHJvZ3Jlc3ModHJhbnNsYXRlKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuXG4gIGlmICh0eXBlb2YgdHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBtdWx0aXBsaWVyID0gc3dpcGVyLnJ0bFRyYW5zbGF0ZSA/IC0xIDogMTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICB0cmFuc2xhdGUgPSBzd2lwZXIgJiYgc3dpcGVyLnRyYW5zbGF0ZSAmJiBzd2lwZXIudHJhbnNsYXRlICogbXVsdGlwbGllciB8fCAwO1xuICB9XG5cbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gIHZhciB0cmFuc2xhdGVzRGlmZiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKTtcbiAgdmFyIHByb2dyZXNzID0gc3dpcGVyLnByb2dyZXNzLFxuICAgICAgaXNCZWdpbm5pbmcgPSBzd2lwZXIuaXNCZWdpbm5pbmcsXG4gICAgICBpc0VuZCA9IHN3aXBlci5pc0VuZDtcbiAgdmFyIHdhc0JlZ2lubmluZyA9IGlzQmVnaW5uaW5nO1xuICB2YXIgd2FzRW5kID0gaXNFbmQ7XG5cbiAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgcHJvZ3Jlc3MgPSAwO1xuICAgIGlzQmVnaW5uaW5nID0gdHJ1ZTtcbiAgICBpc0VuZCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcHJvZ3Jlc3MgPSAodHJhbnNsYXRlIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSAvIHRyYW5zbGF0ZXNEaWZmO1xuICAgIGlzQmVnaW5uaW5nID0gcHJvZ3Jlc3MgPD0gMDtcbiAgICBpc0VuZCA9IHByb2dyZXNzID49IDE7XG4gIH1cblxuICBleHRlbmQoc3dpcGVyLCB7XG4gICAgcHJvZ3Jlc3M6IHByb2dyZXNzLFxuICAgIGlzQmVnaW5uaW5nOiBpc0JlZ2lubmluZyxcbiAgICBpc0VuZDogaXNFbmRcbiAgfSk7XG4gIGlmIChwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyB8fCBwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5IHx8IHBhcmFtcy5jZW50ZXJlZFNsaWRlcyAmJiBwYXJhbXMuYXV0b0hlaWdodCkgc3dpcGVyLnVwZGF0ZVNsaWRlc1Byb2dyZXNzKHRyYW5zbGF0ZSk7XG5cbiAgaWYgKGlzQmVnaW5uaW5nICYmICF3YXNCZWdpbm5pbmcpIHtcbiAgICBzd2lwZXIuZW1pdCgncmVhY2hCZWdpbm5pbmcgdG9FZGdlJyk7XG4gIH1cblxuICBpZiAoaXNFbmQgJiYgIXdhc0VuZCkge1xuICAgIHN3aXBlci5lbWl0KCdyZWFjaEVuZCB0b0VkZ2UnKTtcbiAgfVxuXG4gIGlmICh3YXNCZWdpbm5pbmcgJiYgIWlzQmVnaW5uaW5nIHx8IHdhc0VuZCAmJiAhaXNFbmQpIHtcbiAgICBzd2lwZXIuZW1pdCgnZnJvbUVkZ2UnKTtcbiAgfVxuXG4gIHN3aXBlci5lbWl0KCdwcm9ncmVzcycsIHByb2dyZXNzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1cGRhdGVTbGlkZXNDbGFzc2VzKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHNsaWRlcyA9IHN3aXBlci5zbGlkZXMsXG4gICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXgsXG4gICAgICByZWFsSW5kZXggPSBzd2lwZXIucmVhbEluZGV4O1xuICB2YXIgaXNWaXJ0dWFsID0gc3dpcGVyLnZpcnR1YWwgJiYgcGFyYW1zLnZpcnR1YWwuZW5hYmxlZDtcbiAgc2xpZGVzLnJlbW92ZUNsYXNzKHBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzICsgXCIgXCIgKyBwYXJhbXMuc2xpZGVOZXh0Q2xhc3MgKyBcIiBcIiArIHBhcmFtcy5zbGlkZVByZXZDbGFzcyArIFwiIFwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MgKyBcIiBcIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyArIFwiIFwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlUHJldkNsYXNzKTtcbiAgdmFyIGFjdGl2ZVNsaWRlO1xuXG4gIGlmIChpc1ZpcnR1YWwpIHtcbiAgICBhY3RpdmVTbGlkZSA9IHN3aXBlci4kd3JhcHBlckVsLmZpbmQoXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIGFjdGl2ZUluZGV4ICsgXCJcXFwiXVwiKTtcbiAgfSBlbHNlIHtcbiAgICBhY3RpdmVTbGlkZSA9IHNsaWRlcy5lcShhY3RpdmVJbmRleCk7XG4gIH0gLy8gQWN0aXZlIGNsYXNzZXNcblxuXG4gIGFjdGl2ZVNsaWRlLmFkZENsYXNzKHBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKTtcblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAvLyBEdXBsaWNhdGUgdG8gYWxsIGxvb3BlZCBzbGlkZXNcbiAgICBpZiAoYWN0aXZlU2xpZGUuaGFzQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIjpub3QoLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIilbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgcmVhbEluZGV4ICsgXCJcXFwiXVwiKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIltkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cXFwiXCIgKyByZWFsSW5kZXggKyBcIlxcXCJdXCIpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzKTtcbiAgICB9XG4gIH0gLy8gTmV4dCBTbGlkZVxuXG5cbiAgdmFyIG5leHRTbGlkZSA9IGFjdGl2ZVNsaWRlLm5leHRBbGwoXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcykuZXEoMCkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlTmV4dENsYXNzKTtcblxuICBpZiAocGFyYW1zLmxvb3AgJiYgbmV4dFNsaWRlLmxlbmd0aCA9PT0gMCkge1xuICAgIG5leHRTbGlkZSA9IHNsaWRlcy5lcSgwKTtcbiAgICBuZXh0U2xpZGUuYWRkQ2xhc3MocGFyYW1zLnNsaWRlTmV4dENsYXNzKTtcbiAgfSAvLyBQcmV2IFNsaWRlXG5cblxuICB2YXIgcHJldlNsaWRlID0gYWN0aXZlU2xpZGUucHJldkFsbChcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzKS5lcSgwKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVQcmV2Q2xhc3MpO1xuXG4gIGlmIChwYXJhbXMubG9vcCAmJiBwcmV2U2xpZGUubGVuZ3RoID09PSAwKSB7XG4gICAgcHJldlNsaWRlID0gc2xpZGVzLmVxKC0xKTtcbiAgICBwcmV2U2xpZGUuYWRkQ2xhc3MocGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgIGlmIChuZXh0U2xpZGUuaGFzQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIjpub3QoLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIilbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgbmV4dFNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JykgKyBcIlxcXCJdXCIpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIltkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cXFwiXCIgKyBuZXh0U2xpZGUuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSArIFwiXFxcIl1cIikuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzKTtcbiAgICB9XG5cbiAgICBpZiAocHJldlNsaWRlLmhhc0NsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzICsgXCI6bm90KC5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCIpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIHByZXZTbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpICsgXCJcXFwiXVwiKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIi5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCJbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XFxcIlwiICsgcHJldlNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JykgKyBcIlxcXCJdXCIpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyk7XG4gICAgfVxuICB9XG5cbiAgc3dpcGVyLmVtaXRTbGlkZXNDbGFzc2VzKCk7XG59IiwiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlQWN0aXZlSW5kZXgobmV3QWN0aXZlSW5kZXgpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuICB2YXIgc2xpZGVzR3JpZCA9IHN3aXBlci5zbGlkZXNHcmlkLFxuICAgICAgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgcHJldmlvdXNJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgIHByZXZpb3VzUmVhbEluZGV4ID0gc3dpcGVyLnJlYWxJbmRleCxcbiAgICAgIHByZXZpb3VzU25hcEluZGV4ID0gc3dpcGVyLnNuYXBJbmRleDtcbiAgdmFyIGFjdGl2ZUluZGV4ID0gbmV3QWN0aXZlSW5kZXg7XG4gIHZhciBzbmFwSW5kZXg7XG5cbiAgaWYgKHR5cGVvZiBhY3RpdmVJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlc0dyaWQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2Ygc2xpZGVzR3JpZFtpICsgMV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0cmFuc2xhdGUgPj0gc2xpZGVzR3JpZFtpXSAmJiB0cmFuc2xhdGUgPCBzbGlkZXNHcmlkW2kgKyAxXSAtIChzbGlkZXNHcmlkW2kgKyAxXSAtIHNsaWRlc0dyaWRbaV0pIC8gMikge1xuICAgICAgICAgIGFjdGl2ZUluZGV4ID0gaTtcbiAgICAgICAgfSBlbHNlIGlmICh0cmFuc2xhdGUgPj0gc2xpZGVzR3JpZFtpXSAmJiB0cmFuc2xhdGUgPCBzbGlkZXNHcmlkW2kgKyAxXSkge1xuICAgICAgICAgIGFjdGl2ZUluZGV4ID0gaSArIDE7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHJhbnNsYXRlID49IHNsaWRlc0dyaWRbaV0pIHtcbiAgICAgICAgYWN0aXZlSW5kZXggPSBpO1xuICAgICAgfVxuICAgIH0gLy8gTm9ybWFsaXplIHNsaWRlSW5kZXhcblxuXG4gICAgaWYgKHBhcmFtcy5ub3JtYWxpemVTbGlkZUluZGV4KSB7XG4gICAgICBpZiAoYWN0aXZlSW5kZXggPCAwIHx8IHR5cGVvZiBhY3RpdmVJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIGFjdGl2ZUluZGV4ID0gMDtcbiAgICB9XG4gIH1cblxuICBpZiAoc25hcEdyaWQuaW5kZXhPZih0cmFuc2xhdGUpID49IDApIHtcbiAgICBzbmFwSW5kZXggPSBzbmFwR3JpZC5pbmRleE9mKHRyYW5zbGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHNraXAgPSBNYXRoLm1pbihwYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBhY3RpdmVJbmRleCk7XG4gICAgc25hcEluZGV4ID0gc2tpcCArIE1hdGguZmxvb3IoKGFjdGl2ZUluZGV4IC0gc2tpcCkgLyBwYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICB9XG5cbiAgaWYgKHNuYXBJbmRleCA+PSBzbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHNuYXBHcmlkLmxlbmd0aCAtIDE7XG5cbiAgaWYgKGFjdGl2ZUluZGV4ID09PSBwcmV2aW91c0luZGV4KSB7XG4gICAgaWYgKHNuYXBJbmRleCAhPT0gcHJldmlvdXNTbmFwSW5kZXgpIHtcbiAgICAgIHN3aXBlci5zbmFwSW5kZXggPSBzbmFwSW5kZXg7XG4gICAgICBzd2lwZXIuZW1pdCgnc25hcEluZGV4Q2hhbmdlJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9IC8vIEdldCByZWFsIGluZGV4XG5cblxuICB2YXIgcmVhbEluZGV4ID0gcGFyc2VJbnQoc3dpcGVyLnNsaWRlcy5lcShhY3RpdmVJbmRleCkuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSB8fCBhY3RpdmVJbmRleCwgMTApO1xuICBleHRlbmQoc3dpcGVyLCB7XG4gICAgc25hcEluZGV4OiBzbmFwSW5kZXgsXG4gICAgcmVhbEluZGV4OiByZWFsSW5kZXgsXG4gICAgcHJldmlvdXNJbmRleDogcHJldmlvdXNJbmRleCxcbiAgICBhY3RpdmVJbmRleDogYWN0aXZlSW5kZXhcbiAgfSk7XG4gIHN3aXBlci5lbWl0KCdhY3RpdmVJbmRleENoYW5nZScpO1xuICBzd2lwZXIuZW1pdCgnc25hcEluZGV4Q2hhbmdlJyk7XG5cbiAgaWYgKHByZXZpb3VzUmVhbEluZGV4ICE9PSByZWFsSW5kZXgpIHtcbiAgICBzd2lwZXIuZW1pdCgncmVhbEluZGV4Q2hhbmdlJyk7XG4gIH1cblxuICBpZiAoc3dpcGVyLmluaXRpYWxpemVkIHx8IHN3aXBlci5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KSB7XG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlQ2hhbmdlJyk7XG4gIH1cbn0iLCJpbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXBkYXRlQ2xpY2tlZFNsaWRlKGUpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zO1xuICB2YXIgc2xpZGUgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MpWzBdO1xuICB2YXIgc2xpZGVGb3VuZCA9IGZhbHNlO1xuXG4gIGlmIChzbGlkZSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3dpcGVyLnNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHN3aXBlci5zbGlkZXNbaV0gPT09IHNsaWRlKSBzbGlkZUZvdW5kID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBpZiAoc2xpZGUgJiYgc2xpZGVGb3VuZCkge1xuICAgIHN3aXBlci5jbGlja2VkU2xpZGUgPSBzbGlkZTtcblxuICAgIGlmIChzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCkge1xuICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHBhcnNlSW50KCQoc2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9ICQoc2xpZGUpLmluZGV4KCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5jbGlja2VkU2xpZGUgPSB1bmRlZmluZWQ7XG4gICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAocGFyYW1zLnNsaWRlVG9DbGlja2VkU2xpZGUgJiYgc3dpcGVyLmNsaWNrZWRJbmRleCAhPT0gdW5kZWZpbmVkICYmIHN3aXBlci5jbGlja2VkSW5kZXggIT09IHN3aXBlci5hY3RpdmVJbmRleCkge1xuICAgIHN3aXBlci5zbGlkZVRvQ2xpY2tlZFNsaWRlKCk7XG4gIH1cbn0iLCJpbXBvcnQgZ2V0VHJhbnNsYXRlIGZyb20gJy4vZ2V0VHJhbnNsYXRlJztcbmltcG9ydCBzZXRUcmFuc2xhdGUgZnJvbSAnLi9zZXRUcmFuc2xhdGUnO1xuaW1wb3J0IG1pblRyYW5zbGF0ZSBmcm9tICcuL21pblRyYW5zbGF0ZSc7XG5pbXBvcnQgbWF4VHJhbnNsYXRlIGZyb20gJy4vbWF4VHJhbnNsYXRlJztcbmltcG9ydCB0cmFuc2xhdGVUbyBmcm9tICcuL3RyYW5zbGF0ZVRvJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0VHJhbnNsYXRlOiBnZXRUcmFuc2xhdGUsXG4gIHNldFRyYW5zbGF0ZTogc2V0VHJhbnNsYXRlLFxuICBtaW5UcmFuc2xhdGU6IG1pblRyYW5zbGF0ZSxcbiAgbWF4VHJhbnNsYXRlOiBtYXhUcmFuc2xhdGUsXG4gIHRyYW5zbGF0ZVRvOiB0cmFuc2xhdGVUb1xufTsiLCJpbXBvcnQgeyBnZXRUcmFuc2xhdGUgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTd2lwZXJUcmFuc2xhdGUoYXhpcykge1xuICBpZiAoYXhpcyA9PT0gdm9pZCAwKSB7XG4gICAgYXhpcyA9IHRoaXMuaXNIb3Jpem9udGFsKCkgPyAneCcgOiAneSc7XG4gIH1cblxuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICBydGwgPSBzd2lwZXIucnRsVHJhbnNsYXRlLFxuICAgICAgdHJhbnNsYXRlID0gc3dpcGVyLnRyYW5zbGF0ZSxcbiAgICAgICR3cmFwcGVyRWwgPSBzd2lwZXIuJHdyYXBwZXJFbDtcblxuICBpZiAocGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUpIHtcbiAgICByZXR1cm4gcnRsID8gLXRyYW5zbGF0ZSA6IHRyYW5zbGF0ZTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgIHJldHVybiB0cmFuc2xhdGU7XG4gIH1cblxuICB2YXIgY3VycmVudFRyYW5zbGF0ZSA9IGdldFRyYW5zbGF0ZSgkd3JhcHBlckVsWzBdLCBheGlzKTtcbiAgaWYgKHJ0bCkgY3VycmVudFRyYW5zbGF0ZSA9IC1jdXJyZW50VHJhbnNsYXRlO1xuICByZXR1cm4gY3VycmVudFRyYW5zbGF0ZSB8fCAwO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldFRyYW5zbGF0ZSh0cmFuc2xhdGUsIGJ5Q29udHJvbGxlcikge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGUsXG4gICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgd3JhcHBlckVsID0gc3dpcGVyLndyYXBwZXJFbCxcbiAgICAgIHByb2dyZXNzID0gc3dpcGVyLnByb2dyZXNzO1xuICB2YXIgeCA9IDA7XG4gIHZhciB5ID0gMDtcbiAgdmFyIHogPSAwO1xuXG4gIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICB4ID0gcnRsID8gLXRyYW5zbGF0ZSA6IHRyYW5zbGF0ZTtcbiAgfSBlbHNlIHtcbiAgICB5ID0gdHJhbnNsYXRlO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHtcbiAgICB4ID0gTWF0aC5mbG9vcih4KTtcbiAgICB5ID0gTWF0aC5mbG9vcih5KTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgIHdyYXBwZXJFbFtzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAteCA6IC15O1xuICB9IGVsc2UgaWYgKCFwYXJhbXMudmlydHVhbFRyYW5zbGF0ZSkge1xuICAgICR3cmFwcGVyRWwudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoXCIgKyB4ICsgXCJweCwgXCIgKyB5ICsgXCJweCwgXCIgKyB6ICsgXCJweClcIik7XG4gIH1cblxuICBzd2lwZXIucHJldmlvdXNUcmFuc2xhdGUgPSBzd2lwZXIudHJhbnNsYXRlO1xuICBzd2lwZXIudHJhbnNsYXRlID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8geCA6IHk7IC8vIENoZWNrIGlmIHdlIG5lZWQgdG8gdXBkYXRlIHByb2dyZXNzXG5cbiAgdmFyIG5ld1Byb2dyZXNzO1xuICB2YXIgdHJhbnNsYXRlc0RpZmYgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG5cbiAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgbmV3UHJvZ3Jlc3MgPSAwO1xuICB9IGVsc2Uge1xuICAgIG5ld1Byb2dyZXNzID0gKHRyYW5zbGF0ZSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKSkgLyB0cmFuc2xhdGVzRGlmZjtcbiAgfVxuXG4gIGlmIChuZXdQcm9ncmVzcyAhPT0gcHJvZ3Jlc3MpIHtcbiAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3ModHJhbnNsYXRlKTtcbiAgfVxuXG4gIHN3aXBlci5lbWl0KCdzZXRUcmFuc2xhdGUnLCBzd2lwZXIudHJhbnNsYXRlLCBieUNvbnRyb2xsZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1pblRyYW5zbGF0ZSgpIHtcbiAgcmV0dXJuIC10aGlzLnNuYXBHcmlkWzBdO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1heFRyYW5zbGF0ZSgpIHtcbiAgcmV0dXJuIC10aGlzLnNuYXBHcmlkW3RoaXMuc25hcEdyaWQubGVuZ3RoIC0gMV07XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNsYXRlVG8odHJhbnNsYXRlLCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCB0cmFuc2xhdGVCb3VuZHMsIGludGVybmFsKSB7XG4gIGlmICh0cmFuc2xhdGUgPT09IHZvaWQgMCkge1xuICAgIHRyYW5zbGF0ZSA9IDA7XG4gIH1cblxuICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gIH1cblxuICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICB9XG5cbiAgaWYgKHRyYW5zbGF0ZUJvdW5kcyA9PT0gdm9pZCAwKSB7XG4gICAgdHJhbnNsYXRlQm91bmRzID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHdyYXBwZXJFbCA9IHN3aXBlci53cmFwcGVyRWw7XG5cbiAgaWYgKHN3aXBlci5hbmltYXRpbmcgJiYgcGFyYW1zLnByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBtaW5UcmFuc2xhdGUgPSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gIHZhciBtYXhUcmFuc2xhdGUgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCk7XG4gIHZhciBuZXdUcmFuc2xhdGU7XG4gIGlmICh0cmFuc2xhdGVCb3VuZHMgJiYgdHJhbnNsYXRlID4gbWluVHJhbnNsYXRlKSBuZXdUcmFuc2xhdGUgPSBtaW5UcmFuc2xhdGU7ZWxzZSBpZiAodHJhbnNsYXRlQm91bmRzICYmIHRyYW5zbGF0ZSA8IG1heFRyYW5zbGF0ZSkgbmV3VHJhbnNsYXRlID0gbWF4VHJhbnNsYXRlO2Vsc2UgbmV3VHJhbnNsYXRlID0gdHJhbnNsYXRlOyAvLyBVcGRhdGUgcHJvZ3Jlc3NcblxuICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MobmV3VHJhbnNsYXRlKTtcblxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICB2YXIgaXNIID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpO1xuXG4gICAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgICB3cmFwcGVyRWxbaXNIID8gJ3Njcm9sbExlZnQnIDogJ3Njcm9sbFRvcCddID0gLW5ld1RyYW5zbGF0ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICBpZiAod3JhcHBlckVsLnNjcm9sbFRvKSB7XG4gICAgICAgIHZhciBfd3JhcHBlckVsJHNjcm9sbFRvO1xuXG4gICAgICAgIHdyYXBwZXJFbC5zY3JvbGxUbygoX3dyYXBwZXJFbCRzY3JvbGxUbyA9IHt9LCBfd3JhcHBlckVsJHNjcm9sbFRvW2lzSCA/ICdsZWZ0JyA6ICd0b3AnXSA9IC1uZXdUcmFuc2xhdGUsIF93cmFwcGVyRWwkc2Nyb2xsVG8uYmVoYXZpb3IgPSAnc21vb3RoJywgX3dyYXBwZXJFbCRzY3JvbGxUbykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd3JhcHBlckVsW2lzSCA/ICdzY3JvbGxMZWZ0JyA6ICdzY3JvbGxUb3AnXSA9IC1uZXdUcmFuc2xhdGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoc3BlZWQgPT09IDApIHtcbiAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbigwKTtcbiAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1RyYW5zbGF0ZSk7XG5cbiAgICBpZiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uRW5kJyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKHNwZWVkKTtcbiAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1RyYW5zbGF0ZSk7XG5cbiAgICBpZiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uU3RhcnQnKTtcbiAgICB9XG5cbiAgICBpZiAoIXN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgIHN3aXBlci5hbmltYXRpbmcgPSB0cnVlO1xuXG4gICAgICBpZiAoIXN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpIHtcbiAgICAgICAgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgICAgIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQgPSBudWxsO1xuICAgICAgICAgIGRlbGV0ZSBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kO1xuXG4gICAgICAgICAgaWYgKHJ1bkNhbGxiYWNrcykge1xuICAgICAgICAgICAgc3dpcGVyLmVtaXQoJ3RyYW5zaXRpb25FbmQnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCJpbXBvcnQgc2V0VHJhbnNpdGlvbiBmcm9tICcuL3NldFRyYW5zaXRpb24nO1xuaW1wb3J0IHRyYW5zaXRpb25TdGFydCBmcm9tICcuL3RyYW5zaXRpb25TdGFydCc7XG5pbXBvcnQgdHJhbnNpdGlvbkVuZCBmcm9tICcuL3RyYW5zaXRpb25FbmQnO1xuZXhwb3J0IGRlZmF1bHQge1xuICBzZXRUcmFuc2l0aW9uOiBzZXRUcmFuc2l0aW9uLFxuICB0cmFuc2l0aW9uU3RhcnQ6IHRyYW5zaXRpb25TdGFydCxcbiAgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZFxufTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXRUcmFuc2l0aW9uKGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG5cbiAgaWYgKCFzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICBzd2lwZXIuJHdyYXBwZXJFbC50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgfVxuXG4gIHN3aXBlci5lbWl0KCdzZXRUcmFuc2l0aW9uJywgZHVyYXRpb24sIGJ5Q29udHJvbGxlcik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNpdGlvblN0YXJ0KHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKSB7XG4gIGlmIChydW5DYWxsYmFja3MgPT09IHZvaWQgMCkge1xuICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gIH1cblxuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHByZXZpb3VzSW5kZXggPSBzd2lwZXIucHJldmlvdXNJbmRleDtcbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSByZXR1cm47XG5cbiAgaWYgKHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgc3dpcGVyLnVwZGF0ZUF1dG9IZWlnaHQoKTtcbiAgfVxuXG4gIHZhciBkaXIgPSBkaXJlY3Rpb247XG5cbiAgaWYgKCFkaXIpIHtcbiAgICBpZiAoYWN0aXZlSW5kZXggPiBwcmV2aW91c0luZGV4KSBkaXIgPSAnbmV4dCc7ZWxzZSBpZiAoYWN0aXZlSW5kZXggPCBwcmV2aW91c0luZGV4KSBkaXIgPSAncHJldic7ZWxzZSBkaXIgPSAncmVzZXQnO1xuICB9XG5cbiAgc3dpcGVyLmVtaXQoJ3RyYW5zaXRpb25TdGFydCcpO1xuXG4gIGlmIChydW5DYWxsYmFja3MgJiYgYWN0aXZlSW5kZXggIT09IHByZXZpb3VzSW5kZXgpIHtcbiAgICBpZiAoZGlyID09PSAncmVzZXQnKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVSZXNldFRyYW5zaXRpb25TdGFydCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdzbGlkZUNoYW5nZVRyYW5zaXRpb25TdGFydCcpO1xuXG4gICAgaWYgKGRpciA9PT0gJ25leHQnKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVOZXh0VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5lbWl0KCdzbGlkZVByZXZUcmFuc2l0aW9uU3RhcnQnKTtcbiAgICB9XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKSB7XG4gIGlmIChydW5DYWxsYmFja3MgPT09IHZvaWQgMCkge1xuICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gIH1cblxuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIGFjdGl2ZUluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4LFxuICAgICAgcHJldmlvdXNJbmRleCA9IHN3aXBlci5wcmV2aW91c0luZGV4LFxuICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcbiAgc3dpcGVyLmFuaW1hdGluZyA9IGZhbHNlO1xuICBpZiAocGFyYW1zLmNzc01vZGUpIHJldHVybjtcbiAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gIHZhciBkaXIgPSBkaXJlY3Rpb247XG5cbiAgaWYgKCFkaXIpIHtcbiAgICBpZiAoYWN0aXZlSW5kZXggPiBwcmV2aW91c0luZGV4KSBkaXIgPSAnbmV4dCc7ZWxzZSBpZiAoYWN0aXZlSW5kZXggPCBwcmV2aW91c0luZGV4KSBkaXIgPSAncHJldic7ZWxzZSBkaXIgPSAncmVzZXQnO1xuICB9XG5cbiAgc3dpcGVyLmVtaXQoJ3RyYW5zaXRpb25FbmQnKTtcblxuICBpZiAocnVuQ2FsbGJhY2tzICYmIGFjdGl2ZUluZGV4ICE9PSBwcmV2aW91c0luZGV4KSB7XG4gICAgaWYgKGRpciA9PT0gJ3Jlc2V0Jykge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlUmVzZXRUcmFuc2l0aW9uRW5kJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlQ2hhbmdlVHJhbnNpdGlvbkVuZCcpO1xuXG4gICAgaWYgKGRpciA9PT0gJ25leHQnKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVOZXh0VHJhbnNpdGlvbkVuZCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVQcmV2VHJhbnNpdGlvbkVuZCcpO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCBzbGlkZVRvIGZyb20gJy4vc2xpZGVUbyc7XG5pbXBvcnQgc2xpZGVUb0xvb3AgZnJvbSAnLi9zbGlkZVRvTG9vcCc7XG5pbXBvcnQgc2xpZGVOZXh0IGZyb20gJy4vc2xpZGVOZXh0JztcbmltcG9ydCBzbGlkZVByZXYgZnJvbSAnLi9zbGlkZVByZXYnO1xuaW1wb3J0IHNsaWRlUmVzZXQgZnJvbSAnLi9zbGlkZVJlc2V0JztcbmltcG9ydCBzbGlkZVRvQ2xvc2VzdCBmcm9tICcuL3NsaWRlVG9DbG9zZXN0JztcbmltcG9ydCBzbGlkZVRvQ2xpY2tlZFNsaWRlIGZyb20gJy4vc2xpZGVUb0NsaWNrZWRTbGlkZSc7XG5leHBvcnQgZGVmYXVsdCB7XG4gIHNsaWRlVG86IHNsaWRlVG8sXG4gIHNsaWRlVG9Mb29wOiBzbGlkZVRvTG9vcCxcbiAgc2xpZGVOZXh0OiBzbGlkZU5leHQsXG4gIHNsaWRlUHJldjogc2xpZGVQcmV2LFxuICBzbGlkZVJlc2V0OiBzbGlkZVJlc2V0LFxuICBzbGlkZVRvQ2xvc2VzdDogc2xpZGVUb0Nsb3Nlc3QsXG4gIHNsaWRlVG9DbGlja2VkU2xpZGU6IHNsaWRlVG9DbGlja2VkU2xpZGVcbn07IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2xpZGVUbyhpbmRleCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpIHtcbiAgaWYgKGluZGV4ID09PSB2b2lkIDApIHtcbiAgICBpbmRleCA9IDA7XG4gIH1cblxuICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gIH1cblxuICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBpbmRleCAhPT0gJ251bWJlcicgJiYgdHlwZW9mIGluZGV4ICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSAnaW5kZXgnIGFyZ3VtZW50IGNhbm5vdCBoYXZlIHR5cGUgb3RoZXIgdGhhbiAnbnVtYmVyJyBvciAnc3RyaW5nJy4gW1wiICsgdHlwZW9mIGluZGV4ICsgXCJdIGdpdmVuLlwiKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW5kZXggPT09ICdzdHJpbmcnKSB7XG4gICAgLyoqXG4gICAgICogVGhlIGBpbmRleGAgYXJndW1lbnQgY29udmVydGVkIGZyb20gYHN0cmluZ2AgdG8gYG51bWJlcmAuXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICB2YXIgaW5kZXhBc051bWJlciA9IHBhcnNlSW50KGluZGV4LCAxMCk7XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBgaW5kZXhgIGFyZ3VtZW50IGlzIGEgdmFsaWQgYG51bWJlcmBcbiAgICAgKiBhZnRlciBiZWluZyBjb252ZXJ0ZWQgZnJvbSB0aGUgYHN0cmluZ2AgdHlwZS5cbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cblxuICAgIHZhciBpc1ZhbGlkTnVtYmVyID0gaXNGaW5pdGUoaW5kZXhBc051bWJlcik7XG5cbiAgICBpZiAoIWlzVmFsaWROdW1iZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBwYXNzZWQtaW4gJ2luZGV4JyAoc3RyaW5nKSBjb3VsZG4ndCBiZSBjb252ZXJ0ZWQgdG8gJ251bWJlcicuIFtcIiArIGluZGV4ICsgXCJdIGdpdmVuLlwiKTtcbiAgICB9IC8vIEtub3dpbmcgdGhhdCB0aGUgY29udmVydGVkIGBpbmRleGAgaXMgYSB2YWxpZCBudW1iZXIsXG4gICAgLy8gd2UgY2FuIHVwZGF0ZSB0aGUgb3JpZ2luYWwgYXJndW1lbnQncyB2YWx1ZS5cblxuXG4gICAgaW5kZXggPSBpbmRleEFzTnVtYmVyO1xuICB9XG5cbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBzbGlkZUluZGV4ID0gaW5kZXg7XG4gIGlmIChzbGlkZUluZGV4IDwgMCkgc2xpZGVJbmRleCA9IDA7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICBzbGlkZXNHcmlkID0gc3dpcGVyLnNsaWRlc0dyaWQsXG4gICAgICBwcmV2aW91c0luZGV4ID0gc3dpcGVyLnByZXZpb3VzSW5kZXgsXG4gICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGUsXG4gICAgICB3cmFwcGVyRWwgPSBzd2lwZXIud3JhcHBlckVsO1xuXG4gIGlmIChzd2lwZXIuYW5pbWF0aW5nICYmIHBhcmFtcy5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgc2tpcCA9IE1hdGgubWluKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBzbGlkZUluZGV4KTtcbiAgdmFyIHNuYXBJbmRleCA9IHNraXAgKyBNYXRoLmZsb29yKChzbGlkZUluZGV4IC0gc2tpcCkgLyBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgaWYgKHNuYXBJbmRleCA+PSBzbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHNuYXBHcmlkLmxlbmd0aCAtIDE7XG5cbiAgaWYgKChhY3RpdmVJbmRleCB8fCBwYXJhbXMuaW5pdGlhbFNsaWRlIHx8IDApID09PSAocHJldmlvdXNJbmRleCB8fCAwKSAmJiBydW5DYWxsYmFja3MpIHtcbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlU2xpZGVDaGFuZ2VTdGFydCcpO1xuICB9XG5cbiAgdmFyIHRyYW5zbGF0ZSA9IC1zbmFwR3JpZFtzbmFwSW5kZXhdOyAvLyBVcGRhdGUgcHJvZ3Jlc3NcblxuICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3ModHJhbnNsYXRlKTsgLy8gTm9ybWFsaXplIHNsaWRlSW5kZXhcblxuICBpZiAocGFyYW1zLm5vcm1hbGl6ZVNsaWRlSW5kZXgpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlc0dyaWQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICgtTWF0aC5mbG9vcih0cmFuc2xhdGUgKiAxMDApID49IE1hdGguZmxvb3Ioc2xpZGVzR3JpZFtpXSAqIDEwMCkpIHtcbiAgICAgICAgc2xpZGVJbmRleCA9IGk7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIERpcmVjdGlvbnMgbG9ja3NcblxuXG4gIGlmIChzd2lwZXIuaW5pdGlhbGl6ZWQgJiYgc2xpZGVJbmRleCAhPT0gYWN0aXZlSW5kZXgpIHtcbiAgICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlTmV4dCAmJiB0cmFuc2xhdGUgPCBzd2lwZXIudHJhbnNsYXRlICYmIHRyYW5zbGF0ZSA8IHN3aXBlci5taW5UcmFuc2xhdGUoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghc3dpcGVyLmFsbG93U2xpZGVQcmV2ICYmIHRyYW5zbGF0ZSA+IHN3aXBlci50cmFuc2xhdGUgJiYgdHJhbnNsYXRlID4gc3dpcGVyLm1heFRyYW5zbGF0ZSgpKSB7XG4gICAgICBpZiAoKGFjdGl2ZUluZGV4IHx8IDApICE9PSBzbGlkZUluZGV4KSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgdmFyIGRpcmVjdGlvbjtcbiAgaWYgKHNsaWRlSW5kZXggPiBhY3RpdmVJbmRleCkgZGlyZWN0aW9uID0gJ25leHQnO2Vsc2UgaWYgKHNsaWRlSW5kZXggPCBhY3RpdmVJbmRleCkgZGlyZWN0aW9uID0gJ3ByZXYnO2Vsc2UgZGlyZWN0aW9uID0gJ3Jlc2V0JzsgLy8gVXBkYXRlIEluZGV4XG5cbiAgaWYgKHJ0bCAmJiAtdHJhbnNsYXRlID09PSBzd2lwZXIudHJhbnNsYXRlIHx8ICFydGwgJiYgdHJhbnNsYXRlID09PSBzd2lwZXIudHJhbnNsYXRlKSB7XG4gICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KHNsaWRlSW5kZXgpOyAvLyBVcGRhdGUgSGVpZ2h0XG5cbiAgICBpZiAocGFyYW1zLmF1dG9IZWlnaHQpIHtcbiAgICAgIHN3aXBlci51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgfVxuXG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcblxuICAgIGlmIChwYXJhbXMuZWZmZWN0ICE9PSAnc2xpZGUnKSB7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGRpcmVjdGlvbiAhPT0gJ3Jlc2V0Jykge1xuICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG4gICAgICBzd2lwZXIudHJhbnNpdGlvbkVuZChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgdmFyIGlzSCA9IHN3aXBlci5pc0hvcml6b250YWwoKTtcbiAgICB2YXIgdCA9IC10cmFuc2xhdGU7XG5cbiAgICBpZiAocnRsKSB7XG4gICAgICB0ID0gd3JhcHBlckVsLnNjcm9sbFdpZHRoIC0gd3JhcHBlckVsLm9mZnNldFdpZHRoIC0gdDtcbiAgICB9XG5cbiAgICBpZiAoc3BlZWQgPT09IDApIHtcbiAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSB0O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIGlmICh3cmFwcGVyRWwuc2Nyb2xsVG8pIHtcbiAgICAgICAgdmFyIF93cmFwcGVyRWwkc2Nyb2xsVG87XG5cbiAgICAgICAgd3JhcHBlckVsLnNjcm9sbFRvKChfd3JhcHBlckVsJHNjcm9sbFRvID0ge30sIF93cmFwcGVyRWwkc2Nyb2xsVG9baXNIID8gJ2xlZnQnIDogJ3RvcCddID0gdCwgX3dyYXBwZXJFbCRzY3JvbGxUby5iZWhhdmlvciA9ICdzbW9vdGgnLCBfd3JhcHBlckVsJHNjcm9sbFRvKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3cmFwcGVyRWxbaXNIID8gJ3Njcm9sbExlZnQnIDogJ3Njcm9sbFRvcCddID0gdDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChzcGVlZCA9PT0gMCkge1xuICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKDApO1xuICAgIHN3aXBlci5zZXRUcmFuc2xhdGUodHJhbnNsYXRlKTtcbiAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoc2xpZGVJbmRleCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICBzd2lwZXIudHJhbnNpdGlvblN0YXJ0KHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgICBzd2lwZXIudHJhbnNpdGlvbkVuZChydW5DYWxsYmFja3MsIGRpcmVjdGlvbik7XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3BlZWQpO1xuICAgIHN3aXBlci5zZXRUcmFuc2xhdGUodHJhbnNsYXRlKTtcbiAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoc2xpZGVJbmRleCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICBzd2lwZXIudHJhbnNpdGlvblN0YXJ0KHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcblxuICAgIGlmICghc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgc3dpcGVyLmFuaW1hdGluZyA9IHRydWU7XG5cbiAgICAgIGlmICghc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKSB7XG4gICAgICAgIHN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd3ZWJraXRUcmFuc2l0aW9uRW5kJywgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgICBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQgPSBudWxsO1xuICAgICAgICAgIGRlbGV0ZSBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQ7XG4gICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQocnVuQ2FsbGJhY2tzLCBkaXJlY3Rpb24pO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNsaWRlVG9Mb29wKGluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICBpZiAoaW5kZXggPT09IHZvaWQgMCkge1xuICAgIGluZGV4ID0gMDtcbiAgfVxuXG4gIGlmIChzcGVlZCA9PT0gdm9pZCAwKSB7XG4gICAgc3BlZWQgPSB0aGlzLnBhcmFtcy5zcGVlZDtcbiAgfVxuXG4gIGlmIChydW5DYWxsYmFja3MgPT09IHZvaWQgMCkge1xuICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gIH1cblxuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIG5ld0luZGV4ID0gaW5kZXg7XG5cbiAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgIG5ld0luZGV4ICs9IHN3aXBlci5sb29wZWRTbGlkZXM7XG4gIH1cblxuICByZXR1cm4gc3dpcGVyLnNsaWRlVG8obmV3SW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbn0iLCIvKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFwib2ZmXCIgKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNsaWRlTmV4dChzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gIH1cblxuICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICB9XG5cbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgYW5pbWF0aW5nID0gc3dpcGVyLmFuaW1hdGluZztcbiAgdmFyIGluY3JlbWVudCA9IHN3aXBlci5hY3RpdmVJbmRleCA8IHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAgPyAxIDogcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGlmIChhbmltYXRpbmcgJiYgcGFyYW1zLmxvb3BQcmV2ZW50c1NsaWRlKSByZXR1cm4gZmFsc2U7XG4gICAgc3dpcGVyLmxvb3BGaXgoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICBzd2lwZXIuX2NsaWVudExlZnQgPSBzd2lwZXIuJHdyYXBwZXJFbFswXS5jbGllbnRMZWZ0O1xuICB9XG5cbiAgcmV0dXJuIHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCArIGluY3JlbWVudCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xufSIsIi8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2xpZGVQcmV2KHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKSB7XG4gIGlmIChzcGVlZCA9PT0gdm9pZCAwKSB7XG4gICAgc3BlZWQgPSB0aGlzLnBhcmFtcy5zcGVlZDtcbiAgfVxuXG4gIGlmIChydW5DYWxsYmFja3MgPT09IHZvaWQgMCkge1xuICAgIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gIH1cblxuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICBhbmltYXRpbmcgPSBzd2lwZXIuYW5pbWF0aW5nLFxuICAgICAgc25hcEdyaWQgPSBzd2lwZXIuc25hcEdyaWQsXG4gICAgICBzbGlkZXNHcmlkID0gc3dpcGVyLnNsaWRlc0dyaWQsXG4gICAgICBydGxUcmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlO1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGlmIChhbmltYXRpbmcgJiYgcGFyYW1zLmxvb3BQcmV2ZW50c1NsaWRlKSByZXR1cm4gZmFsc2U7XG4gICAgc3dpcGVyLmxvb3BGaXgoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICBzd2lwZXIuX2NsaWVudExlZnQgPSBzd2lwZXIuJHdyYXBwZXJFbFswXS5jbGllbnRMZWZ0O1xuICB9XG5cbiAgdmFyIHRyYW5zbGF0ZSA9IHJ0bFRyYW5zbGF0ZSA/IHN3aXBlci50cmFuc2xhdGUgOiAtc3dpcGVyLnRyYW5zbGF0ZTtcblxuICBmdW5jdGlvbiBub3JtYWxpemUodmFsKSB7XG4gICAgaWYgKHZhbCA8IDApIHJldHVybiAtTWF0aC5mbG9vcihNYXRoLmFicyh2YWwpKTtcbiAgICByZXR1cm4gTWF0aC5mbG9vcih2YWwpO1xuICB9XG5cbiAgdmFyIG5vcm1hbGl6ZWRUcmFuc2xhdGUgPSBub3JtYWxpemUodHJhbnNsYXRlKTtcbiAgdmFyIG5vcm1hbGl6ZWRTbmFwR3JpZCA9IHNuYXBHcmlkLm1hcChmdW5jdGlvbiAodmFsKSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZSh2YWwpO1xuICB9KTtcbiAgdmFyIGN1cnJlbnRTbmFwID0gc25hcEdyaWRbbm9ybWFsaXplZFNuYXBHcmlkLmluZGV4T2Yobm9ybWFsaXplZFRyYW5zbGF0ZSldO1xuICB2YXIgcHJldlNuYXAgPSBzbmFwR3JpZFtub3JtYWxpemVkU25hcEdyaWQuaW5kZXhPZihub3JtYWxpemVkVHJhbnNsYXRlKSAtIDFdO1xuXG4gIGlmICh0eXBlb2YgcHJldlNuYXAgPT09ICd1bmRlZmluZWQnICYmIHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgc25hcEdyaWQuZm9yRWFjaChmdW5jdGlvbiAoc25hcCkge1xuICAgICAgaWYgKCFwcmV2U25hcCAmJiBub3JtYWxpemVkVHJhbnNsYXRlID49IHNuYXApIHByZXZTbmFwID0gc25hcDtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBwcmV2SW5kZXg7XG5cbiAgaWYgKHR5cGVvZiBwcmV2U25hcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBwcmV2SW5kZXggPSBzbGlkZXNHcmlkLmluZGV4T2YocHJldlNuYXApO1xuICAgIGlmIChwcmV2SW5kZXggPCAwKSBwcmV2SW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXggLSAxO1xuICB9XG5cbiAgcmV0dXJuIHN3aXBlci5zbGlkZVRvKHByZXZJbmRleCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xufSIsIi8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2xpZGVSZXNldChzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICBpZiAoc3BlZWQgPT09IHZvaWQgMCkge1xuICAgIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQ7XG4gIH1cblxuICBpZiAocnVuQ2FsbGJhY2tzID09PSB2b2lkIDApIHtcbiAgICBydW5DYWxsYmFja3MgPSB0cnVlO1xuICB9XG5cbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHJldHVybiBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbn0iLCIvKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFwib2ZmXCIgKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNsaWRlVG9DbG9zZXN0KHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsLCB0aHJlc2hvbGQpIHtcbiAgaWYgKHNwZWVkID09PSB2b2lkIDApIHtcbiAgICBzcGVlZCA9IHRoaXMucGFyYW1zLnNwZWVkO1xuICB9XG5cbiAgaWYgKHJ1bkNhbGxiYWNrcyA9PT0gdm9pZCAwKSB7XG4gICAgcnVuQ2FsbGJhY2tzID0gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0aHJlc2hvbGQgPT09IHZvaWQgMCkge1xuICAgIHRocmVzaG9sZCA9IDAuNTtcbiAgfVxuXG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgaW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXg7XG4gIHZhciBza2lwID0gTWF0aC5taW4oc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAsIGluZGV4KTtcbiAgdmFyIHNuYXBJbmRleCA9IHNraXAgKyBNYXRoLmZsb29yKChpbmRleCAtIHNraXApIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gIHZhciB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuXG4gIGlmICh0cmFuc2xhdGUgPj0gc3dpcGVyLnNuYXBHcmlkW3NuYXBJbmRleF0pIHtcbiAgICAvLyBUaGUgY3VycmVudCB0cmFuc2xhdGUgaXMgb24gb3IgYWZ0ZXIgdGhlIGN1cnJlbnQgc25hcCBpbmRleCwgc28gdGhlIGNob2ljZVxuICAgIC8vIGlzIGJldHdlZW4gdGhlIGN1cnJlbnQgaW5kZXggYW5kIHRoZSBvbmUgYWZ0ZXIgaXQuXG4gICAgdmFyIGN1cnJlbnRTbmFwID0gc3dpcGVyLnNuYXBHcmlkW3NuYXBJbmRleF07XG4gICAgdmFyIG5leHRTbmFwID0gc3dpcGVyLnNuYXBHcmlkW3NuYXBJbmRleCArIDFdO1xuXG4gICAgaWYgKHRyYW5zbGF0ZSAtIGN1cnJlbnRTbmFwID4gKG5leHRTbmFwIC0gY3VycmVudFNuYXApICogdGhyZXNob2xkKSB7XG4gICAgICBpbmRleCArPSBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBUaGUgY3VycmVudCB0cmFuc2xhdGUgaXMgYmVmb3JlIHRoZSBjdXJyZW50IHNuYXAgaW5kZXgsIHNvIHRoZSBjaG9pY2VcbiAgICAvLyBpcyBiZXR3ZWVuIHRoZSBjdXJyZW50IGluZGV4IGFuZCB0aGUgb25lIGJlZm9yZSBpdC5cbiAgICB2YXIgcHJldlNuYXAgPSBzd2lwZXIuc25hcEdyaWRbc25hcEluZGV4IC0gMV07XG4gICAgdmFyIF9jdXJyZW50U25hcCA9IHN3aXBlci5zbmFwR3JpZFtzbmFwSW5kZXhdO1xuXG4gICAgaWYgKHRyYW5zbGF0ZSAtIHByZXZTbmFwIDw9IChfY3VycmVudFNuYXAgLSBwcmV2U25hcCkgKiB0aHJlc2hvbGQpIHtcbiAgICAgIGluZGV4IC09IHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgfVxuICB9XG5cbiAgaW5kZXggPSBNYXRoLm1heChpbmRleCwgMCk7XG4gIGluZGV4ID0gTWF0aC5taW4oaW5kZXgsIHN3aXBlci5zbGlkZXNHcmlkLmxlbmd0aCAtIDEpO1xuICByZXR1cm4gc3dpcGVyLnNsaWRlVG8oaW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbn0iLCJpbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuaW1wb3J0IHsgbmV4dFRpY2sgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzbGlkZVRvQ2xpY2tlZFNsaWRlKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWw7XG4gIHZhciBzbGlkZXNQZXJWaWV3ID0gcGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyA/IHN3aXBlci5zbGlkZXNQZXJWaWV3RHluYW1pYygpIDogcGFyYW1zLnNsaWRlc1BlclZpZXc7XG4gIHZhciBzbGlkZVRvSW5kZXggPSBzd2lwZXIuY2xpY2tlZEluZGV4O1xuICB2YXIgcmVhbEluZGV4O1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGlmIChzd2lwZXIuYW5pbWF0aW5nKSByZXR1cm47XG4gICAgcmVhbEluZGV4ID0gcGFyc2VJbnQoJChzd2lwZXIuY2xpY2tlZFNsaWRlKS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpLCAxMCk7XG5cbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBpZiAoc2xpZGVUb0luZGV4IDwgc3dpcGVyLmxvb3BlZFNsaWRlcyAtIHNsaWRlc1BlclZpZXcgLyAyIHx8IHNsaWRlVG9JbmRleCA+IHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gc3dpcGVyLmxvb3BlZFNsaWRlcyArIHNsaWRlc1BlclZpZXcgLyAyKSB7XG4gICAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICAgIHNsaWRlVG9JbmRleCA9ICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVxcXCJcIiArIHJlYWxJbmRleCArIFwiXFxcIl06bm90KC5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgXCIpXCIpLmVxKDApLmluZGV4KCk7XG4gICAgICAgIG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzbGlkZVRvSW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIHNsaWRlc1BlclZpZXcpIHtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICBzbGlkZVRvSW5kZXggPSAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIltkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cXFwiXCIgKyByZWFsSW5kZXggKyBcIlxcXCJdOm5vdCguXCIgKyBwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArIFwiKVwiKS5lcSgwKS5pbmRleCgpO1xuICAgICAgbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gIH1cbn0iLCJpbXBvcnQgbG9vcENyZWF0ZSBmcm9tICcuL2xvb3BDcmVhdGUnO1xuaW1wb3J0IGxvb3BGaXggZnJvbSAnLi9sb29wRml4JztcbmltcG9ydCBsb29wRGVzdHJveSBmcm9tICcuL2xvb3BEZXN0cm95JztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbG9vcENyZWF0ZTogbG9vcENyZWF0ZSxcbiAgbG9vcEZpeDogbG9vcEZpeCxcbiAgbG9vcERlc3Ryb3k6IGxvb3BEZXN0cm95XG59OyIsImltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG5pbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9vcENyZWF0ZSgpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBkb2N1bWVudCA9IGdldERvY3VtZW50KCk7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsOyAvLyBSZW1vdmUgZHVwbGljYXRlZCBzbGlkZXNcblxuICAkd3JhcHBlckVsLmNoaWxkcmVuKFwiLlwiICsgcGFyYW1zLnNsaWRlQ2xhc3MgKyBcIi5cIiArIHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKS5yZW1vdmUoKTtcbiAgdmFyIHNsaWRlcyA9ICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyk7XG5cbiAgaWYgKHBhcmFtcy5sb29wRmlsbEdyb3VwV2l0aEJsYW5rKSB7XG4gICAgdmFyIGJsYW5rU2xpZGVzTnVtID0gcGFyYW1zLnNsaWRlc1Blckdyb3VwIC0gc2xpZGVzLmxlbmd0aCAlIHBhcmFtcy5zbGlkZXNQZXJHcm91cDtcblxuICAgIGlmIChibGFua1NsaWRlc051bSAhPT0gcGFyYW1zLnNsaWRlc1Blckdyb3VwKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJsYW5rU2xpZGVzTnVtOyBpICs9IDEpIHtcbiAgICAgICAgdmFyIGJsYW5rTm9kZSA9ICQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUNsYXNzICsgXCIgXCIgKyBwYXJhbXMuc2xpZGVCbGFua0NsYXNzKTtcbiAgICAgICAgJHdyYXBwZXJFbC5hcHBlbmQoYmxhbmtOb2RlKTtcbiAgICAgIH1cblxuICAgICAgc2xpZGVzID0gJHdyYXBwZXJFbC5jaGlsZHJlbihcIi5cIiArIHBhcmFtcy5zbGlkZUNsYXNzKTtcbiAgICB9XG4gIH1cblxuICBpZiAocGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyAmJiAhcGFyYW1zLmxvb3BlZFNsaWRlcykgcGFyYW1zLmxvb3BlZFNsaWRlcyA9IHNsaWRlcy5sZW5ndGg7XG4gIHN3aXBlci5sb29wZWRTbGlkZXMgPSBNYXRoLmNlaWwocGFyc2VGbG9hdChwYXJhbXMubG9vcGVkU2xpZGVzIHx8IHBhcmFtcy5zbGlkZXNQZXJWaWV3LCAxMCkpO1xuICBzd2lwZXIubG9vcGVkU2xpZGVzICs9IHBhcmFtcy5sb29wQWRkaXRpb25hbFNsaWRlcztcblxuICBpZiAoc3dpcGVyLmxvb3BlZFNsaWRlcyA+IHNsaWRlcy5sZW5ndGgpIHtcbiAgICBzd2lwZXIubG9vcGVkU2xpZGVzID0gc2xpZGVzLmxlbmd0aDtcbiAgfVxuXG4gIHZhciBwcmVwZW5kU2xpZGVzID0gW107XG4gIHZhciBhcHBlbmRTbGlkZXMgPSBbXTtcbiAgc2xpZGVzLmVhY2goZnVuY3Rpb24gKGVsLCBpbmRleCkge1xuICAgIHZhciBzbGlkZSA9ICQoZWwpO1xuXG4gICAgaWYgKGluZGV4IDwgc3dpcGVyLmxvb3BlZFNsaWRlcykge1xuICAgICAgYXBwZW5kU2xpZGVzLnB1c2goZWwpO1xuICAgIH1cblxuICAgIGlmIChpbmRleCA8IHNsaWRlcy5sZW5ndGggJiYgaW5kZXggPj0gc2xpZGVzLmxlbmd0aCAtIHN3aXBlci5sb29wZWRTbGlkZXMpIHtcbiAgICAgIHByZXBlbmRTbGlkZXMucHVzaChlbCk7XG4gICAgfVxuXG4gICAgc2xpZGUuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnLCBpbmRleCk7XG4gIH0pO1xuXG4gIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcHBlbmRTbGlkZXMubGVuZ3RoOyBfaSArPSAxKSB7XG4gICAgJHdyYXBwZXJFbC5hcHBlbmQoJChhcHBlbmRTbGlkZXNbX2ldLmNsb25lTm9kZSh0cnVlKSkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKTtcbiAgfVxuXG4gIGZvciAodmFyIF9pMiA9IHByZXBlbmRTbGlkZXMubGVuZ3RoIC0gMTsgX2kyID49IDA7IF9pMiAtPSAxKSB7XG4gICAgJHdyYXBwZXJFbC5wcmVwZW5kKCQocHJlcGVuZFNsaWRlc1tfaTJdLmNsb25lTm9kZSh0cnVlKSkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvb3BGaXgoKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICBzd2lwZXIuZW1pdCgnYmVmb3JlTG9vcEZpeCcpO1xuICB2YXIgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXgsXG4gICAgICBzbGlkZXMgPSBzd2lwZXIuc2xpZGVzLFxuICAgICAgbG9vcGVkU2xpZGVzID0gc3dpcGVyLmxvb3BlZFNsaWRlcyxcbiAgICAgIGFsbG93U2xpZGVQcmV2ID0gc3dpcGVyLmFsbG93U2xpZGVQcmV2LFxuICAgICAgYWxsb3dTbGlkZU5leHQgPSBzd2lwZXIuYWxsb3dTbGlkZU5leHQsXG4gICAgICBzbmFwR3JpZCA9IHN3aXBlci5zbmFwR3JpZCxcbiAgICAgIHJ0bCA9IHN3aXBlci5ydGxUcmFuc2xhdGU7XG4gIHZhciBuZXdJbmRleDtcbiAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gdHJ1ZTtcbiAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gdHJ1ZTtcbiAgdmFyIHNuYXBUcmFuc2xhdGUgPSAtc25hcEdyaWRbYWN0aXZlSW5kZXhdO1xuICB2YXIgZGlmZiA9IHNuYXBUcmFuc2xhdGUgLSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCk7IC8vIEZpeCBGb3IgTmVnYXRpdmUgT3ZlcnNsaWRpbmdcblxuICBpZiAoYWN0aXZlSW5kZXggPCBsb29wZWRTbGlkZXMpIHtcbiAgICBuZXdJbmRleCA9IHNsaWRlcy5sZW5ndGggLSBsb29wZWRTbGlkZXMgKiAzICsgYWN0aXZlSW5kZXg7XG4gICAgbmV3SW5kZXggKz0gbG9vcGVkU2xpZGVzO1xuICAgIHZhciBzbGlkZUNoYW5nZWQgPSBzd2lwZXIuc2xpZGVUbyhuZXdJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuXG4gICAgaWYgKHNsaWRlQ2hhbmdlZCAmJiBkaWZmICE9PSAwKSB7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKChydGwgPyAtc3dpcGVyLnRyYW5zbGF0ZSA6IHN3aXBlci50cmFuc2xhdGUpIC0gZGlmZik7XG4gICAgfVxuICB9IGVsc2UgaWYgKGFjdGl2ZUluZGV4ID49IHNsaWRlcy5sZW5ndGggLSBsb29wZWRTbGlkZXMpIHtcbiAgICAvLyBGaXggRm9yIFBvc2l0aXZlIE92ZXJzbGlkaW5nXG4gICAgbmV3SW5kZXggPSAtc2xpZGVzLmxlbmd0aCArIGFjdGl2ZUluZGV4ICsgbG9vcGVkU2xpZGVzO1xuICAgIG5ld0luZGV4ICs9IGxvb3BlZFNsaWRlcztcblxuICAgIHZhciBfc2xpZGVDaGFuZ2VkID0gc3dpcGVyLnNsaWRlVG8obmV3SW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcblxuICAgIGlmIChfc2xpZGVDaGFuZ2VkICYmIGRpZmYgIT09IDApIHtcbiAgICAgIHN3aXBlci5zZXRUcmFuc2xhdGUoKHJ0bCA/IC1zd2lwZXIudHJhbnNsYXRlIDogc3dpcGVyLnRyYW5zbGF0ZSkgLSBkaWZmKTtcbiAgICB9XG4gIH1cblxuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSBhbGxvd1NsaWRlUHJldjtcbiAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gYWxsb3dTbGlkZU5leHQ7XG4gIHN3aXBlci5lbWl0KCdsb29wRml4Jyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9vcERlc3Ryb3koKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcyxcbiAgICAgIHNsaWRlcyA9IHN3aXBlci5zbGlkZXM7XG4gICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiLlwiICsgcGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyBcIiwuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyArIFwiLlwiICsgcGFyYW1zLnNsaWRlQmxhbmtDbGFzcykucmVtb3ZlKCk7XG4gIHNsaWRlcy5yZW1vdmVBdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpO1xufSIsImltcG9ydCBzZXRHcmFiQ3Vyc29yIGZyb20gJy4vc2V0R3JhYkN1cnNvcic7XG5pbXBvcnQgdW5zZXRHcmFiQ3Vyc29yIGZyb20gJy4vdW5zZXRHcmFiQ3Vyc29yJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2V0R3JhYkN1cnNvcjogc2V0R3JhYkN1cnNvcixcbiAgdW5zZXRHcmFiQ3Vyc29yOiB1bnNldEdyYWJDdXJzb3Jcbn07IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0R3JhYkN1cnNvcihtb3ZpbmcpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIGlmIChzd2lwZXIuc3VwcG9ydC50b3VjaCB8fCAhc3dpcGVyLnBhcmFtcy5zaW11bGF0ZVRvdWNoIHx8IHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzd2lwZXIuaXNMb2NrZWQgfHwgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSByZXR1cm47XG4gIHZhciBlbCA9IHN3aXBlci5lbDtcbiAgZWwuc3R5bGUuY3Vyc29yID0gJ21vdmUnO1xuICBlbC5zdHlsZS5jdXJzb3IgPSBtb3ZpbmcgPyAnLXdlYmtpdC1ncmFiYmluZycgOiAnLXdlYmtpdC1ncmFiJztcbiAgZWwuc3R5bGUuY3Vyc29yID0gbW92aW5nID8gJy1tb3otZ3JhYmJpbicgOiAnLW1vei1ncmFiJztcbiAgZWwuc3R5bGUuY3Vyc29yID0gbW92aW5nID8gJ2dyYWJiaW5nJyA6ICdncmFiJztcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bnNldEdyYWJDdXJzb3IoKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuXG4gIGlmIChzd2lwZXIuc3VwcG9ydC50b3VjaCB8fCBzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkIHx8IHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHN3aXBlci5lbC5zdHlsZS5jdXJzb3IgPSAnJztcbn0iLCJpbXBvcnQgYXBwZW5kU2xpZGUgZnJvbSAnLi9hcHBlbmRTbGlkZSc7XG5pbXBvcnQgcHJlcGVuZFNsaWRlIGZyb20gJy4vcHJlcGVuZFNsaWRlJztcbmltcG9ydCBhZGRTbGlkZSBmcm9tICcuL2FkZFNsaWRlJztcbmltcG9ydCByZW1vdmVTbGlkZSBmcm9tICcuL3JlbW92ZVNsaWRlJztcbmltcG9ydCByZW1vdmVBbGxTbGlkZXMgZnJvbSAnLi9yZW1vdmVBbGxTbGlkZXMnO1xuZXhwb3J0IGRlZmF1bHQge1xuICBhcHBlbmRTbGlkZTogYXBwZW5kU2xpZGUsXG4gIHByZXBlbmRTbGlkZTogcHJlcGVuZFNsaWRlLFxuICBhZGRTbGlkZTogYWRkU2xpZGUsXG4gIHJlbW92ZVNsaWRlOiByZW1vdmVTbGlkZSxcbiAgcmVtb3ZlQWxsU2xpZGVzOiByZW1vdmVBbGxTbGlkZXNcbn07IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXBwZW5kU2xpZGUoc2xpZGVzKSB7XG4gIHZhciBzd2lwZXIgPSB0aGlzO1xuICB2YXIgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc2xpZGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHNsaWRlc1tpXSkgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzW2ldKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gIH1cblxuICBpZiAoIShwYXJhbXMub2JzZXJ2ZXIgJiYgc3dpcGVyLnN1cHBvcnQub2JzZXJ2ZXIpKSB7XG4gICAgc3dpcGVyLnVwZGF0ZSgpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJlcGVuZFNsaWRlKHNsaWRlcykge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleDtcblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgfVxuXG4gIHZhciBuZXdBY3RpdmVJbmRleCA9IGFjdGl2ZUluZGV4ICsgMTtcblxuICBpZiAodHlwZW9mIHNsaWRlcyA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gc2xpZGVzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChzbGlkZXNbaV0pICR3cmFwcGVyRWwucHJlcGVuZChzbGlkZXNbaV0pO1xuICAgIH1cblxuICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXggKyBzbGlkZXMubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgICR3cmFwcGVyRWwucHJlcGVuZChzbGlkZXMpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgfVxuXG4gIGlmICghKHBhcmFtcy5vYnNlcnZlciAmJiBzd2lwZXIuc3VwcG9ydC5vYnNlcnZlcikpIHtcbiAgICBzd2lwZXIudXBkYXRlKCk7XG4gIH1cblxuICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCwgMCwgZmFsc2UpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZFNsaWRlKGluZGV4LCBzbGlkZXMpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciAkd3JhcHBlckVsID0gc3dpcGVyLiR3cmFwcGVyRWwsXG4gICAgICBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXg7XG4gIHZhciBhY3RpdmVJbmRleEJ1ZmZlciA9IGFjdGl2ZUluZGV4O1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGFjdGl2ZUluZGV4QnVmZmVyIC09IHN3aXBlci5sb29wZWRTbGlkZXM7XG4gICAgc3dpcGVyLmxvb3BEZXN0cm95KCk7XG4gICAgc3dpcGVyLnNsaWRlcyA9ICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyk7XG4gIH1cblxuICB2YXIgYmFzZUxlbmd0aCA9IHN3aXBlci5zbGlkZXMubGVuZ3RoO1xuXG4gIGlmIChpbmRleCA8PSAwKSB7XG4gICAgc3dpcGVyLnByZXBlbmRTbGlkZShzbGlkZXMpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmRleCA+PSBiYXNlTGVuZ3RoKSB7XG4gICAgc3dpcGVyLmFwcGVuZFNsaWRlKHNsaWRlcyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXIgPiBpbmRleCA/IGFjdGl2ZUluZGV4QnVmZmVyICsgMSA6IGFjdGl2ZUluZGV4QnVmZmVyO1xuICB2YXIgc2xpZGVzQnVmZmVyID0gW107XG5cbiAgZm9yICh2YXIgaSA9IGJhc2VMZW5ndGggLSAxOyBpID49IGluZGV4OyBpIC09IDEpIHtcbiAgICB2YXIgY3VycmVudFNsaWRlID0gc3dpcGVyLnNsaWRlcy5lcShpKTtcbiAgICBjdXJyZW50U2xpZGUucmVtb3ZlKCk7XG4gICAgc2xpZGVzQnVmZmVyLnVuc2hpZnQoY3VycmVudFNsaWRlKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc2xpZGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXMpIHtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgc2xpZGVzLmxlbmd0aDsgX2kgKz0gMSkge1xuICAgICAgaWYgKHNsaWRlc1tfaV0pICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlc1tfaV0pO1xuICAgIH1cblxuICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXIgPiBpbmRleCA/IGFjdGl2ZUluZGV4QnVmZmVyICsgc2xpZGVzLmxlbmd0aCA6IGFjdGl2ZUluZGV4QnVmZmVyO1xuICB9IGVsc2Uge1xuICAgICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlcyk7XG4gIH1cblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBzbGlkZXNCdWZmZXIubGVuZ3RoOyBfaTIgKz0gMSkge1xuICAgICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlc0J1ZmZlcltfaTJdKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gIH1cblxuICBpZiAoIShwYXJhbXMub2JzZXJ2ZXIgJiYgc3dpcGVyLnN1cHBvcnQub2JzZXJ2ZXIpKSB7XG4gICAgc3dpcGVyLnVwZGF0ZSgpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgc3dpcGVyLnNsaWRlVG8obmV3QWN0aXZlSW5kZXggKyBzd2lwZXIubG9vcGVkU2xpZGVzLCAwLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVyLnNsaWRlVG8obmV3QWN0aXZlSW5kZXgsIDAsIGZhbHNlKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbW92ZVNsaWRlKHNsaWRlc0luZGV4ZXMpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgJHdyYXBwZXJFbCA9IHN3aXBlci4kd3JhcHBlckVsLFxuICAgICAgYWN0aXZlSW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXg7XG4gIHZhciBhY3RpdmVJbmRleEJ1ZmZlciA9IGFjdGl2ZUluZGV4O1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIGFjdGl2ZUluZGV4QnVmZmVyIC09IHN3aXBlci5sb29wZWRTbGlkZXM7XG4gICAgc3dpcGVyLmxvb3BEZXN0cm95KCk7XG4gICAgc3dpcGVyLnNsaWRlcyA9ICR3cmFwcGVyRWwuY2hpbGRyZW4oXCIuXCIgKyBwYXJhbXMuc2xpZGVDbGFzcyk7XG4gIH1cblxuICB2YXIgbmV3QWN0aXZlSW5kZXggPSBhY3RpdmVJbmRleEJ1ZmZlcjtcbiAgdmFyIGluZGV4VG9SZW1vdmU7XG5cbiAgaWYgKHR5cGVvZiBzbGlkZXNJbmRleGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXNJbmRleGVzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXNJbmRleGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBpbmRleFRvUmVtb3ZlID0gc2xpZGVzSW5kZXhlc1tpXTtcbiAgICAgIGlmIChzd2lwZXIuc2xpZGVzW2luZGV4VG9SZW1vdmVdKSBzd2lwZXIuc2xpZGVzLmVxKGluZGV4VG9SZW1vdmUpLnJlbW92ZSgpO1xuICAgICAgaWYgKGluZGV4VG9SZW1vdmUgPCBuZXdBY3RpdmVJbmRleCkgbmV3QWN0aXZlSW5kZXggLT0gMTtcbiAgICB9XG5cbiAgICBuZXdBY3RpdmVJbmRleCA9IE1hdGgubWF4KG5ld0FjdGl2ZUluZGV4LCAwKTtcbiAgfSBlbHNlIHtcbiAgICBpbmRleFRvUmVtb3ZlID0gc2xpZGVzSW5kZXhlcztcbiAgICBpZiAoc3dpcGVyLnNsaWRlc1tpbmRleFRvUmVtb3ZlXSkgc3dpcGVyLnNsaWRlcy5lcShpbmRleFRvUmVtb3ZlKS5yZW1vdmUoKTtcbiAgICBpZiAoaW5kZXhUb1JlbW92ZSA8IG5ld0FjdGl2ZUluZGV4KSBuZXdBY3RpdmVJbmRleCAtPSAxO1xuICAgIG5ld0FjdGl2ZUluZGV4ID0gTWF0aC5tYXgobmV3QWN0aXZlSW5kZXgsIDApO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgfVxuXG4gIGlmICghKHBhcmFtcy5vYnNlcnZlciAmJiBzd2lwZXIuc3VwcG9ydC5vYnNlcnZlcikpIHtcbiAgICBzd2lwZXIudXBkYXRlKCk7XG4gIH1cblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCArIHN3aXBlci5sb29wZWRTbGlkZXMsIDAsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCwgMCwgZmFsc2UpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVtb3ZlQWxsU2xpZGVzKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIHNsaWRlc0luZGV4ZXMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN3aXBlci5zbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBzbGlkZXNJbmRleGVzLnB1c2goaSk7XG4gIH1cblxuICBzd2lwZXIucmVtb3ZlU2xpZGUoc2xpZGVzSW5kZXhlcyk7XG59IiwiaW1wb3J0IHNldEJyZWFrcG9pbnQgZnJvbSAnLi9zZXRCcmVha3BvaW50JztcbmltcG9ydCBnZXRCcmVha3BvaW50IGZyb20gJy4vZ2V0QnJlYWtwb2ludCc7XG5leHBvcnQgZGVmYXVsdCB7XG4gIHNldEJyZWFrcG9pbnQ6IHNldEJyZWFrcG9pbnQsXG4gIGdldEJyZWFrcG9pbnQ6IGdldEJyZWFrcG9pbnRcbn07IiwiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0QnJlYWtwb2ludCgpIHtcbiAgdmFyIHN3aXBlciA9IHRoaXM7XG4gIHZhciBhY3RpdmVJbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCxcbiAgICAgIGluaXRpYWxpemVkID0gc3dpcGVyLmluaXRpYWxpemVkLFxuICAgICAgX3N3aXBlciRsb29wZWRTbGlkZXMgPSBzd2lwZXIubG9vcGVkU2xpZGVzLFxuICAgICAgbG9vcGVkU2xpZGVzID0gX3N3aXBlciRsb29wZWRTbGlkZXMgPT09IHZvaWQgMCA/IDAgOiBfc3dpcGVyJGxvb3BlZFNsaWRlcyxcbiAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICAkZWwgPSBzd2lwZXIuJGVsO1xuICB2YXIgYnJlYWtwb2ludHMgPSBwYXJhbXMuYnJlYWtwb2ludHM7XG4gIGlmICghYnJlYWtwb2ludHMgfHwgYnJlYWtwb2ludHMgJiYgT2JqZWN0LmtleXMoYnJlYWtwb2ludHMpLmxlbmd0aCA9PT0gMCkgcmV0dXJuOyAvLyBHZXQgYnJlYWtwb2ludCBmb3Igd2luZG93IHdpZHRoIGFuZCB1cGRhdGUgcGFyYW1ldGVyc1xuXG4gIHZhciBicmVha3BvaW50ID0gc3dpcGVyLmdldEJyZWFrcG9pbnQoYnJlYWtwb2ludHMpO1xuXG4gIGlmIChicmVha3BvaW50ICYmIHN3aXBlci5jdXJyZW50QnJlYWtwb2ludCAhPT0gYnJlYWtwb2ludCkge1xuICAgIHZhciBicmVha3BvaW50T25seVBhcmFtcyA9IGJyZWFrcG9pbnQgaW4gYnJlYWtwb2ludHMgPyBicmVha3BvaW50c1ticmVha3BvaW50XSA6IHVuZGVmaW5lZDtcblxuICAgIGlmIChicmVha3BvaW50T25seVBhcmFtcykge1xuICAgICAgWydzbGlkZXNQZXJWaWV3JywgJ3NwYWNlQmV0d2VlbicsICdzbGlkZXNQZXJHcm91cCcsICdzbGlkZXNQZXJHcm91cFNraXAnLCAnc2xpZGVzUGVyQ29sdW1uJ10uZm9yRWFjaChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgdmFyIHBhcmFtVmFsdWUgPSBicmVha3BvaW50T25seVBhcmFtc1twYXJhbV07XG4gICAgICAgIGlmICh0eXBlb2YgcGFyYW1WYWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcblxuICAgICAgICBpZiAocGFyYW0gPT09ICdzbGlkZXNQZXJWaWV3JyAmJiAocGFyYW1WYWx1ZSA9PT0gJ0FVVE8nIHx8IHBhcmFtVmFsdWUgPT09ICdhdXRvJykpIHtcbiAgICAgICAgICBicmVha3BvaW50T25seVBhcmFtc1twYXJhbV0gPSAnYXV0byc7XG4gICAgICAgIH0gZWxzZSBpZiAocGFyYW0gPT09ICdzbGlkZXNQZXJWaWV3Jykge1xuICAgICAgICAgIGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXSA9IHBhcnNlRmxvYXQocGFyYW1WYWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYnJlYWtwb2ludE9ubHlQYXJhbXNbcGFyYW1dID0gcGFyc2VJbnQocGFyYW1WYWx1ZSwgMTApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgYnJlYWtwb2ludFBhcmFtcyA9IGJyZWFrcG9pbnRPbmx5UGFyYW1zIHx8IHN3aXBlci5vcmlnaW5hbFBhcmFtcztcbiAgICB2YXIgd2FzTXVsdGlSb3cgPSBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMTtcbiAgICB2YXIgaXNNdWx0aVJvdyA9IGJyZWFrcG9pbnRQYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMTtcblxuICAgIGlmICh3YXNNdWx0aVJvdyAmJiAhaXNNdWx0aVJvdykge1xuICAgICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgXCJtdWx0aXJvdyBcIiArIHBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgXCJtdWx0aXJvdy1jb2x1bW5cIik7XG4gICAgICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbiAgICB9IGVsc2UgaWYgKCF3YXNNdWx0aVJvdyAmJiBpc011bHRpUm93KSB7XG4gICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIm11bHRpcm93XCIpO1xuXG4gICAgICBpZiAoYnJlYWtwb2ludFBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAnY29sdW1uJykge1xuICAgICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBcIm11bHRpcm93LWNvbHVtblwiKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLmVtaXRDb250YWluZXJDbGFzc2VzKCk7XG4gICAgfVxuXG4gICAgdmFyIGRpcmVjdGlvbkNoYW5nZWQgPSBicmVha3BvaW50UGFyYW1zLmRpcmVjdGlvbiAmJiBicmVha3BvaW50UGFyYW1zLmRpcmVjdGlvbiAhPT0gcGFyYW1zLmRpcmVjdGlvbjtcbiAgICB2YXIgbmVlZHNSZUxvb3AgPSBwYXJhbXMubG9vcCAmJiAoYnJlYWtwb2ludFBhcmFtcy5zbGlkZXNQZXJWaWV3ICE9PSBwYXJhbXMuc2xpZGVzUGVyVmlldyB8fCBkaXJlY3Rpb25DaGFuZ2VkKTtcblxuICAgIGlmIChkaXJlY3Rpb25DaGFuZ2VkICYmIGluaXRpYWxpemVkKSB7XG4gICAgICBzd2lwZXIuY2hhbmdlRGlyZWN0aW9uKCk7XG4gICAgfVxuXG4gICAgZXh0ZW5kKHN3aXBlci5wYXJhbXMsIGJyZWFrcG9pbnRQYXJhbXMpO1xuICAgIGV4dGVuZChzd2lwZXIsIHtcbiAgICAgIGFsbG93VG91Y2hNb3ZlOiBzd2lwZXIucGFyYW1zLmFsbG93VG91Y2hNb3ZlLFxuICAgICAgYWxsb3dTbGlkZU5leHQ6IHN3aXBlci5wYXJhbXMuYWxsb3dTbGlkZU5leHQsXG4gICAgICBhbGxvd1NsaWRlUHJldjogc3dpcGVyLnBhcmFtcy5hbGxvd1NsaWRlUHJldlxuICAgIH0pO1xuICAgIHN3aXBlci5jdXJyZW50QnJlYWtwb2ludCA9IGJyZWFrcG9pbnQ7XG4gICAgc3dpcGVyLmVtaXQoJ19iZWZvcmVCcmVha3BvaW50JywgYnJlYWtwb2ludFBhcmFtcyk7XG5cbiAgICBpZiAobmVlZHNSZUxvb3AgJiYgaW5pdGlhbGl6ZWQpIHtcbiAgICAgIHN3aXBlci5sb29wRGVzdHJveSgpO1xuICAgICAgc3dpcGVyLmxvb3BDcmVhdGUoKTtcbiAgICAgIHN3aXBlci51cGRhdGVTbGlkZXMoKTtcbiAgICAgIHN3aXBlci5zbGlkZVRvKGFjdGl2ZUluZGV4IC0gbG9vcGVkU2xpZGVzICsgc3dpcGVyLmxvb3BlZFNsaWRlcywgMCwgZmFsc2UpO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdicmVha3BvaW50JywgYnJlYWtwb2ludFBhcmFtcyk7XG4gIH1cbn0iLCJpbXBvcnQgeyBnZXRXaW5kb3cgfSBmcm9tICdzc3Itd2luZG93JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEJyZWFrcG9pbnRzKGJyZWFrcG9pbnRzKSB7XG4gIHZhciB3aW5kb3cgPSBnZXRXaW5kb3coKTsgLy8gR2V0IGJyZWFrcG9pbnQgZm9yIHdpbmRvdyB3aWR0aFxuXG4gIGlmICghYnJlYWtwb2ludHMpIHJldHVybiB1bmRlZmluZWQ7XG4gIHZhciBicmVha3BvaW50ID0gZmFsc2U7XG4gIHZhciBwb2ludHMgPSBPYmplY3Qua2V5cyhicmVha3BvaW50cykubWFwKGZ1bmN0aW9uIChwb2ludCkge1xuICAgIGlmICh0eXBlb2YgcG9pbnQgPT09ICdzdHJpbmcnICYmIHBvaW50LmluZGV4T2YoJ0AnKSA9PT0gMCkge1xuICAgICAgdmFyIG1pblJhdGlvID0gcGFyc2VGbG9hdChwb2ludC5zdWJzdHIoMSkpO1xuICAgICAgdmFyIHZhbHVlID0gd2luZG93LmlubmVySGVpZ2h0ICogbWluUmF0aW87XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIHBvaW50OiBwb2ludFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHBvaW50LFxuICAgICAgcG9pbnQ6IHBvaW50XG4gICAgfTtcbiAgfSk7XG4gIHBvaW50cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIHBhcnNlSW50KGEudmFsdWUsIDEwKSAtIHBhcnNlSW50KGIudmFsdWUsIDEwKTtcbiAgfSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgX3BvaW50cyRpID0gcG9pbnRzW2ldLFxuICAgICAgICBwb2ludCA9IF9wb2ludHMkaS5wb2ludCxcbiAgICAgICAgdmFsdWUgPSBfcG9pbnRzJGkudmFsdWU7XG5cbiAgICBpZiAodmFsdWUgPD0gd2luZG93LmlubmVyV2lkdGgpIHtcbiAgICAgIGJyZWFrcG9pbnQgPSBwb2ludDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnJlYWtwb2ludCB8fCAnbWF4Jztcbn0iLCJpbXBvcnQgYWRkQ2xhc3NlcyBmcm9tICcuL2FkZENsYXNzZXMnO1xuaW1wb3J0IHJlbW92ZUNsYXNzZXMgZnJvbSAnLi9yZW1vdmVDbGFzc2VzJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgYWRkQ2xhc3NlczogYWRkQ2xhc3NlcyxcbiAgcmVtb3ZlQ2xhc3NlczogcmVtb3ZlQ2xhc3Nlc1xufTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGRDbGFzc2VzKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyIGNsYXNzTmFtZXMgPSBzd2lwZXIuY2xhc3NOYW1lcyxcbiAgICAgIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMsXG4gICAgICBydGwgPSBzd2lwZXIucnRsLFxuICAgICAgJGVsID0gc3dpcGVyLiRlbCxcbiAgICAgIGRldmljZSA9IHN3aXBlci5kZXZpY2U7XG4gIHZhciBzdWZmaXhlcyA9IFtdO1xuICBzdWZmaXhlcy5wdXNoKCdpbml0aWFsaXplZCcpO1xuICBzdWZmaXhlcy5wdXNoKHBhcmFtcy5kaXJlY3Rpb24pO1xuXG4gIGlmIChwYXJhbXMuZnJlZU1vZGUpIHtcbiAgICBzdWZmaXhlcy5wdXNoKCdmcmVlLW1vZGUnKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuYXV0b0hlaWdodCkge1xuICAgIHN1ZmZpeGVzLnB1c2goJ2F1dG9oZWlnaHQnKTtcbiAgfVxuXG4gIGlmIChydGwpIHtcbiAgICBzdWZmaXhlcy5wdXNoKCdydGwnKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMSkge1xuICAgIHN1ZmZpeGVzLnB1c2goJ211bHRpcm93Jyk7XG5cbiAgICBpZiAocGFyYW1zLnNsaWRlc1BlckNvbHVtbkZpbGwgPT09ICdjb2x1bW4nKSB7XG4gICAgICBzdWZmaXhlcy5wdXNoKCdtdWx0aXJvdy1jb2x1bW4nKTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGV2aWNlLmFuZHJvaWQpIHtcbiAgICBzdWZmaXhlcy5wdXNoKCdhbmRyb2lkJyk7XG4gIH1cblxuICBpZiAoZGV2aWNlLmlvcykge1xuICAgIHN1ZmZpeGVzLnB1c2goJ2lvcycpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgc3VmZml4ZXMucHVzaCgnY3NzLW1vZGUnKTtcbiAgfVxuXG4gIHN1ZmZpeGVzLmZvckVhY2goZnVuY3Rpb24gKHN1ZmZpeCkge1xuICAgIGNsYXNzTmFtZXMucHVzaChwYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIHN1ZmZpeCk7XG4gIH0pO1xuICAkZWwuYWRkQ2xhc3MoY2xhc3NOYW1lcy5qb2luKCcgJykpO1xuICBzd2lwZXIuZW1pdENvbnRhaW5lckNsYXNzZXMoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVDbGFzc2VzKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgdmFyICRlbCA9IHN3aXBlci4kZWwsXG4gICAgICBjbGFzc05hbWVzID0gc3dpcGVyLmNsYXNzTmFtZXM7XG4gICRlbC5yZW1vdmVDbGFzcyhjbGFzc05hbWVzLmpvaW4oJyAnKSk7XG4gIHN3aXBlci5lbWl0Q29udGFpbmVyQ2xhc3NlcygpO1xufSIsImltcG9ydCBsb2FkSW1hZ2UgZnJvbSAnLi9sb2FkSW1hZ2UnO1xuaW1wb3J0IHByZWxvYWRJbWFnZXMgZnJvbSAnLi9wcmVsb2FkSW1hZ2VzJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbG9hZEltYWdlOiBsb2FkSW1hZ2UsXG4gIHByZWxvYWRJbWFnZXM6IHByZWxvYWRJbWFnZXNcbn07IiwiaW1wb3J0IHsgZ2V0V2luZG93IH0gZnJvbSAnc3NyLXdpbmRvdyc7XG5pbXBvcnQgJCBmcm9tICcuLi8uLi8uLi91dGlscy9kb20nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9hZEltYWdlKGltYWdlRWwsIHNyYywgc3Jjc2V0LCBzaXplcywgY2hlY2tGb3JDb21wbGV0ZSwgY2FsbGJhY2spIHtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdygpO1xuICB2YXIgaW1hZ2U7XG5cbiAgZnVuY3Rpb24gb25SZWFkeSgpIHtcbiAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gIH1cblxuICB2YXIgaXNQaWN0dXJlID0gJChpbWFnZUVsKS5wYXJlbnQoJ3BpY3R1cmUnKVswXTtcblxuICBpZiAoIWlzUGljdHVyZSAmJiAoIWltYWdlRWwuY29tcGxldGUgfHwgIWNoZWNrRm9yQ29tcGxldGUpKSB7XG4gICAgaWYgKHNyYykge1xuICAgICAgaW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKCk7XG4gICAgICBpbWFnZS5vbmxvYWQgPSBvblJlYWR5O1xuICAgICAgaW1hZ2Uub25lcnJvciA9IG9uUmVhZHk7XG5cbiAgICAgIGlmIChzaXplcykge1xuICAgICAgICBpbWFnZS5zaXplcyA9IHNpemVzO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3Jjc2V0KSB7XG4gICAgICAgIGltYWdlLnNyY3NldCA9IHNyY3NldDtcbiAgICAgIH1cblxuICAgICAgaWYgKHNyYykge1xuICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG9uUmVhZHkoKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gaW1hZ2UgYWxyZWFkeSBsb2FkZWQuLi5cbiAgICBvblJlYWR5KCk7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKCkge1xuICB2YXIgc3dpcGVyID0gdGhpcztcbiAgc3dpcGVyLmltYWdlc1RvTG9hZCA9IHN3aXBlci4kZWwuZmluZCgnaW1nJyk7XG5cbiAgZnVuY3Rpb24gb25SZWFkeSgpIHtcbiAgICBpZiAodHlwZW9mIHN3aXBlciA9PT0gJ3VuZGVmaW5lZCcgfHwgc3dpcGVyID09PSBudWxsIHx8ICFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICAgIGlmIChzd2lwZXIuaW1hZ2VzTG9hZGVkICE9PSB1bmRlZmluZWQpIHN3aXBlci5pbWFnZXNMb2FkZWQgKz0gMTtcblxuICAgIGlmIChzd2lwZXIuaW1hZ2VzTG9hZGVkID09PSBzd2lwZXIuaW1hZ2VzVG9Mb2FkLmxlbmd0aCkge1xuICAgICAgaWYgKHN3aXBlci5wYXJhbXMudXBkYXRlT25JbWFnZXNSZWFkeSkgc3dpcGVyLnVwZGF0ZSgpO1xuICAgICAgc3dpcGVyLmVtaXQoJ2ltYWdlc1JlYWR5Jyk7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzd2lwZXIuaW1hZ2VzVG9Mb2FkLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIGltYWdlRWwgPSBzd2lwZXIuaW1hZ2VzVG9Mb2FkW2ldO1xuICAgIHN3aXBlci5sb2FkSW1hZ2UoaW1hZ2VFbCwgaW1hZ2VFbC5jdXJyZW50U3JjIHx8IGltYWdlRWwuZ2V0QXR0cmlidXRlKCdzcmMnKSwgaW1hZ2VFbC5zcmNzZXQgfHwgaW1hZ2VFbC5nZXRBdHRyaWJ1dGUoJ3NyY3NldCcpLCBpbWFnZUVsLnNpemVzIHx8IGltYWdlRWwuZ2V0QXR0cmlidXRlKCdzaXplcycpLCB0cnVlLCBvblJlYWR5KTtcbiAgfVxufSIsIi8qIHVuZGVyc2NvcmUgaW4gbmFtZSAtPiB3YXRjaCBmb3IgY2hhbmdlcyAqL1xudmFyIHBhcmFtc0xpc3QgPSBbJ2luaXQnLCAnX2RpcmVjdGlvbicsICd0b3VjaEV2ZW50c1RhcmdldCcsICdpbml0aWFsU2xpZGUnLCAnX3NwZWVkJywgJ2Nzc01vZGUnLCAndXBkYXRlT25XaW5kb3dSZXNpemUnLCAnbmVzdGVkJywgJ193aWR0aCcsICdfaGVpZ2h0JywgJ3ByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbicsICd1c2VyQWdlbnQnLCAndXJsJywgJ19lZGdlU3dpcGVEZXRlY3Rpb24nLCAnX2VkZ2VTd2lwZVRocmVzaG9sZCcsICdfZnJlZU1vZGUnLCAnX2ZyZWVNb2RlTW9tZW50dW0nLCAnX2ZyZWVNb2RlTW9tZW50dW1SYXRpbycsICdfZnJlZU1vZGVNb21lbnR1bUJvdW5jZScsICdfZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvJywgJ19mcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbycsICdfZnJlZU1vZGVTdGlja3knLCAnX2ZyZWVNb2RlTWluaW11bVZlbG9jaXR5JywgJ19hdXRvSGVpZ2h0JywgJ3NldFdyYXBwZXJTaXplJywgJ3ZpcnR1YWxUcmFuc2xhdGUnLCAnX2VmZmVjdCcsICdicmVha3BvaW50cycsICdfc3BhY2VCZXR3ZWVuJywgJ19zbGlkZXNQZXJWaWV3JywgJ19zbGlkZXNQZXJDb2x1bW4nLCAnX3NsaWRlc1BlckNvbHVtbkZpbGwnLCAnX3NsaWRlc1Blckdyb3VwJywgJ19zbGlkZXNQZXJHcm91cFNraXAnLCAnX2NlbnRlcmVkU2xpZGVzJywgJ19jZW50ZXJlZFNsaWRlc0JvdW5kcycsICdfc2xpZGVzT2Zmc2V0QmVmb3JlJywgJ19zbGlkZXNPZmZzZXRBZnRlcicsICdub3JtYWxpemVTbGlkZUluZGV4JywgJ19jZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMnLCAnX3dhdGNoT3ZlcmZsb3cnLCAncm91bmRMZW5ndGhzJywgJ3RvdWNoUmF0aW8nLCAndG91Y2hBbmdsZScsICdzaW11bGF0ZVRvdWNoJywgJ19zaG9ydFN3aXBlcycsICdfbG9uZ1N3aXBlcycsICdsb25nU3dpcGVzUmF0aW8nLCAnbG9uZ1N3aXBlc01zJywgJ19mb2xsb3dGaW5nZXInLCAnYWxsb3dUb3VjaE1vdmUnLCAnX3RocmVzaG9sZCcsICd0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24nLCAndG91Y2hTdGFydFByZXZlbnREZWZhdWx0JywgJ3RvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0JywgJ3RvdWNoUmVsZWFzZU9uRWRnZXMnLCAndW5pcXVlTmF2RWxlbWVudHMnLCAnX3Jlc2lzdGFuY2UnLCAnX3Jlc2lzdGFuY2VSYXRpbycsICdfd2F0Y2hTbGlkZXNQcm9ncmVzcycsICdfd2F0Y2hTbGlkZXNWaXNpYmlsaXR5JywgJ19ncmFiQ3Vyc29yJywgJ3ByZXZlbnRDbGlja3MnLCAncHJldmVudENsaWNrc1Byb3BhZ2F0aW9uJywgJ19zbGlkZVRvQ2xpY2tlZFNsaWRlJywgJ19wcmVsb2FkSW1hZ2VzJywgJ3VwZGF0ZU9uSW1hZ2VzUmVhZHknLCAnX2xvb3AnLCAnX2xvb3BBZGRpdGlvbmFsU2xpZGVzJywgJ19sb29wZWRTbGlkZXMnLCAnX2xvb3BGaWxsR3JvdXBXaXRoQmxhbmsnLCAnbG9vcFByZXZlbnRzU2xpZGUnLCAnX2FsbG93U2xpZGVQcmV2JywgJ19hbGxvd1NsaWRlTmV4dCcsICdfc3dpcGVIYW5kbGVyJywgJ19ub1N3aXBpbmcnLCAnbm9Td2lwaW5nQ2xhc3MnLCAnbm9Td2lwaW5nU2VsZWN0b3InLCAncGFzc2l2ZUxpc3RlbmVycycsICdjb250YWluZXJNb2RpZmllckNsYXNzJywgJ3NsaWRlQ2xhc3MnLCAnc2xpZGVCbGFua0NsYXNzJywgJ3NsaWRlQWN0aXZlQ2xhc3MnLCAnc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcycsICdzbGlkZVZpc2libGVDbGFzcycsICdzbGlkZUR1cGxpY2F0ZUNsYXNzJywgJ3NsaWRlTmV4dENsYXNzJywgJ3NsaWRlRHVwbGljYXRlTmV4dENsYXNzJywgJ3NsaWRlUHJldkNsYXNzJywgJ3NsaWRlRHVwbGljYXRlUHJldkNsYXNzJywgJ3dyYXBwZXJDbGFzcycsICdydW5DYWxsYmFja3NPbkluaXQnLCAvLyBtb2R1bGVzXG4nYTExeScsICdhdXRvcGxheScsICdfY29udHJvbGxlcicsICdjb3ZlcmZsb3dFZmZlY3QnLCAnY3ViZUVmZmVjdCcsICdmYWRlRWZmZWN0JywgJ2ZsaXBFZmZlY3QnLCAnaGFzaE5hdmlnYXRpb24nLCAnaGlzdG9yeScsICdrZXlib2FyZCcsICdsYXp5JywgJ21vdXNld2hlZWwnLCAnX25hdmlnYXRpb24nLCAnX3BhZ2luYXRpb24nLCAncGFyYWxsYXgnLCAnX3Njcm9sbGJhcicsICdfdGh1bWJzJywgJ3ZpcnR1YWwnLCAnem9vbSddO1xuZXhwb3J0IHsgcGFyYW1zTGlzdCB9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuXG5pbXBvcnQgU3dpcGVyIGZyb20gJy4uLy4uL2NvcmUnO1xuXG5mdW5jdGlvbiBjYWxjTG9vcGVkU2xpZGVzKHNsaWRlcywgc3dpcGVyUGFyYW1zKSB7XG4gIHZhciBzbGlkZXNQZXJWaWV3UGFyYW1zID0gc3dpcGVyUGFyYW1zLnNsaWRlc1BlclZpZXc7XG5cbiAgaWYgKHN3aXBlclBhcmFtcy5icmVha3BvaW50cykge1xuICAgIHZhciBicmVha3BvaW50ID0gU3dpcGVyLnByb3RvdHlwZS5nZXRCcmVha3BvaW50KHN3aXBlclBhcmFtcy5icmVha3BvaW50cyk7XG4gICAgdmFyIGJyZWFrcG9pbnRPbmx5UGFyYW1zID0gYnJlYWtwb2ludCBpbiBzd2lwZXJQYXJhbXMuYnJlYWtwb2ludHMgPyBzd2lwZXJQYXJhbXMuYnJlYWtwb2ludHNbYnJlYWtwb2ludF0gOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoYnJlYWtwb2ludE9ubHlQYXJhbXMgJiYgYnJlYWtwb2ludE9ubHlQYXJhbXMuc2xpZGVzUGVyVmlldykge1xuICAgICAgc2xpZGVzUGVyVmlld1BhcmFtcyA9IGJyZWFrcG9pbnRPbmx5UGFyYW1zLnNsaWRlc1BlclZpZXc7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxvb3BlZFNsaWRlcyA9IE1hdGguY2VpbChwYXJzZUZsb2F0KHN3aXBlclBhcmFtcy5sb29wZWRTbGlkZXMgfHwgc2xpZGVzUGVyVmlld1BhcmFtcywgMTApKTtcbiAgbG9vcGVkU2xpZGVzICs9IHN3aXBlclBhcmFtcy5sb29wQWRkaXRpb25hbFNsaWRlcztcblxuICBpZiAobG9vcGVkU2xpZGVzID4gc2xpZGVzLmxlbmd0aCkge1xuICAgIGxvb3BlZFNsaWRlcyA9IHNsaWRlcy5sZW5ndGg7XG4gIH1cblxuICByZXR1cm4gbG9vcGVkU2xpZGVzO1xufVxuXG5mdW5jdGlvbiByZW5kZXJMb29wKHN3aXBlciwgc2xpZGVzLCBzd2lwZXJQYXJhbXMpIHtcbiAgdmFyIG1vZGlmaWVkU2xpZGVzID0gc2xpZGVzLm1hcChmdW5jdGlvbiAoY2hpbGQsIGluZGV4KSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgIHN3aXBlcjogc3dpcGVyLFxuICAgICAgJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JzogaW5kZXhcbiAgICB9KTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gZHVwbGljYXRlU2xpZGUoY2hpbGQsIGluZGV4LCBwb3NpdGlvbikge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICBrZXk6IGNoaWxkLmtleSArIFwiLWR1cGxpY2F0ZS1cIiArIGluZGV4ICsgXCItXCIgKyBwb3NpdGlvbixcbiAgICAgIGNsYXNzTmFtZTogKGNoaWxkLnByb3BzLmNsYXNzTmFtZSB8fCAnJykgKyBcIiBcIiArIHN3aXBlclBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzXG4gICAgfSk7XG4gIH1cblxuICBpZiAoc3dpcGVyUGFyYW1zLmxvb3BGaWxsR3JvdXBXaXRoQmxhbmspIHtcbiAgICB2YXIgYmxhbmtTbGlkZXNOdW0gPSBzd2lwZXJQYXJhbXMuc2xpZGVzUGVyR3JvdXAgLSBtb2RpZmllZFNsaWRlcy5sZW5ndGggJSBzd2lwZXJQYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG5cbiAgICBpZiAoYmxhbmtTbGlkZXNOdW0gIT09IHN3aXBlclBhcmFtcy5zbGlkZXNQZXJHcm91cCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibGFua1NsaWRlc051bTsgaSArPSAxKSB7XG4gICAgICAgIHZhciBibGFua1NsaWRlID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgIGNsYXNzTmFtZTogc3dpcGVyUGFyYW1zLnNsaWRlQ2xhc3MgKyBcIiBcIiArIHN3aXBlclBhcmFtcy5zbGlkZUJsYW5rQ2xhc3NcbiAgICAgICAgfSk7XG4gICAgICAgIG1vZGlmaWVkU2xpZGVzLnB1c2goYmxhbmtTbGlkZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKHN3aXBlclBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgJiYgIXN3aXBlclBhcmFtcy5sb29wZWRTbGlkZXMpIHtcbiAgICBzd2lwZXJQYXJhbXMubG9vcGVkU2xpZGVzID0gbW9kaWZpZWRTbGlkZXMubGVuZ3RoO1xuICB9XG5cbiAgdmFyIGxvb3BlZFNsaWRlcyA9IGNhbGNMb29wZWRTbGlkZXMobW9kaWZpZWRTbGlkZXMsIHN3aXBlclBhcmFtcyk7XG4gIHZhciBwcmVwZW5kU2xpZGVzID0gW107XG4gIHZhciBhcHBlbmRTbGlkZXMgPSBbXTtcbiAgbW9kaWZpZWRTbGlkZXMuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIGluZGV4KSB7XG4gICAgaWYgKGluZGV4IDwgbG9vcGVkU2xpZGVzKSB7XG4gICAgICBhcHBlbmRTbGlkZXMucHVzaChkdXBsaWNhdGVTbGlkZShjaGlsZCwgaW5kZXgsICdwcmVwZW5kJykpO1xuICAgIH1cblxuICAgIGlmIChpbmRleCA8IG1vZGlmaWVkU2xpZGVzLmxlbmd0aCAmJiBpbmRleCA+PSBtb2RpZmllZFNsaWRlcy5sZW5ndGggLSBsb29wZWRTbGlkZXMpIHtcbiAgICAgIHByZXBlbmRTbGlkZXMucHVzaChkdXBsaWNhdGVTbGlkZShjaGlsZCwgaW5kZXgsICdhcHBlbmQnKSk7XG4gICAgfVxuICB9KTtcblxuICBpZiAoc3dpcGVyKSB7XG4gICAgc3dpcGVyLmxvb3BlZFNsaWRlcyA9IGxvb3BlZFNsaWRlcztcbiAgfVxuXG4gIHJldHVybiBbXS5jb25jYXQocHJlcGVuZFNsaWRlcywgbW9kaWZpZWRTbGlkZXMsIGFwcGVuZFNsaWRlcyk7XG59XG5cbmV4cG9ydCB7IGNhbGNMb29wZWRTbGlkZXMsIHJlbmRlckxvb3AgfTsiLCJmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZVN0YXRlLCB1c2VFZmZlY3QsIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRQYXJhbXMgfSBmcm9tICcuL2dldC1wYXJhbXMnO1xuaW1wb3J0IHsgaW5pdFN3aXBlciB9IGZyb20gJy4vaW5pdC1zd2lwZXInO1xuaW1wb3J0IHsgbmVlZHNTY3JvbGxiYXIsIG5lZWRzTmF2aWdhdGlvbiwgbmVlZHNQYWdpbmF0aW9uLCB1bmlxdWVDbGFzc2VzIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeyByZW5kZXJMb29wLCBjYWxjTG9vcGVkU2xpZGVzIH0gZnJvbSAnLi9sb29wJztcbmltcG9ydCB7IGdldENoYW5nZWRQYXJhbXMgfSBmcm9tICcuL2dldC1jaGFuZ2VkLXBhcmFtcyc7XG5pbXBvcnQgeyBnZXRDaGlsZHJlbiB9IGZyb20gJy4vZ2V0LWNoaWxkcmVuJztcbmltcG9ydCB7IHVwZGF0ZVN3aXBlciB9IGZyb20gJy4vdXBkYXRlLXN3aXBlcic7XG5pbXBvcnQgeyByZW5kZXJWaXJ0dWFsLCB1cGRhdGVPblZpcnR1YWxEYXRhIH0gZnJvbSAnLi92aXJ0dWFsJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuL3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QnO1xudmFyIFN3aXBlciA9IC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIChfdGVtcCwgZXh0ZXJuYWxFbFJlZikge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBfcmVmJHRhZyA9IF9yZWYudGFnLFxuICAgICAgVGFnID0gX3JlZiR0YWcgPT09IHZvaWQgMCA/ICdkaXYnIDogX3JlZiR0YWcsXG4gICAgICBfcmVmJHdyYXBwZXJUYWcgPSBfcmVmLndyYXBwZXJUYWcsXG4gICAgICBXcmFwcGVyVGFnID0gX3JlZiR3cmFwcGVyVGFnID09PSB2b2lkIDAgPyAnZGl2JyA6IF9yZWYkd3JhcHBlclRhZyxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICAgIG9uU3dpcGVyID0gX3JlZi5vblN3aXBlcixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJjbGFzc05hbWVcIiwgXCJ0YWdcIiwgXCJ3cmFwcGVyVGFnXCIsIFwiY2hpbGRyZW5cIiwgXCJvblN3aXBlclwiXSk7XG5cbiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKCdzd2lwZXItY29udGFpbmVyJyksXG4gICAgICBjb250YWluZXJDbGFzc2VzID0gX3VzZVN0YXRlWzBdLFxuICAgICAgc2V0Q29udGFpbmVyQ2xhc3NlcyA9IF91c2VTdGF0ZVsxXTtcblxuICB2YXIgX3VzZVN0YXRlMiA9IHVzZVN0YXRlKG51bGwpLFxuICAgICAgdmlydHVhbERhdGEgPSBfdXNlU3RhdGUyWzBdLFxuICAgICAgc2V0VmlydHVhbERhdGEgPSBfdXNlU3RhdGUyWzFdO1xuXG4gIHZhciBfdXNlU3RhdGUzID0gdXNlU3RhdGUoZmFsc2UpLFxuICAgICAgYnJlYWtwb2ludENoYW5nZWQgPSBfdXNlU3RhdGUzWzBdLFxuICAgICAgc2V0QnJlYWtwb2ludENoYW5nZWQgPSBfdXNlU3RhdGUzWzFdO1xuXG4gIHZhciBpbml0aWFsaXplZFJlZiA9IHVzZVJlZihmYWxzZSk7XG4gIHZhciBzd2lwZXJFbFJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIHN3aXBlclJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIG9sZFBhc3NlZFBhcmFtc1JlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIG9sZFNsaWRlcyA9IHVzZVJlZihudWxsKTtcbiAgdmFyIG5leHRFbFJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIHByZXZFbFJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIHBhZ2luYXRpb25FbFJlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIHNjcm9sbGJhckVsUmVmID0gdXNlUmVmKG51bGwpO1xuXG4gIHZhciBfZ2V0UGFyYW1zID0gZ2V0UGFyYW1zKHJlc3QpLFxuICAgICAgc3dpcGVyUGFyYW1zID0gX2dldFBhcmFtcy5wYXJhbXMsXG4gICAgICBwYXNzZWRQYXJhbXMgPSBfZ2V0UGFyYW1zLnBhc3NlZFBhcmFtcyxcbiAgICAgIHJlc3RQcm9wcyA9IF9nZXRQYXJhbXMucmVzdDtcblxuICB2YXIgX2dldENoaWxkcmVuID0gZ2V0Q2hpbGRyZW4oY2hpbGRyZW4pLFxuICAgICAgc2xpZGVzID0gX2dldENoaWxkcmVuLnNsaWRlcyxcbiAgICAgIHNsb3RzID0gX2dldENoaWxkcmVuLnNsb3RzO1xuXG4gIHZhciBjaGFuZ2VkUGFyYW1zID0gZ2V0Q2hhbmdlZFBhcmFtcyhwYXNzZWRQYXJhbXMsIG9sZFBhc3NlZFBhcmFtc1JlZi5jdXJyZW50LCBzbGlkZXMsIG9sZFNsaWRlcy5jdXJyZW50KTtcbiAgb2xkUGFzc2VkUGFyYW1zUmVmLmN1cnJlbnQgPSBwYXNzZWRQYXJhbXM7XG4gIG9sZFNsaWRlcy5jdXJyZW50ID0gc2xpZGVzO1xuXG4gIHZhciBvbkJlZm9yZUJyZWFrcG9pbnQgPSBmdW5jdGlvbiBvbkJlZm9yZUJyZWFrcG9pbnQoKSB7XG4gICAgc2V0QnJlYWtwb2ludENoYW5nZWQoIWJyZWFrcG9pbnRDaGFuZ2VkKTtcbiAgfTtcblxuICBPYmplY3QuYXNzaWduKHN3aXBlclBhcmFtcy5vbiwge1xuICAgIF9jb250YWluZXJDbGFzc2VzOiBmdW5jdGlvbiBfY29udGFpbmVyQ2xhc3Nlcyhzd2lwZXIsIGNsYXNzZXMpIHtcbiAgICAgIHNldENvbnRhaW5lckNsYXNzZXMoY2xhc3Nlcyk7XG4gICAgfSxcbiAgICBfc3dpcGVyOiBmdW5jdGlvbiBfc3dpcGVyKHN3aXBlcikge1xuICAgICAgc3dpcGVyLmxvb3BDcmVhdGUgPSBmdW5jdGlvbiAoKSB7fTtcblxuICAgICAgc3dpcGVyLmxvb3BEZXN0cm95ID0gZnVuY3Rpb24gKCkge307XG5cbiAgICAgIGlmIChzd2lwZXJQYXJhbXMubG9vcCkge1xuICAgICAgICBzd2lwZXIubG9vcGVkU2xpZGVzID0gY2FsY0xvb3BlZFNsaWRlcyhzbGlkZXMsIHN3aXBlclBhcmFtcyk7XG4gICAgICB9XG5cbiAgICAgIHN3aXBlclJlZi5jdXJyZW50ID0gc3dpcGVyO1xuXG4gICAgICBpZiAoc3dpcGVyLnZpcnR1YWwgJiYgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQpIHtcbiAgICAgICAgc3dpcGVyLnZpcnR1YWwuc2xpZGVzID0gc2xpZGVzO1xuICAgICAgICBzd2lwZXIucGFyYW1zLnZpcnR1YWwuY2FjaGUgPSBmYWxzZTtcbiAgICAgICAgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLnJlbmRlckV4dGVybmFsID0gc2V0VmlydHVhbERhdGE7XG4gICAgICAgIHN3aXBlci5wYXJhbXMudmlydHVhbC5yZW5kZXJFeHRlcm5hbFVwZGF0ZSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHN3aXBlclJlZi5jdXJyZW50KSB7XG4gICAgc3dpcGVyUmVmLmN1cnJlbnQub24oJ19iZWZvcmVCcmVha3BvaW50Jywgb25CZWZvcmVCcmVha3BvaW50KTtcbiAgfVxuXG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzd2lwZXJSZWYuY3VycmVudCkgc3dpcGVyUmVmLmN1cnJlbnQub2ZmKCdfYmVmb3JlQnJlYWtwb2ludCcsIG9uQmVmb3JlQnJlYWtwb2ludCk7XG4gICAgfTtcbiAgfSk7IC8vIHNldCBpbml0aWFsaXplZCBmbGFnXG5cbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWluaXRpYWxpemVkUmVmLmN1cnJlbnQgJiYgc3dpcGVyUmVmLmN1cnJlbnQpIHtcbiAgICAgIHN3aXBlclJlZi5jdXJyZW50LmVtaXRTbGlkZXNDbGFzc2VzKCk7XG4gICAgICBpbml0aWFsaXplZFJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICB9XG4gIH0pOyAvLyB3YXRjaCBmb3IgcGFyYW1zIGNoYW5nZVxuXG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChjaGFuZ2VkUGFyYW1zLmxlbmd0aCAmJiBzd2lwZXJSZWYuY3VycmVudCAmJiAhc3dpcGVyUmVmLmN1cnJlbnQuZGVzdHJveWVkKSB7XG4gICAgICB1cGRhdGVTd2lwZXIoc3dpcGVyUmVmLmN1cnJlbnQsIHNsaWRlcywgcGFzc2VkUGFyYW1zLCBjaGFuZ2VkUGFyYW1zKTtcbiAgICB9XG4gIH0pOyAvLyB1cGRhdGUgb24gdmlydHVhbCB1cGRhdGVcblxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB1cGRhdGVPblZpcnR1YWxEYXRhKHN3aXBlclJlZi5jdXJyZW50KTtcbiAgfSwgW3ZpcnR1YWxEYXRhXSk7IC8vIGluaXQgc3dpcGVyXG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGV4dGVybmFsRWxSZWYpIHtcbiAgICAgIGV4dGVybmFsRWxSZWYuY3VycmVudCA9IHN3aXBlckVsUmVmLmN1cnJlbnQ7XG4gICAgfVxuXG4gICAgaWYgKCFzd2lwZXJFbFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgaW5pdFN3aXBlcih7XG4gICAgICBlbDogc3dpcGVyRWxSZWYuY3VycmVudCxcbiAgICAgIG5leHRFbDogbmV4dEVsUmVmLmN1cnJlbnQsXG4gICAgICBwcmV2RWw6IHByZXZFbFJlZi5jdXJyZW50LFxuICAgICAgcGFnaW5hdGlvbkVsOiBwYWdpbmF0aW9uRWxSZWYuY3VycmVudCxcbiAgICAgIHNjcm9sbGJhckVsOiBzY3JvbGxiYXJFbFJlZi5jdXJyZW50XG4gICAgfSwgc3dpcGVyUGFyYW1zKTtcbiAgICBpZiAob25Td2lwZXIpIG9uU3dpcGVyKHN3aXBlclJlZi5jdXJyZW50KTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHN3aXBlclJlZi5jdXJyZW50ICYmICFzd2lwZXJSZWYuY3VycmVudC5kZXN0cm95ZWQpIHtcbiAgICAgICAgc3dpcGVyUmVmLmN1cnJlbnQuZGVzdHJveSh0cnVlLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW10pOyAvLyBieXBhc3Mgc3dpcGVyIGluc3RhbmNlIHRvIHNsaWRlc1xuXG4gIGZ1bmN0aW9uIHJlbmRlclNsaWRlcygpIHtcbiAgICBpZiAoc3dpcGVyUGFyYW1zLnZpcnR1YWwpIHtcbiAgICAgIHJldHVybiByZW5kZXJWaXJ0dWFsKHN3aXBlclJlZi5jdXJyZW50LCBzbGlkZXMsIHZpcnR1YWxEYXRhKTtcbiAgICB9XG5cbiAgICBpZiAoIXN3aXBlclBhcmFtcy5sb29wIHx8IHN3aXBlclJlZi5jdXJyZW50ICYmIHN3aXBlclJlZi5jdXJyZW50LmRlc3Ryb3llZCkge1xuICAgICAgcmV0dXJuIHNsaWRlcy5tYXAoZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgICAgc3dpcGVyOiBzd2lwZXJSZWYuY3VycmVudFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByZW5kZXJMb29wKHN3aXBlclJlZi5jdXJyZW50LCBzbGlkZXMsIHN3aXBlclBhcmFtcyk7XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7XG4gICAgcmVmOiBzd2lwZXJFbFJlZixcbiAgICBjbGFzc05hbWU6IHVuaXF1ZUNsYXNzZXMoXCJcIiArIGNvbnRhaW5lckNsYXNzZXMgKyAoY2xhc3NOYW1lID8gXCIgXCIgKyBjbGFzc05hbWUgOiAnJykpXG4gIH0sIHJlc3RQcm9wcyksIHNsb3RzWydjb250YWluZXItc3RhcnQnXSwgbmVlZHNOYXZpZ2F0aW9uKHN3aXBlclBhcmFtcykgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IHByZXZFbFJlZixcbiAgICBjbGFzc05hbWU6IFwic3dpcGVyLWJ1dHRvbi1wcmV2XCJcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IG5leHRFbFJlZixcbiAgICBjbGFzc05hbWU6IFwic3dpcGVyLWJ1dHRvbi1uZXh0XCJcbiAgfSkpLCBuZWVkc1Njcm9sbGJhcihzd2lwZXJQYXJhbXMpICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IHNjcm9sbGJhckVsUmVmLFxuICAgIGNsYXNzTmFtZTogXCJzd2lwZXItc2Nyb2xsYmFyXCJcbiAgfSksIG5lZWRzUGFnaW5hdGlvbihzd2lwZXJQYXJhbXMpICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICByZWY6IHBhZ2luYXRpb25FbFJlZixcbiAgICBjbGFzc05hbWU6IFwic3dpcGVyLXBhZ2luYXRpb25cIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoV3JhcHBlclRhZywge1xuICAgIGNsYXNzTmFtZTogXCJzd2lwZXItd3JhcHBlclwiXG4gIH0sIHNsb3RzWyd3cmFwcGVyLXN0YXJ0J10sIHJlbmRlclNsaWRlcygpLCBzbG90c1snd3JhcHBlci1lbmQnXSksIHNsb3RzWydjb250YWluZXItZW5kJ10pO1xufSk7XG5Td2lwZXIuZGlzcGxheU5hbWUgPSAnU3dpcGVyJztcbmV4cG9ydCB7IFN3aXBlciB9OyIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuaW1wb3J0IFN3aXBlciBmcm9tICcuLi8uLi9jb3JlJztcbmltcG9ydCB7IGlzT2JqZWN0LCBleHRlbmQgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IHBhcmFtc0xpc3QgfSBmcm9tICcuL3BhcmFtcy1saXN0JztcblxuZnVuY3Rpb24gZ2V0UGFyYW1zKG9iaikge1xuICBpZiAob2JqID09PSB2b2lkIDApIHtcbiAgICBvYmogPSB7fTtcbiAgfVxuXG4gIHZhciBwYXJhbXMgPSB7XG4gICAgb246IHt9XG4gIH07XG4gIHZhciBwYXNzZWRQYXJhbXMgPSB7fTtcbiAgZXh0ZW5kKHBhcmFtcywgU3dpcGVyLmRlZmF1bHRzKTtcbiAgZXh0ZW5kKHBhcmFtcywgU3dpcGVyLmV4dGVuZGVkRGVmYXVsdHMpO1xuICBwYXJhbXMuX2VtaXRDbGFzc2VzID0gdHJ1ZTtcbiAgdmFyIHJlc3QgPSB7fTtcbiAgdmFyIGFsbG93ZWRQYXJhbXMgPSBwYXJhbXNMaXN0Lm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGtleS5yZXBsYWNlKC9fLywgJycpO1xuICB9KTtcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoYWxsb3dlZFBhcmFtcy5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgaWYgKGlzT2JqZWN0KG9ialtrZXldKSkge1xuICAgICAgICBwYXJhbXNba2V5XSA9IHt9O1xuICAgICAgICBwYXNzZWRQYXJhbXNba2V5XSA9IHt9O1xuICAgICAgICBleHRlbmQocGFyYW1zW2tleV0sIG9ialtrZXldKTtcbiAgICAgICAgZXh0ZW5kKHBhc3NlZFBhcmFtc1trZXldLCBvYmpba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJhbXNba2V5XSA9IG9ialtrZXldO1xuICAgICAgICBwYXNzZWRQYXJhbXNba2V5XSA9IG9ialtrZXldO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoa2V5LnNlYXJjaCgvb25bQS1aXS8pID09PSAwICYmIHR5cGVvZiBvYmpba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcGFyYW1zLm9uW1wiXCIgKyBrZXlbMl0udG9Mb3dlckNhc2UoKSArIGtleS5zdWJzdHIoMyldID0gb2JqW2tleV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3Rba2V5XSA9IG9ialtrZXldO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB7XG4gICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgcGFzc2VkUGFyYW1zOiBwYXNzZWRQYXJhbXMsXG4gICAgcmVzdDogcmVzdFxuICB9O1xufVxuXG5leHBvcnQgeyBnZXRQYXJhbXMgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBnZXRDaGlsZHJlbihjaGlsZHJlbikge1xuICB2YXIgc2xpZGVzID0gW107XG4gIHZhciBzbG90cyA9IHtcbiAgICAnY29udGFpbmVyLXN0YXJ0JzogW10sXG4gICAgJ2NvbnRhaW5lci1lbmQnOiBbXSxcbiAgICAnd3JhcHBlci1zdGFydCc6IFtdLFxuICAgICd3cmFwcGVyLWVuZCc6IFtdXG4gIH07XG5cbiAgZnVuY3Rpb24gcHJvY2Vzc0NoaWxkcmVuKGMpIHtcbiAgICBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGMpLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICBpZiAoY2hpbGQudHlwZSA9PT0gUmVhY3QuRnJhZ21lbnQgJiYgY2hpbGQucHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgICAgcHJvY2Vzc0NoaWxkcmVuKGNoaWxkLnByb3BzLmNoaWxkcmVuKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2hpbGQudHlwZSAmJiBjaGlsZC50eXBlLmRpc3BsYXlOYW1lID09PSAnU3dpcGVyU2xpZGUnKSB7XG4gICAgICAgIHNsaWRlcy5wdXNoKGNoaWxkKTtcbiAgICAgIH0gZWxzZSBpZiAoY2hpbGQucHJvcHMgJiYgY2hpbGQucHJvcHMuc2xvdCAmJiBzbG90c1tjaGlsZC5wcm9wcy5zbG90XSkge1xuICAgICAgICBzbG90c1tjaGlsZC5wcm9wcy5zbG90XS5wdXNoKGNoaWxkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNsb3RzWydjb250YWluZXItZW5kJ10ucHVzaChjaGlsZCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcm9jZXNzQ2hpbGRyZW4oY2hpbGRyZW4pO1xuICByZXR1cm4ge1xuICAgIHNsaWRlczogc2xpZGVzLFxuICAgIHNsb3RzOiBzbG90c1xuICB9O1xufVxuXG5leHBvcnQgeyBnZXRDaGlsZHJlbiB9OyIsImltcG9ydCB7IHBhcmFtc0xpc3QgfSBmcm9tICcuL3BhcmFtcy1saXN0JztcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSAnLi91dGlscyc7XG5cbmZ1bmN0aW9uIGdldENoYW5nZWRQYXJhbXMoc3dpcGVyUGFyYW1zLCBvbGRQYXJhbXMsIGNoaWxkcmVuLCBvbGRDaGlsZHJlbikge1xuICB2YXIga2V5cyA9IFtdO1xuICBpZiAoIW9sZFBhcmFtcykgcmV0dXJuIGtleXM7XG5cbiAgdmFyIGFkZEtleSA9IGZ1bmN0aW9uIGFkZEtleShrZXkpIHtcbiAgICBpZiAoa2V5cy5pbmRleE9mKGtleSkgPCAwKSBrZXlzLnB1c2goa2V5KTtcbiAgfTtcblxuICB2YXIgb2xkQ2hpbGRyZW5LZXlzID0gb2xkQ2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZC5rZXk7XG4gIH0pO1xuICB2YXIgY2hpbGRyZW5LZXlzID0gY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZC5rZXk7XG4gIH0pO1xuICBpZiAob2xkQ2hpbGRyZW5LZXlzLmpvaW4oJycpICE9PSBjaGlsZHJlbktleXMuam9pbignJykpIGFkZEtleSgnY2hpbGRyZW4nKTtcbiAgaWYgKG9sZENoaWxkcmVuLmxlbmd0aCAhPT0gY2hpbGRyZW4ubGVuZ3RoKSBhZGRLZXkoJ2NoaWxkcmVuJyk7XG4gIHZhciB3YXRjaFBhcmFtcyA9IHBhcmFtc0xpc3QuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4ga2V5WzBdID09PSAnXyc7XG4gIH0pLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGtleS5yZXBsYWNlKC9fLywgJycpO1xuICB9KTtcbiAgd2F0Y2hQYXJhbXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGtleSBpbiBzd2lwZXJQYXJhbXMgJiYga2V5IGluIG9sZFBhcmFtcykge1xuICAgICAgaWYgKGlzT2JqZWN0KHN3aXBlclBhcmFtc1trZXldKSAmJiBpc09iamVjdChvbGRQYXJhbXNba2V5XSkpIHtcbiAgICAgICAgdmFyIG5ld0tleXMgPSBPYmplY3Qua2V5cyhzd2lwZXJQYXJhbXNba2V5XSk7XG4gICAgICAgIHZhciBvbGRLZXlzID0gT2JqZWN0LmtleXMob2xkUGFyYW1zW2tleV0pO1xuXG4gICAgICAgIGlmIChuZXdLZXlzLmxlbmd0aCAhPT0gb2xkS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgICBhZGRLZXkoa2V5KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdLZXlzLmZvckVhY2goZnVuY3Rpb24gKG5ld0tleSkge1xuICAgICAgICAgICAgaWYgKHN3aXBlclBhcmFtc1trZXldW25ld0tleV0gIT09IG9sZFBhcmFtc1trZXldW25ld0tleV0pIHtcbiAgICAgICAgICAgICAgYWRkS2V5KGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgb2xkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChvbGRLZXkpIHtcbiAgICAgICAgICAgIGlmIChzd2lwZXJQYXJhbXNba2V5XVtvbGRLZXldICE9PSBvbGRQYXJhbXNba2V5XVtvbGRLZXldKSBhZGRLZXkoa2V5KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzd2lwZXJQYXJhbXNba2V5XSAhPT0gb2xkUGFyYW1zW2tleV0pIHtcbiAgICAgICAgYWRkS2V5KGtleSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGtleXM7XG59XG5cbmV4cG9ydCB7IGdldENoYW5nZWRQYXJhbXMgfTsiLCJpbXBvcnQgeyBpc09iamVjdCwgZXh0ZW5kIH0gZnJvbSAnLi91dGlscyc7XG5cbmZ1bmN0aW9uIHVwZGF0ZVN3aXBlcihzd2lwZXIsIHNsaWRlcywgcGFzc2VkUGFyYW1zLCBjaGFuZ2VkUGFyYW1zKSB7XG4gIHZhciB1cGRhdGVQYXJhbXMgPSBjaGFuZ2VkUGFyYW1zLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGtleSAhPT0gJ2NoaWxkcmVuJyAmJiBrZXkgIT09ICdkaXJlY3Rpb24nO1xuICB9KTtcbiAgdmFyIGN1cnJlbnRQYXJhbXMgPSBzd2lwZXIucGFyYW1zLFxuICAgICAgcGFnaW5hdGlvbiA9IHN3aXBlci5wYWdpbmF0aW9uLFxuICAgICAgbmF2aWdhdGlvbiA9IHN3aXBlci5uYXZpZ2F0aW9uLFxuICAgICAgc2Nyb2xsYmFyID0gc3dpcGVyLnNjcm9sbGJhcixcbiAgICAgIHZpcnR1YWwgPSBzd2lwZXIudmlydHVhbCxcbiAgICAgIHRodW1icyA9IHN3aXBlci50aHVtYnM7XG4gIHZhciBuZWVkVGh1bWJzSW5pdDtcbiAgdmFyIG5lZWRDb250cm9sbGVySW5pdDtcbiAgdmFyIG5lZWRQYWdpbmF0aW9uSW5pdDtcbiAgdmFyIG5lZWRTY3JvbGxiYXJJbml0O1xuICB2YXIgbmVlZE5hdmlnYXRpb25Jbml0O1xuXG4gIGlmIChjaGFuZ2VkUGFyYW1zLmluY2x1ZGVzKCd0aHVtYnMnKSAmJiBwYXNzZWRQYXJhbXMudGh1bWJzICYmIHBhc3NlZFBhcmFtcy50aHVtYnMuc3dpcGVyICYmIGN1cnJlbnRQYXJhbXMudGh1bWJzICYmICFjdXJyZW50UGFyYW1zLnRodW1icy5zd2lwZXIpIHtcbiAgICBuZWVkVGh1bWJzSW5pdCA9IHRydWU7XG4gIH1cblxuICBpZiAoY2hhbmdlZFBhcmFtcy5pbmNsdWRlcygnY29udHJvbGxlcicpICYmIHBhc3NlZFBhcmFtcy5jb250cm9sbGVyICYmIHBhc3NlZFBhcmFtcy5jb250cm9sbGVyLmNvbnRyb2wgJiYgY3VycmVudFBhcmFtcy5jb250cm9sbGVyICYmICFjdXJyZW50UGFyYW1zLmNvbnRyb2xsZXIuY29udHJvbCkge1xuICAgIG5lZWRDb250cm9sbGVySW5pdCA9IHRydWU7XG4gIH1cblxuICBpZiAoY2hhbmdlZFBhcmFtcy5pbmNsdWRlcygncGFnaW5hdGlvbicpICYmIHBhc3NlZFBhcmFtcy5wYWdpbmF0aW9uICYmIHBhc3NlZFBhcmFtcy5wYWdpbmF0aW9uLmVsICYmIGN1cnJlbnRQYXJhbXMucGFnaW5hdGlvbiAmJiBwYWdpbmF0aW9uICYmICFwYWdpbmF0aW9uLmVsKSB7XG4gICAgbmVlZFBhZ2luYXRpb25Jbml0ID0gdHJ1ZTtcbiAgfVxuXG4gIGlmIChjaGFuZ2VkUGFyYW1zLmluY2x1ZGVzKCdzY3JvbGxiYXInKSAmJiBwYXNzZWRQYXJhbXMuc2Nyb2xsYmFyICYmIHBhc3NlZFBhcmFtcy5zY3JvbGxiYXIuZWwgJiYgY3VycmVudFBhcmFtcy5zY3JvbGxiYXIgJiYgc2Nyb2xsYmFyICYmICFzY3JvbGxiYXIuZWwpIHtcbiAgICBuZWVkU2Nyb2xsYmFySW5pdCA9IHRydWU7XG4gIH1cblxuICBpZiAoY2hhbmdlZFBhcmFtcy5pbmNsdWRlcygnbmF2aWdhdGlvbicpICYmIHBhc3NlZFBhcmFtcy5uYXZpZ2F0aW9uICYmIHBhc3NlZFBhcmFtcy5uYXZpZ2F0aW9uLnByZXZFbCAmJiBwYXNzZWRQYXJhbXMubmF2aWdhdGlvbi5uZXh0RWwgJiYgY3VycmVudFBhcmFtcy5uYXZpZ2F0aW9uICYmIG5hdmlnYXRpb24gJiYgIW5hdmlnYXRpb24ucHJldkVsICYmICFuYXZpZ2F0aW9uLm5leHRFbCkge1xuICAgIG5lZWROYXZpZ2F0aW9uSW5pdCA9IHRydWU7XG4gIH1cblxuICB1cGRhdGVQYXJhbXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KGN1cnJlbnRQYXJhbXNba2V5XSkgJiYgaXNPYmplY3QocGFzc2VkUGFyYW1zW2tleV0pKSB7XG4gICAgICBleHRlbmQoY3VycmVudFBhcmFtc1trZXldLCBwYXNzZWRQYXJhbXNba2V5XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRQYXJhbXNba2V5XSA9IHBhc3NlZFBhcmFtc1trZXldO1xuICAgIH1cbiAgfSk7XG5cbiAgaWYgKGNoYW5nZWRQYXJhbXMuaW5jbHVkZXMoJ2NoaWxkcmVuJykgJiYgdmlydHVhbCAmJiBjdXJyZW50UGFyYW1zLnZpcnR1YWwuZW5hYmxlZCkge1xuICAgIHZpcnR1YWwuc2xpZGVzID0gc2xpZGVzO1xuICAgIHZpcnR1YWwudXBkYXRlKHRydWUpO1xuICB9XG5cbiAgaWYgKG5lZWRUaHVtYnNJbml0KSB7XG4gICAgdmFyIGluaXRpYWxpemVkID0gdGh1bWJzLmluaXQoKTtcbiAgICBpZiAoaW5pdGlhbGl6ZWQpIHRodW1icy51cGRhdGUodHJ1ZSk7XG4gIH1cblxuICBpZiAobmVlZENvbnRyb2xsZXJJbml0KSB7XG4gICAgc3dpcGVyLmNvbnRyb2xsZXIuY29udHJvbCA9IGN1cnJlbnRQYXJhbXMuY29udHJvbGxlci5jb250cm9sO1xuICB9XG5cbiAgaWYgKG5lZWRQYWdpbmF0aW9uSW5pdCkge1xuICAgIHBhZ2luYXRpb24uaW5pdCgpO1xuICAgIHBhZ2luYXRpb24ucmVuZGVyKCk7XG4gICAgcGFnaW5hdGlvbi51cGRhdGUoKTtcbiAgfVxuXG4gIGlmIChuZWVkU2Nyb2xsYmFySW5pdCkge1xuICAgIHNjcm9sbGJhci5pbml0KCk7XG4gICAgc2Nyb2xsYmFyLnVwZGF0ZVNpemUoKTtcbiAgICBzY3JvbGxiYXIuc2V0VHJhbnNsYXRlKCk7XG4gIH1cblxuICBpZiAobmVlZE5hdmlnYXRpb25Jbml0KSB7XG4gICAgbmF2aWdhdGlvbi5pbml0KCk7XG4gICAgbmF2aWdhdGlvbi51cGRhdGUoKTtcbiAgfVxuXG4gIGlmIChjaGFuZ2VkUGFyYW1zLmluY2x1ZGVzKCdhbGxvd1NsaWRlTmV4dCcpKSB7XG4gICAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gcGFzc2VkUGFyYW1zLmFsbG93U2xpZGVOZXh0O1xuICB9XG5cbiAgaWYgKGNoYW5nZWRQYXJhbXMuaW5jbHVkZXMoJ2FsbG93U2xpZGVQcmV2JykpIHtcbiAgICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSBwYXNzZWRQYXJhbXMuYWxsb3dTbGlkZVByZXY7XG4gIH1cblxuICBpZiAoY2hhbmdlZFBhcmFtcy5pbmNsdWRlcygnZGlyZWN0aW9uJykpIHtcbiAgICBzd2lwZXIuY2hhbmdlRGlyZWN0aW9uKHBhc3NlZFBhcmFtcy5kaXJlY3Rpb24sIGZhbHNlKTtcbiAgfVxuXG4gIHN3aXBlci51cGRhdGUoKTtcbn1cblxuZXhwb3J0IHsgdXBkYXRlU3dpcGVyIH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gdXBkYXRlT25WaXJ0dWFsRGF0YShzd2lwZXIpIHtcbiAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICBzd2lwZXIudXBkYXRlU2xpZGVzKCk7XG4gIHN3aXBlci51cGRhdGVQcm9ncmVzcygpO1xuICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuXG4gIGlmIChzd2lwZXIubGF6eSAmJiBzd2lwZXIucGFyYW1zLmxhenkuZW5hYmxlZCkge1xuICAgIHN3aXBlci5sYXp5LmxvYWQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZW5kZXJWaXJ0dWFsKHN3aXBlciwgc2xpZGVzLCB2aXJ0dWFsRGF0YSkge1xuICB2YXIgX3JlZjtcblxuICBpZiAoIXZpcnR1YWxEYXRhKSByZXR1cm4gbnVsbDtcbiAgdmFyIHN0eWxlID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gKF9yZWYgPSB7fSwgX3JlZltzd2lwZXIucnRsVHJhbnNsYXRlID8gJ3JpZ2h0JyA6ICdsZWZ0J10gPSB2aXJ0dWFsRGF0YS5vZmZzZXQgKyBcInB4XCIsIF9yZWYpIDoge1xuICAgIHRvcDogdmlydHVhbERhdGEub2Zmc2V0ICsgXCJweFwiXG4gIH07XG4gIHJldHVybiBzbGlkZXMuZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCwgaW5kZXgpIHtcbiAgICByZXR1cm4gaW5kZXggPj0gdmlydHVhbERhdGEuZnJvbSAmJiBpbmRleCA8PSB2aXJ0dWFsRGF0YS50bztcbiAgfSkubWFwKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICBzd2lwZXI6IHN3aXBlcixcbiAgICAgIHN0eWxlOiBzdHlsZVxuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgcmVuZGVyVmlydHVhbCwgdXBkYXRlT25WaXJ0dWFsRGF0YSB9OyIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuaW1wb3J0IFN3aXBlciBmcm9tICcuLi8uLi9jb3JlJztcbmltcG9ydCB7IG5lZWRzTmF2aWdhdGlvbiwgbmVlZHNQYWdpbmF0aW9uLCBuZWVkc1Njcm9sbGJhciB9IGZyb20gJy4vdXRpbHMnO1xuXG5mdW5jdGlvbiBpbml0U3dpcGVyKF9yZWYsIHN3aXBlclBhcmFtcykge1xuICB2YXIgZWwgPSBfcmVmLmVsLFxuICAgICAgbmV4dEVsID0gX3JlZi5uZXh0RWwsXG4gICAgICBwcmV2RWwgPSBfcmVmLnByZXZFbCxcbiAgICAgIHBhZ2luYXRpb25FbCA9IF9yZWYucGFnaW5hdGlvbkVsLFxuICAgICAgc2Nyb2xsYmFyRWwgPSBfcmVmLnNjcm9sbGJhckVsO1xuXG4gIGlmIChuZWVkc05hdmlnYXRpb24oc3dpcGVyUGFyYW1zKSAmJiBuZXh0RWwgJiYgcHJldkVsKSB7XG4gICAgaWYgKHN3aXBlclBhcmFtcy5uYXZpZ2F0aW9uID09PSB0cnVlKSB7XG4gICAgICBzd2lwZXJQYXJhbXMubmF2aWdhdGlvbiA9IHt9O1xuICAgIH1cblxuICAgIHN3aXBlclBhcmFtcy5uYXZpZ2F0aW9uLm5leHRFbCA9IG5leHRFbDtcbiAgICBzd2lwZXJQYXJhbXMubmF2aWdhdGlvbi5wcmV2RWwgPSBwcmV2RWw7XG4gIH1cblxuICBpZiAobmVlZHNQYWdpbmF0aW9uKHN3aXBlclBhcmFtcykgJiYgcGFnaW5hdGlvbkVsKSB7XG4gICAgaWYgKHN3aXBlclBhcmFtcy5wYWdpbmF0aW9uID09PSB0cnVlKSB7XG4gICAgICBzd2lwZXJQYXJhbXMucGFnaW5hdGlvbiA9IHt9O1xuICAgIH1cblxuICAgIHN3aXBlclBhcmFtcy5wYWdpbmF0aW9uLmVsID0gcGFnaW5hdGlvbkVsO1xuICB9XG5cbiAgaWYgKG5lZWRzU2Nyb2xsYmFyKHN3aXBlclBhcmFtcykgJiYgc2Nyb2xsYmFyRWwpIHtcbiAgICBpZiAoc3dpcGVyUGFyYW1zLnNjcm9sbGJhciA9PT0gdHJ1ZSkge1xuICAgICAgc3dpcGVyUGFyYW1zLnNjcm9sbGJhciA9IHt9O1xuICAgIH1cblxuICAgIHN3aXBlclBhcmFtcy5zY3JvbGxiYXIuZWwgPSBzY3JvbGxiYXJFbDtcbiAgfVxuXG4gIHJldHVybiBuZXcgU3dpcGVyKGVsLCBzd2lwZXJQYXJhbXMpO1xufVxuXG5leHBvcnQgeyBpbml0U3dpcGVyIH07IiwiZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuaW1wb3J0ICQgZnJvbSAnLi4vLi4vdXRpbHMvZG9tJztcbmltcG9ydCB7IGV4dGVuZCwgYmluZE1vZHVsZU1ldGhvZHMgfSBmcm9tICcuLi8uLi91dGlscy91dGlscyc7XG52YXIgUGFnaW5hdGlvbiA9IHtcbiAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgLy8gUmVuZGVyIHx8IFVwZGF0ZSBQYWdpbmF0aW9uIGJ1bGxldHMvaXRlbXNcbiAgICB2YXIgc3dpcGVyID0gdGhpcztcbiAgICB2YXIgcnRsID0gc3dpcGVyLnJ0bDtcbiAgICB2YXIgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uO1xuICAgIGlmICghcGFyYW1zLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uJGVsIHx8IHN3aXBlci5wYWdpbmF0aW9uLiRlbC5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICB2YXIgc2xpZGVzTGVuZ3RoID0gc3dpcGVyLnZpcnR1YWwgJiYgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQgPyBzd2lwZXIudmlydHVhbC5zbGlkZXMubGVuZ3RoIDogc3dpcGVyLnNsaWRlcy5sZW5ndGg7XG4gICAgdmFyICRlbCA9IHN3aXBlci5wYWdpbmF0aW9uLiRlbDsgLy8gQ3VycmVudC9Ub3RhbFxuXG4gICAgdmFyIGN1cnJlbnQ7XG4gICAgdmFyIHRvdGFsID0gc3dpcGVyLnBhcmFtcy5sb29wID8gTWF0aC5jZWlsKChzbGlkZXNMZW5ndGggLSBzd2lwZXIubG9vcGVkU2xpZGVzICogMikgLyBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwKSA6IHN3aXBlci5zbmFwR3JpZC5sZW5ndGg7XG5cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICBjdXJyZW50ID0gTWF0aC5jZWlsKChzd2lwZXIuYWN0aXZlSW5kZXggLSBzd2lwZXIubG9vcGVkU2xpZGVzKSAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuXG4gICAgICBpZiAoY3VycmVudCA+IHNsaWRlc0xlbmd0aCAtIDEgLSBzd2lwZXIubG9vcGVkU2xpZGVzICogMikge1xuICAgICAgICBjdXJyZW50IC09IHNsaWRlc0xlbmd0aCAtIHN3aXBlci5sb29wZWRTbGlkZXMgKiAyO1xuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudCA+IHRvdGFsIC0gMSkgY3VycmVudCAtPSB0b3RhbDtcbiAgICAgIGlmIChjdXJyZW50IDwgMCAmJiBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb25UeXBlICE9PSAnYnVsbGV0cycpIGN1cnJlbnQgPSB0b3RhbCArIGN1cnJlbnQ7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygc3dpcGVyLnNuYXBJbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGN1cnJlbnQgPSBzd2lwZXIuc25hcEluZGV4O1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50ID0gc3dpcGVyLmFjdGl2ZUluZGV4IHx8IDA7XG4gICAgfSAvLyBUeXBlc1xuXG5cbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdidWxsZXRzJyAmJiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzICYmIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMubGVuZ3RoID4gMCkge1xuICAgICAgdmFyIGJ1bGxldHMgPSBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzO1xuICAgICAgdmFyIGZpcnN0SW5kZXg7XG4gICAgICB2YXIgbGFzdEluZGV4O1xuICAgICAgdmFyIG1pZEluZGV4O1xuXG4gICAgICBpZiAocGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldFNpemUgPSBidWxsZXRzLmVxKDApW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdvdXRlcldpZHRoJyA6ICdvdXRlckhlaWdodCddKHRydWUpO1xuICAgICAgICAkZWwuY3NzKHN3aXBlci5pc0hvcml6b250YWwoKSA/ICd3aWR0aCcgOiAnaGVpZ2h0Jywgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSAqIChwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzICsgNCkgKyBcInB4XCIpO1xuXG4gICAgICAgIGlmIChwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzID4gMSAmJiBzd2lwZXIucHJldmlvdXNJbmRleCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ICs9IGN1cnJlbnQgLSBzd2lwZXIucHJldmlvdXNJbmRleDtcblxuICAgICAgICAgIGlmIChzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPiBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIC0gMSkge1xuICAgICAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ID0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cyAtIDE7XG4gICAgICAgICAgfSBlbHNlIGlmIChzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPCAwKSB7XG4gICAgICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZpcnN0SW5kZXggPSBjdXJyZW50IC0gc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4O1xuICAgICAgICBsYXN0SW5kZXggPSBmaXJzdEluZGV4ICsgKE1hdGgubWluKGJ1bGxldHMubGVuZ3RoLCBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzKSAtIDEpO1xuICAgICAgICBtaWRJbmRleCA9IChsYXN0SW5kZXggKyBmaXJzdEluZGV4KSAvIDI7XG4gICAgICB9XG5cbiAgICAgIGJ1bGxldHMucmVtb3ZlQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCIgXCIgKyBwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0IFwiICsgcGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbmV4dC1uZXh0IFwiICsgcGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldiBcIiArIHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXYtcHJldiBcIiArIHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW1haW5cIik7XG5cbiAgICAgIGlmICgkZWwubGVuZ3RoID4gMSkge1xuICAgICAgICBidWxsZXRzLmVhY2goZnVuY3Rpb24gKGJ1bGxldCkge1xuICAgICAgICAgIHZhciAkYnVsbGV0ID0gJChidWxsZXQpO1xuICAgICAgICAgIHZhciBidWxsZXRJbmRleCA9ICRidWxsZXQuaW5kZXgoKTtcblxuICAgICAgICAgIGlmIChidWxsZXRJbmRleCA9PT0gY3VycmVudCkge1xuICAgICAgICAgICAgJGJ1bGxldC5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgICAgIGlmIChidWxsZXRJbmRleCA+PSBmaXJzdEluZGV4ICYmIGJ1bGxldEluZGV4IDw9IGxhc3RJbmRleCkge1xuICAgICAgICAgICAgICAkYnVsbGV0LmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW1haW5cIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChidWxsZXRJbmRleCA9PT0gZmlyc3RJbmRleCkge1xuICAgICAgICAgICAgICAkYnVsbGV0LnByZXYoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1wcmV2XCIpLnByZXYoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1wcmV2LXByZXZcIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChidWxsZXRJbmRleCA9PT0gbGFzdEluZGV4KSB7XG4gICAgICAgICAgICAgICRidWxsZXQubmV4dCgpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW5leHRcIikubmV4dCgpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLW5leHQtbmV4dFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyICRidWxsZXQgPSBidWxsZXRzLmVxKGN1cnJlbnQpO1xuICAgICAgICB2YXIgYnVsbGV0SW5kZXggPSAkYnVsbGV0LmluZGV4KCk7XG4gICAgICAgICRidWxsZXQuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzKTtcblxuICAgICAgICBpZiAocGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAgICAgdmFyICRmaXJzdERpc3BsYXllZEJ1bGxldCA9IGJ1bGxldHMuZXEoZmlyc3RJbmRleCk7XG4gICAgICAgICAgdmFyICRsYXN0RGlzcGxheWVkQnVsbGV0ID0gYnVsbGV0cy5lcShsYXN0SW5kZXgpO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IGZpcnN0SW5kZXg7IGkgPD0gbGFzdEluZGV4OyBpICs9IDEpIHtcbiAgICAgICAgICAgIGJ1bGxldHMuZXEoaSkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbWFpblwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICBpZiAoYnVsbGV0SW5kZXggPj0gYnVsbGV0cy5sZW5ndGggLSBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzKSB7XG4gICAgICAgICAgICAgIGZvciAodmFyIF9pID0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0czsgX2kgPj0gMDsgX2kgLT0gMSkge1xuICAgICAgICAgICAgICAgIGJ1bGxldHMuZXEoYnVsbGV0cy5sZW5ndGggLSBfaSkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbWFpblwiKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGJ1bGxldHMuZXEoYnVsbGV0cy5sZW5ndGggLSBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIC0gMSkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldlwiKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICRmaXJzdERpc3BsYXllZEJ1bGxldC5wcmV2KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldlwiKS5wcmV2KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItcHJldi1wcmV2XCIpO1xuICAgICAgICAgICAgICAkbGFzdERpc3BsYXllZEJ1bGxldC5uZXh0KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbmV4dFwiKS5uZXh0KCkuYWRkQ2xhc3MocGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzICsgXCItbmV4dC1uZXh0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkZmlyc3REaXNwbGF5ZWRCdWxsZXQucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXZcIikucHJldigpLmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyArIFwiLXByZXYtcHJldlwiKTtcbiAgICAgICAgICAgICRsYXN0RGlzcGxheWVkQnVsbGV0Lm5leHQoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0XCIpLm5leHQoKS5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MgKyBcIi1uZXh0LW5leHRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgdmFyIGR5bmFtaWNCdWxsZXRzTGVuZ3RoID0gTWF0aC5taW4oYnVsbGV0cy5sZW5ndGgsIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgKyA0KTtcbiAgICAgICAgdmFyIGJ1bGxldHNPZmZzZXQgPSAoc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSAqIGR5bmFtaWNCdWxsZXRzTGVuZ3RoIC0gc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSkgLyAyIC0gbWlkSW5kZXggKiBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplO1xuICAgICAgICB2YXIgb2Zmc2V0UHJvcCA9IHJ0bCA/ICdyaWdodCcgOiAnbGVmdCc7XG4gICAgICAgIGJ1bGxldHMuY3NzKHN3aXBlci5pc0hvcml6b250YWwoKSA/IG9mZnNldFByb3AgOiAndG9wJywgYnVsbGV0c09mZnNldCArIFwicHhcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnZnJhY3Rpb24nKSB7XG4gICAgICAkZWwuZmluZChcIi5cIiArIHBhcmFtcy5jdXJyZW50Q2xhc3MpLnRleHQocGFyYW1zLmZvcm1hdEZyYWN0aW9uQ3VycmVudChjdXJyZW50ICsgMSkpO1xuICAgICAgJGVsLmZpbmQoXCIuXCIgKyBwYXJhbXMudG90YWxDbGFzcykudGV4dChwYXJhbXMuZm9ybWF0RnJhY3Rpb25Ub3RhbCh0b3RhbCkpO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ3Byb2dyZXNzYmFyJykge1xuICAgICAgdmFyIHByb2dyZXNzYmFyRGlyZWN0aW9uO1xuXG4gICAgICBpZiAocGFyYW1zLnByb2dyZXNzYmFyT3Bwb3NpdGUpIHtcbiAgICAgICAgcHJvZ3Jlc3NiYXJEaXJlY3Rpb24gPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAndmVydGljYWwnIDogJ2hvcml6b250YWwnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvZ3Jlc3NiYXJEaXJlY3Rpb24gPSBzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnaG9yaXpvbnRhbCcgOiAndmVydGljYWwnO1xuICAgICAgfVxuXG4gICAgICB2YXIgc2NhbGUgPSAoY3VycmVudCArIDEpIC8gdG90YWw7XG4gICAgICB2YXIgc2NhbGVYID0gMTtcbiAgICAgIHZhciBzY2FsZVkgPSAxO1xuXG4gICAgICBpZiAocHJvZ3Jlc3NiYXJEaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICBzY2FsZVggPSBzY2FsZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNjYWxlWSA9IHNjYWxlO1xuICAgICAgfVxuXG4gICAgICAkZWwuZmluZChcIi5cIiArIHBhcmFtcy5wcm9ncmVzc2JhckZpbGxDbGFzcykudHJhbnNmb3JtKFwidHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlWChcIiArIHNjYWxlWCArIFwiKSBzY2FsZVkoXCIgKyBzY2FsZVkgKyBcIilcIikudHJhbnNpdGlvbihzd2lwZXIucGFyYW1zLnNwZWVkKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdjdXN0b20nICYmIHBhcmFtcy5yZW5kZXJDdXN0b20pIHtcbiAgICAgICRlbC5odG1sKHBhcmFtcy5yZW5kZXJDdXN0b20oc3dpcGVyLCBjdXJyZW50ICsgMSwgdG90YWwpKTtcbiAgICAgIHN3aXBlci5lbWl0KCdwYWdpbmF0aW9uUmVuZGVyJywgJGVsWzBdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLmVtaXQoJ3BhZ2luYXRpb25VcGRhdGUnLCAkZWxbMF0pO1xuICAgIH1cblxuICAgICRlbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHBhcmFtcy5sb2NrQ2xhc3MpO1xuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAvLyBSZW5kZXIgQ29udGFpbmVyXG4gICAgdmFyIHN3aXBlciA9IHRoaXM7XG4gICAgdmFyIHBhcmFtcyA9IHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbjtcbiAgICBpZiAoIXBhcmFtcy5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLiRlbCB8fCBzd2lwZXIucGFnaW5hdGlvbi4kZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgdmFyIHNsaWRlc0xlbmd0aCA9IHN3aXBlci52aXJ0dWFsICYmIHN3aXBlci5wYXJhbXMudmlydHVhbC5lbmFibGVkID8gc3dpcGVyLnZpcnR1YWwuc2xpZGVzLmxlbmd0aCA6IHN3aXBlci5zbGlkZXMubGVuZ3RoO1xuICAgIHZhciAkZWwgPSBzd2lwZXIucGFnaW5hdGlvbi4kZWw7XG4gICAgdmFyIHBhZ2luYXRpb25IVE1MID0gJyc7XG5cbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdidWxsZXRzJykge1xuICAgICAgdmFyIG51bWJlck9mQnVsbGV0cyA9IHN3aXBlci5wYXJhbXMubG9vcCA/IE1hdGguY2VpbCgoc2xpZGVzTGVuZ3RoIC0gc3dpcGVyLmxvb3BlZFNsaWRlcyAqIDIpIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCkgOiBzd2lwZXIuc25hcEdyaWQubGVuZ3RoO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bWJlck9mQnVsbGV0czsgaSArPSAxKSB7XG4gICAgICAgIGlmIChwYXJhbXMucmVuZGVyQnVsbGV0KSB7XG4gICAgICAgICAgcGFnaW5hdGlvbkhUTUwgKz0gcGFyYW1zLnJlbmRlckJ1bGxldC5jYWxsKHN3aXBlciwgaSwgcGFyYW1zLmJ1bGxldENsYXNzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYWdpbmF0aW9uSFRNTCArPSBcIjxcIiArIHBhcmFtcy5idWxsZXRFbGVtZW50ICsgXCIgY2xhc3M9XFxcIlwiICsgcGFyYW1zLmJ1bGxldENsYXNzICsgXCJcXFwiPjwvXCIgKyBwYXJhbXMuYnVsbGV0RWxlbWVudCArIFwiPlwiO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICRlbC5odG1sKHBhZ2luYXRpb25IVE1MKTtcbiAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMgPSAkZWwuZmluZChcIi5cIiArIHBhcmFtcy5idWxsZXRDbGFzcy5yZXBsYWNlKC8gL2csICcuJykpO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ2ZyYWN0aW9uJykge1xuICAgICAgaWYgKHBhcmFtcy5yZW5kZXJGcmFjdGlvbikge1xuICAgICAgICBwYWdpbmF0aW9uSFRNTCA9IHBhcmFtcy5yZW5kZXJGcmFjdGlvbi5jYWxsKHN3aXBlciwgcGFyYW1zLmN1cnJlbnRDbGFzcywgcGFyYW1zLnRvdGFsQ2xhc3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBcIjxzcGFuIGNsYXNzPVxcXCJcIiArIHBhcmFtcy5jdXJyZW50Q2xhc3MgKyBcIlxcXCI+PC9zcGFuPlwiICsgJyAvICcgKyAoXCI8c3BhbiBjbGFzcz1cXFwiXCIgKyBwYXJhbXMudG90YWxDbGFzcyArIFwiXFxcIj48L3NwYW4+XCIpO1xuICAgICAgfVxuXG4gICAgICAkZWwuaHRtbChwYWdpbmF0aW9uSFRNTCk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAncHJvZ3Jlc3NiYXInKSB7XG4gICAgICBpZiAocGFyYW1zLnJlbmRlclByb2dyZXNzYmFyKSB7XG4gICAgICAgIHBhZ2luYXRpb25IVE1MID0gcGFyYW1zLnJlbmRlclByb2dyZXNzYmFyLmNhbGwoc3dpcGVyLCBwYXJhbXMucHJvZ3Jlc3NiYXJGaWxsQ2xhc3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBcIjxzcGFuIGNsYXNzPVxcXCJcIiArIHBhcmFtcy5wcm9ncmVzc2JhckZpbGxDbGFzcyArIFwiXFxcIj48L3NwYW4+XCI7XG4gICAgICB9XG5cbiAgICAgICRlbC5odG1sKHBhZ2luYXRpb25IVE1MKTtcbiAgICB9XG5cbiAgICBpZiAocGFyYW1zLnR5cGUgIT09ICdjdXN0b20nKSB7XG4gICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblJlbmRlcicsIHN3aXBlci5wYWdpbmF0aW9uLiRlbFswXSk7XG4gICAgfVxuICB9LFxuICBpbml0OiBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb247XG4gICAgaWYgKCFwYXJhbXMuZWwpIHJldHVybjtcbiAgICB2YXIgJGVsID0gJChwYXJhbXMuZWwpO1xuICAgIGlmICgkZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyAmJiB0eXBlb2YgcGFyYW1zLmVsID09PSAnc3RyaW5nJyAmJiAkZWwubGVuZ3RoID4gMSkge1xuICAgICAgJGVsID0gc3dpcGVyLiRlbC5maW5kKHBhcmFtcy5lbCk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnYnVsbGV0cycgJiYgcGFyYW1zLmNsaWNrYWJsZSkge1xuICAgICAgJGVsLmFkZENsYXNzKHBhcmFtcy5jbGlja2FibGVDbGFzcyk7XG4gICAgfVxuXG4gICAgJGVsLmFkZENsYXNzKHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUpO1xuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnYnVsbGV0cycgJiYgcGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAkZWwuYWRkQ2xhc3MoXCJcIiArIHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUgKyBcIi1keW5hbWljXCIpO1xuICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ID0gMDtcblxuICAgICAgaWYgKHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgPCAxKSB7XG4gICAgICAgIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgPSAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ3Byb2dyZXNzYmFyJyAmJiBwYXJhbXMucHJvZ3Jlc3NiYXJPcHBvc2l0ZSkge1xuICAgICAgJGVsLmFkZENsYXNzKHBhcmFtcy5wcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3MpO1xuICAgIH1cblxuICAgIGlmIChwYXJhbXMuY2xpY2thYmxlKSB7XG4gICAgICAkZWwub24oJ2NsaWNrJywgXCIuXCIgKyBwYXJhbXMuYnVsbGV0Q2xhc3MucmVwbGFjZSgvIC9nLCAnLicpLCBmdW5jdGlvbiBvbkNsaWNrKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgaW5kZXggPSAkKHRoaXMpLmluZGV4KCkgKiBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSBpbmRleCArPSBzd2lwZXIubG9vcGVkU2xpZGVzO1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhpbmRleCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBleHRlbmQoc3dpcGVyLnBhZ2luYXRpb24sIHtcbiAgICAgICRlbDogJGVsLFxuICAgICAgZWw6ICRlbFswXVxuICAgIH0pO1xuICB9LFxuICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIHZhciBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb247XG4gICAgaWYgKCFwYXJhbXMuZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi4kZWwgfHwgc3dpcGVyLnBhZ2luYXRpb24uJGVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHZhciAkZWwgPSBzd2lwZXIucGFnaW5hdGlvbi4kZWw7XG4gICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5oaWRkZW5DbGFzcyk7XG4gICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUpO1xuICAgIGlmIChzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzKSBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLnJlbW92ZUNsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7XG5cbiAgICBpZiAocGFyYW1zLmNsaWNrYWJsZSkge1xuICAgICAgJGVsLm9mZignY2xpY2snLCBcIi5cIiArIHBhcmFtcy5idWxsZXRDbGFzcy5yZXBsYWNlKC8gL2csICcuJykpO1xuICAgIH1cbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3BhZ2luYXRpb24nLFxuICBwYXJhbXM6IHtcbiAgICBwYWdpbmF0aW9uOiB7XG4gICAgICBlbDogbnVsbCxcbiAgICAgIGJ1bGxldEVsZW1lbnQ6ICdzcGFuJyxcbiAgICAgIGNsaWNrYWJsZTogZmFsc2UsXG4gICAgICBoaWRlT25DbGljazogZmFsc2UsXG4gICAgICByZW5kZXJCdWxsZXQ6IG51bGwsXG4gICAgICByZW5kZXJQcm9ncmVzc2JhcjogbnVsbCxcbiAgICAgIHJlbmRlckZyYWN0aW9uOiBudWxsLFxuICAgICAgcmVuZGVyQ3VzdG9tOiBudWxsLFxuICAgICAgcHJvZ3Jlc3NiYXJPcHBvc2l0ZTogZmFsc2UsXG4gICAgICB0eXBlOiAnYnVsbGV0cycsXG4gICAgICAvLyAnYnVsbGV0cycgb3IgJ3Byb2dyZXNzYmFyJyBvciAnZnJhY3Rpb24nIG9yICdjdXN0b20nXG4gICAgICBkeW5hbWljQnVsbGV0czogZmFsc2UsXG4gICAgICBkeW5hbWljTWFpbkJ1bGxldHM6IDEsXG4gICAgICBmb3JtYXRGcmFjdGlvbkN1cnJlbnQ6IGZ1bmN0aW9uIGZvcm1hdEZyYWN0aW9uQ3VycmVudChudW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIG51bWJlcjtcbiAgICAgIH0sXG4gICAgICBmb3JtYXRGcmFjdGlvblRvdGFsOiBmdW5jdGlvbiBmb3JtYXRGcmFjdGlvblRvdGFsKG51bWJlcikge1xuICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgICAgfSxcbiAgICAgIGJ1bGxldENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0JyxcbiAgICAgIGJ1bGxldEFjdGl2ZUNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZScsXG4gICAgICBtb2RpZmllckNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tJyxcbiAgICAgIC8vIE5FV1xuICAgICAgY3VycmVudENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tY3VycmVudCcsXG4gICAgICB0b3RhbENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tdG90YWwnLFxuICAgICAgaGlkZGVuQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1oaWRkZW4nLFxuICAgICAgcHJvZ3Jlc3NiYXJGaWxsQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1maWxsJyxcbiAgICAgIHByb2dyZXNzYmFyT3Bwb3NpdGVDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLW9wcG9zaXRlJyxcbiAgICAgIGNsaWNrYWJsZUNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tY2xpY2thYmxlJyxcbiAgICAgIC8vIE5FV1xuICAgICAgbG9ja0NsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tbG9jaydcbiAgICB9XG4gIH0sXG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgIHZhciBzd2lwZXIgPSB0aGlzO1xuICAgIGJpbmRNb2R1bGVNZXRob2RzKHN3aXBlciwge1xuICAgICAgcGFnaW5hdGlvbjogX2V4dGVuZHMoe1xuICAgICAgICBkeW5hbWljQnVsbGV0SW5kZXg6IDBcbiAgICAgIH0sIFBhZ2luYXRpb24pXG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdChzd2lwZXIpIHtcbiAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmluaXQoKTtcbiAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnJlbmRlcigpO1xuICAgICAgc3dpcGVyLnBhZ2luYXRpb24udXBkYXRlKCk7XG4gICAgfSxcbiAgICBhY3RpdmVJbmRleENoYW5nZTogZnVuY3Rpb24gYWN0aXZlSW5kZXhDaGFuZ2Uoc3dpcGVyKSB7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygc3dpcGVyLnNuYXBJbmRleCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24udXBkYXRlKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzbmFwSW5kZXhDaGFuZ2U6IGZ1bmN0aW9uIHNuYXBJbmRleENoYW5nZShzd2lwZXIpIHtcbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2xpZGVzTGVuZ3RoQ2hhbmdlOiBmdW5jdGlvbiBzbGlkZXNMZW5ndGhDaGFuZ2Uoc3dpcGVyKSB7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnJlbmRlcigpO1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi51cGRhdGUoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNuYXBHcmlkTGVuZ3RoQ2hhbmdlOiBmdW5jdGlvbiBzbmFwR3JpZExlbmd0aENoYW5nZShzd2lwZXIpIHtcbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnJlbmRlcigpO1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi51cGRhdGUoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIGRlc3Ryb3koc3dpcGVyKSB7XG4gICAgICBzd2lwZXIucGFnaW5hdGlvbi5kZXN0cm95KCk7XG4gICAgfSxcbiAgICBjbGljazogZnVuY3Rpb24gY2xpY2soc3dpcGVyLCBlKSB7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmVsICYmIHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbi5oaWRlT25DbGljayAmJiBzd2lwZXIucGFnaW5hdGlvbi4kZWwubGVuZ3RoID4gMCAmJiAhJChlLnRhcmdldCkuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmJ1bGxldENsYXNzKSkge1xuICAgICAgICB2YXIgaXNIaWRkZW4gPSBzd2lwZXIucGFnaW5hdGlvbi4kZWwuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmhpZGRlbkNsYXNzKTtcblxuICAgICAgICBpZiAoaXNIaWRkZW4gPT09IHRydWUpIHtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblNob3cnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvbkhpZGUnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLiRlbC50b2dnbGVDbGFzcyhzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uaGlkZGVuQ2xhc3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0ICcuL3Byb2R1Y3QtaXRlbS5zY3NzJztcclxuXHJcbmNvbnN0IFByb2R1Y3RJdGVtID0gKHsgcHJvZHVjdCB9KSA9PiB7XHJcblx0Y29uc3QgeyB0aXRsZSwgaW1hZ2UsIGNvbG9yLCBpc0Rlc2lnbiwgaW52ZXN0VGltZSwgaW52ZXN0QW1vdW50LCBiZW5lZml0IH0gPSBwcm9kdWN0O1xyXG5cclxuXHRjb25zdCBjbGFzc05hbWVzID0gYHByb2R1Y3QtaXRlbSAkeyhpc0Rlc2lnbilcclxuXHRcdD8gJ3Byb2R1Y3QtaXRlbV9kZXNpZ24nIDogJyd9YDtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzfSBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yIH19PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtaXRlbV9fd3JhcFwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1pdGVtX19oZWFkZXJcIj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1pdGVtX19oZWFkZXItdGV4dFwiPlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtaXRlbV9faGVhZGVyLXRpdGxlXCI+e3RpdGxlfTwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtaXRlbV9faGVhZGVyLWljb25cIj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9kdWN0LWl0ZW1fX2hlYWRlci1pbWdcIj5cclxuXHRcdFx0XHRcdFx0XHR7aW1hZ2V9XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9kdWN0LWl0ZW1fX2Rlc2MgZGVzY3JpcHRpb25cIj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25fX3dyYXBcIj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJkZXNjcmlwdGlvbl9fY29sdW1uXCI+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJkZXNjcmlwdGlvbl9fdGl0bGVcIj57aW52ZXN0VGltZX08L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uX190ZXh0XCI+0YHRgNC+0Log0YDQsNC30LzQtdGJ0LXQvdC40Y88L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25fX2NvbHVtblwiPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25fX3RpdGxlXCI+e2ludmVzdEFtb3VudH08L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uX190ZXh0XCI+0LzQuNC90LjQvNCw0LvRjNC90LDRjyDRgdGD0LzQvNCwPC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9kdWN0LWl0ZW1fX2JlbmVmaXRcIj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1pdGVtX19iZW5lZml0LWJnXCI+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtaXRlbV9fYmVuZWZpdC13cmFwXCI+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1pdGVtX19iZW5lZml0LXBlcmNlbnRcIj57YmVuZWZpdH0lPC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1pdGVtX19iZW5lZml0LWRlc2NcIj7QvNCw0LrRgdC40LzQsNC70YzQvdCw0Y8gINC00L7RhdC+0LTQvdC+0YHRgtGMPC9kaXY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0SXRlbTsiLCJpbXBvcnQgUHJvZHVjdEl0ZW0gZnJvbSAnLi9wcm9kdWN0LWl0ZW0nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUHJvZHVjdEl0ZW07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBjb25zdCBmaWx0ZXJMaXN0RGF0YSA9IFtcclxuXHR7XHJcblx0XHRpZDogMSxcclxuXHRcdHRpdGxlOiAn0JPQsNGA0LDQvdGC0LjRgNC+0LLQsNC90L3QsNGPINC00L7RhdC+0LTQvdC+0YHRgtGMJyxcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiAyLFxyXG5cdFx0dGl0bGU6ICfQoNC10LPRg9C70Y/RgNC90LDRjyDQtNC+0YXQvtC00L3QvtGB0YLRjCcsXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogMyxcclxuXHRcdHRpdGxlOiAn0KHRgtCw0LLQutCwINC90LAg0YDQvtGB0YInLFxyXG5cdH1cclxuXVxyXG5cclxuZXhwb3J0IGNvbnN0IHByb2R1Y3RMaXN0RGF0YSA9IFtcclxuXHR7XHJcblx0XHRpZDogMSxcclxuXHRcdGZpbHRlcklkOiAxLFxyXG5cdFx0dGl0bGU6ICfQt9Cw0YnQuNGJ0ZHQvdC90YvQtSDQuNC90LLQtdGB0YLQuNGG0LjQuCDQsiBBbGliYWJhJyxcclxuXHRcdGNvbG9yOiAnI2YxOGU0YicsXHJcblx0XHRpc0Rlc2lnbjogZmFsc2UsXHJcblx0XHRpbnZlc3RUaW1lOiAnMyDQvNC10YEuJyxcclxuXHRcdGludmVzdEFtb3VudDogJ9C+0YIgMzAwIDAwMCDigr0nLFxyXG5cdFx0YmVuZWZpdDogMTAsXHJcblx0XHRpbWFnZTogKFxyXG5cdFx0XHQ8c3ZnIHdpZHRoPVwiMzZcIiBoZWlnaHQ9XCIxOVwiIHZpZXdCb3g9XCIwIDAgMzYgMTlcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTMuOTMxMDggMTYuMTYzM0MzLjc4NzIyIDE2LjE0ODkgMy41NTcwMyAxNi4wMTk0IDMuMzk4NzggMTUuODlDMS44NTk0MyAxNC4zNzk0IDMuODMwMzggMTIuNjM4NiA2LjEzMjIxIDExLjYzMTZWOC43NTQyOEM2LjY2NDUxIDkuMDk5NTYgNi45NjY2MyA5LjExMzk1IDYuOTgxMDIgOS4xNTcxTDguNzM2MTYgNy40MTYzNEw4LjE0NjMyIDUuOTIwMTVDMTMuMjgyMyA0LjE1MDYxIDE1LjMzOTYgMy40NzQ0NSAxOS41MTE2IDIuNzY5NTFMMTguNzYzNSAyLjA2NDU3TDE5Ljk4NjQgMS4zNzQwMkMyMi43OTE3IDIuMjk0NzYgMjUuNDM4OSAyLjUzOTMzIDI0Ljk3ODUgNC44OTg3MUMyNS4wOTM2IDMuMzAxODEgMjMuMTA4MiAyLjY5NzU4IDIwLjA4NzEgMS44NDg3OEwxOS40OTcyIDIuMjA4NDRMMjAuNjE5NCAzLjEyOTE3QzE1LjYyNzMgMy45OTIzNiAxMi41NDg2IDQuOTcwNjQgOC44OTQ0MiA2LjIzNjY1TDkuMzk3OTQgNy41MzE0M0w3LjU1NjQ3IDkuMzU4NTFDNy44NTg1OSA5LjQ0NDgzIDExLjA2NjggMTAuNTA5NCAxNC4zOSA4LjE5MzIxQzE0LjM5IDguMTkzMjEgMTQuNDYyIDguMTUwMDUgMTQuNDYyIDguMTIxMjhDMTQuMzYxMyA3Ljk2MzAzIDE0LjEzMTEgNy43NzYgMTMuODU3NyA3LjUzMTQzQzE0LjgzNiA3LjYwMzM2IDE1LjQ2OSA4LjQ1MjE3IDE1LjM1MzkgOS4zNDQxM0gxNC44OTM2QzE0LjkyMjMgOS4wNTY0IDE0Ljg2NDggOC43Mzk4OSAxNC43NjQxIDguNTM4NDhDMTIuMTg4OSAxMC40MjMxIDkuMTk2NTMgMTAuNjk2NSA2LjY1MDEzIDkuODA0NVYxMi4wMzQ0QzUuNDEyODkgMTIuNDY2IDMuMjExNzYgMTMuODMyNyAzLjIyNjE1IDE1LjE1NjNDMy4zMTI0NiAxNS43NzQ5IDMuNjI4OTcgMTYuMDA1MSAzLjkzMTA4IDE2LjE2MzNaXCIgZmlsbD1cImJsYWNrXCIgLz5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTE0LjQ2MzUgMTUuNDI2M0MxMS43MDEzIDE2LjgyMTggOS4wNTQxNCAxNy45NDQgNC45ODI3NyAxOC4xMDIyQy0wLjMyNTg0IDE3Ljk4NzEgLTEuMTQ1ODcgMTQuNDYyNCAxLjM1NzM4IDEwLjc3OTVDMy43MzExNSA3LjA2Nzc4IDcuNTAwNCAzLjcwMTM1IDEzLjQ4NTIgMS42MDA5M0MxNS4yMjU5IDAuOTgyMzA3IDE3Ljc3MjMgMC4yOTE3NTcgMjAuMjMyNCAwLjI0ODU5OEMyMy43NzE1IDAuMjE5ODI1IDI3LjIwOTkgMS4zMTMyIDI2Ljk3OTcgNC43MDg0QzI2Ljg1MDIgNy4zMTIzNiAyMy4wOTUzIDEwLjk2NjUgMjEuMTI0NCAxMy41OTkyQzIwLjI3NTYgMTQuNzUwMiAyMC4xMzE3IDE1LjQ5ODMgMjEuNTg0OCAxNS40MjYzQzI2LjgzNTggMTUuMDgxIDMxLjU4MzQgMTMuMjY4NCAzNiAxMS4zODM3QzMzLjAwNzYgMTMuNDEyMiAxNy41NzA5IDIxLjA1MTQgMTcuNTEzNCAxNS44NDM1QzE3LjUyNzggMTUuMTgxOCAxNy44Mjk5IDE0LjQ3NjggMTguMzMzNCAxMy43Mjg3QzE4LjgyMjYgMTIuOTgwNiAxOS40OTg3IDEyLjIwMzggMjAuMjAzNyAxMS40MTI1QzIxLjI1MzkgMTAuMjE4NCAyMy44NzIyIDcuMzQxMTMgMjQuNzQ5OCA1LjYxNDc1QzI2LjIzMTYgMi4zOTIxOCAyMi45MjI3IDIuMjMzOTMgMjAuMDU5OCAxLjIyNjg4TDE4LjgzNjkgMS45MTc0MkwxOS41ODUgMi42MjIzN0MxNS40MTMgMy4zMTI5MiAxMy4zNTU3IDQuMDAzNDcgOC4yMTk3MiA1Ljc3M0w4LjgwOTU3IDcuMjY5MTlMNy4wNjg4MSA4Ljk5NTU3QzcuMDI1NjUgOC45NTI0MSA2Ljc2NjY5IDguOTM4MDMgNi4yMjAwMSA4LjU5Mjc1VjExLjQ3QzMuOTMyNTYgMTIuNDc3MSAxLjk0NzIyIDE0LjIxNzkgMy40ODY1OCAxNS43Mjg0QzMuNjQ0ODMgMTUuODU3OSAzLjg3NTAxIDE1Ljk4NzQgNC4wMTg4OCAxNi4wMDE4QzYuODM4NjIgMTcuNTg0MyAxNC40Nzc4IDE1LjQyNjMgMTQuNDYzNSAxNS40MjYzWlwiIGZpbGw9XCIjRTI4MTQwXCIgLz5cclxuXHRcdFx0PC9zdmc+XHJcblx0XHQpLFxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6IDIsXHJcblx0XHRmaWx0ZXJJZDogMSxcclxuXHRcdHRpdGxlOiAn0J3QvtGC0LAg4oSWODEgwqvQnNGD0LvRjNGC0LjQsdCw0YDRjNC10YDCuycsXHJcblx0XHRjb2xvcjogJyMzZTQzNDgnLFxyXG5cdFx0aXNEZXNpZ246IHRydWUsXHJcblx0XHRpbnZlc3RUaW1lOiAnNSDQu9C10YInLFxyXG5cdFx0aW52ZXN0QW1vdW50OiAn0L7RgiAxIDI1MCAkJyxcclxuXHRcdGJlbmVmaXQ6IDE1LFxyXG5cdFx0aW1hZ2U6IChcclxuXHRcdFx0PHN2ZyB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0PHBhdGggZmlsbFJ1bGU9XCJldmVub2RkXCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgZD1cIk01LjM0Njc5IDIuMjUyMjRlLTA3SDI2LjY1MTZDMjguMDY5OSAtMC4wMDA0MTExNDkgMjkuNDMwNCAwLjU2MjcyNyAzMC40MzM0IDEuNTY1NDlDMzEuNDM2NCAyLjU2ODI1IDMyIDMuOTI4NDYgMzIgNS4zNDY3OVYyNi42NUMzMiAyOS42MDM5IDI5LjYwNTQgMzEuOTk4NCAyNi42NTE2IDMxLjk5ODRINS4zNDY3OUMyLjM5MzU4IDMxLjk5NzUgMCAyOS42MDMzIDAgMjYuNjVWNS4zNDY3OUMwIDIuMzkzODMgMi4zOTM4MyAyLjI1MjI0ZS0wNyA1LjM0Njc5IDIuMjUyMjRlLTA3Wk0yNC40OTgzIDI2LjE4MTJDMjUuNDMwMyAyNi4xODEyIDI2LjE4NTkgMjUuNDI1NiAyNi4xODU5IDI0LjQ5MzZMMjYuMTgxMiA3LjUwNjI5QzI2LjE4MTIgNi41NzQyNyAyNS40MjU2IDUuODE4NzMgMjQuNDkzNiA1LjgxODczSDcuNTA3ODRDNy4wNjAwMSA1LjgxODczIDYuNjMwNTMgNS45OTY3NSA2LjMxNDAxIDYuMzEzNTZDNS45OTc0OSA2LjYzMDM3IDUuODE5ODggNy4wNjAwMSA1LjgyMDI5IDcuNTA3ODRWMjQuNDkzNkM1LjgyMDI5IDI1LjQyNTYgNi41NzU4MyAyNi4xODEyIDcuNTA3ODQgMjYuMTgxMkgyNC40OTgzWlwiIGZpbGw9XCIjM0U0MzQ4XCIgLz5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTEyLjYwNDcgMjAuMzM3NkMxMi4wNzI3IDIwLjMzMzQgMTEuNjQzNyAxOS45MDEgMTEuNjQzNyAxOS4zNjlWMTIuNTg3N0MxMS42NDI1IDEyLjMyOTkgMTEuNzQ0IDEyLjA4MjMgMTEuOTI1OCAxMS44OTk2QzEyLjEwNzYgMTEuNzE3IDEyLjM1NDcgMTEuNjE0MyAxMi42MTI0IDExLjYxNDNIMTkuNDAzMUMxOS42NjA3IDExLjYxNDcgMTkuOTA3NSAxMS43MTc1IDIwLjA4OTMgMTEuOTAwMUMyMC4yNzEgMTIuMDgyNyAyMC4zNzI2IDEyLjMzMDEgMjAuMzcxOCAxMi41ODc3VjE5LjM2NzRDMjAuMzcyNiAxOS42MjUgMjAuMjcxIDE5Ljg3MjQgMjAuMDg5MyAyMC4wNTQ5QzE5LjkwNzUgMjAuMjM3NiAxOS42NjA3IDIwLjM0MDQgMTkuNDAzMSAyMC4zNDA4TDEyLjYwNDcgMjAuMzM3NlpcIiBmaWxsPVwiIzNFNDM0OFwiIC8+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0KSxcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiAzLFxyXG5cdFx0ZmlsdGVySWQ6IDEsXHJcblx0XHR0aXRsZTogJ9C30LDRidC40YnRkdC90L3Ri9C1INC40L3QstC10YHRgtC40YbQuNC4INCyINGB0LHQtdGA0LHQsNC90LonLFxyXG5cdFx0Y29sb3I6ICcjNTNiNTZjJyxcclxuXHRcdGlzRGVzaWduOiBmYWxzZSxcclxuXHRcdGludmVzdFRpbWU6ICczINC80LXRgS4nLFxyXG5cdFx0aW52ZXN0QW1vdW50OiAn0L7RgiAzMDAgMDAwIOKCvScsXHJcblx0XHRiZW5lZml0OiAxMCxcclxuXHRcdGltYWdlOiAoXHJcblx0XHRcdDxzdmcgd2lkdGg9XCIzMlwiIGhlaWdodD1cIjMxXCIgdmlld0JveD1cIjAgMCAzMiAzMVwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNMjkuMzk3NCA2LjAyNDg2QzI5LjA0ODcgNS41NDUxNyAyOC43MDM3IDUuMDY1NDkgMjguNCA0LjU4MjAzTDkuNzU2NTQgMTUuMzY5MkwwLjc1NzI5MyAxMC4xNzJDMC41NTA3NDggMTAuNzMyOCAwLjQyNDQ5MyAxMS4zMjA0IDAuMzgyMzI0IDExLjkxN0w5Ljg0Mjc4IDE3LjQzNTNMMjkuMzk3NCA2LjAyNDg2WlwiIGZpbGw9XCIjNTNCNTZDXCIgLz5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTkuNzU2NDcgMTkuNDI5NkwwLjA4OTc3MzMgMTMuODM5NUMwLjAxODIzOTYgMTQuMTgzNCAtMC4wMTA3Mjg0IDE0LjUzNDggMC4wMDM1MzA2NCAxNC44ODU4QzAuMDAzNTMwNjQgMTkuMTU5NyAxLjY4OTAzIDIzLjI1ODUgNC42ODkyNSAyNi4yODA2QzcuNjg5NDYgMjkuMzAyNyAxMS43NTg2IDMxLjAwMDUgMTYuMDAxNiAzMS4wMDA1QzIwLjI0NDUgMzEuMDAwNSAyNC4zMTM3IDI5LjMwMjcgMjcuMzEzOSAyNi4yODA2QzMwLjMxNDEgMjMuMjU4NSAzMS45OTk2IDE5LjE1OTcgMzEuOTk5NiAxNC44ODU4QzMyLjAxNzUgMTIuMzM1OSAzMS40MjMyIDkuODE5MzkgMzAuMjY3MyA3LjU1MDc4TDkuNzU2NDcgMTkuNDI5NlpcIiBmaWxsPVwiIzUzQjU2Q1wiIC8+XHJcblx0XHRcdFx0PHBhdGggZD1cIk0yNy4wOTg5IDMuMjI5MzdDMjYuNjQzMiAyLjc5NjE5IDI2LjE2NTEgMi4zODc3IDI1LjY2NjUgMi4wMDU2Mkw5Ljc1NjU2IDExLjMwODRMMi4wODQ3IDYuODk2ODdDMS44MjU5NyA3LjM3NjU2IDEuNTYzNDkgNy45MDE1NyAxLjI1OTc3IDguNDY4MTJMOS42NzAzMSAxMy4zNTk0TDI3LjA5ODkgMy4yMjkzN1pcIiBmaWxsPVwiIzUzQjU2Q1wiIC8+XHJcblx0XHRcdFx0PHBhdGggZD1cIk0yNC4xMDY1IDAuOTU5MzY3QzIzLjUwNDQgMC41OTYyNjEgMjIuODc3OSAwLjI3NTcwMSAyMi4yMzE3IDBMOS43NTY0NiA3LjIzNjhMNC4xNjU2OCA0LjA2MDMxQzMuNzkwNzEgNC40MzgwMSAzLjQxNTc0IDQuOTMyODEgMy4wNDA3NyA1LjQxMjQ5TDkuNzE1MjEgOS4yNTc1MUwyNC4xMDY1IDAuOTU5MzY3WlwiIGZpbGw9XCIjNTNCNTZDXCIgLz5cclxuXHRcdFx0PC9zdmc+XHJcblx0XHQpLFxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6IDQsXHJcblx0XHRmaWx0ZXJJZDogMixcclxuXHRcdHRpdGxlOiAnKDIpINC30LDRidC40YnRkdC90L3Ri9C1INC40L3QstC10YHRgtC40YbQuNC4INCyIEFsaWJhYmEnLFxyXG5cdFx0Y29sb3I6ICcjZjE4ZTRiJyxcclxuXHRcdGlzRGVzaWduOiBmYWxzZSxcclxuXHRcdGludmVzdFRpbWU6ICczINC80LXRgS4nLFxyXG5cdFx0aW52ZXN0QW1vdW50OiAn0L7RgiAzMDAgMDAwIOKCvScsXHJcblx0XHRiZW5lZml0OiAxMCxcclxuXHRcdGltYWdlOiAoXHJcblx0XHRcdDxzdmcgd2lkdGg9XCIzNlwiIGhlaWdodD1cIjE5XCIgdmlld0JveD1cIjAgMCAzNiAxOVwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNMy45MzEwOCAxNi4xNjMzQzMuNzg3MjIgMTYuMTQ4OSAzLjU1NzAzIDE2LjAxOTQgMy4zOTg3OCAxNS44OUMxLjg1OTQzIDE0LjM3OTQgMy44MzAzOCAxMi42Mzg2IDYuMTMyMjEgMTEuNjMxNlY4Ljc1NDI4QzYuNjY0NTEgOS4wOTk1NiA2Ljk2NjYzIDkuMTEzOTUgNi45ODEwMiA5LjE1NzFMOC43MzYxNiA3LjQxNjM0TDguMTQ2MzIgNS45MjAxNUMxMy4yODIzIDQuMTUwNjEgMTUuMzM5NiAzLjQ3NDQ1IDE5LjUxMTYgMi43Njk1MUwxOC43NjM1IDIuMDY0NTdMMTkuOTg2NCAxLjM3NDAyQzIyLjc5MTcgMi4yOTQ3NiAyNS40Mzg5IDIuNTM5MzMgMjQuOTc4NSA0Ljg5ODcxQzI1LjA5MzYgMy4zMDE4MSAyMy4xMDgyIDIuNjk3NTggMjAuMDg3MSAxLjg0ODc4TDE5LjQ5NzIgMi4yMDg0NEwyMC42MTk0IDMuMTI5MTdDMTUuNjI3MyAzLjk5MjM2IDEyLjU0ODYgNC45NzA2NCA4Ljg5NDQyIDYuMjM2NjVMOS4zOTc5NCA3LjUzMTQzTDcuNTU2NDcgOS4zNTg1MUM3Ljg1ODU5IDkuNDQ0ODMgMTEuMDY2OCAxMC41MDk0IDE0LjM5IDguMTkzMjFDMTQuMzkgOC4xOTMyMSAxNC40NjIgOC4xNTAwNSAxNC40NjIgOC4xMjEyOEMxNC4zNjEzIDcuOTYzMDMgMTQuMTMxMSA3Ljc3NiAxMy44NTc3IDcuNTMxNDNDMTQuODM2IDcuNjAzMzYgMTUuNDY5IDguNDUyMTcgMTUuMzUzOSA5LjM0NDEzSDE0Ljg5MzZDMTQuOTIyMyA5LjA1NjQgMTQuODY0OCA4LjczOTg5IDE0Ljc2NDEgOC41Mzg0OEMxMi4xODg5IDEwLjQyMzEgOS4xOTY1MyAxMC42OTY1IDYuNjUwMTMgOS44MDQ1VjEyLjAzNDRDNS40MTI4OSAxMi40NjYgMy4yMTE3NiAxMy44MzI3IDMuMjI2MTUgMTUuMTU2M0MzLjMxMjQ2IDE1Ljc3NDkgMy42Mjg5NyAxNi4wMDUxIDMuOTMxMDggMTYuMTYzM1pcIiBmaWxsPVwiYmxhY2tcIiAvPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNMTQuNDYzNSAxNS40MjYzQzExLjcwMTMgMTYuODIxOCA5LjA1NDE0IDE3Ljk0NCA0Ljk4Mjc3IDE4LjEwMjJDLTAuMzI1ODQgMTcuOTg3MSAtMS4xNDU4NyAxNC40NjI0IDEuMzU3MzggMTAuNzc5NUMzLjczMTE1IDcuMDY3NzggNy41MDA0IDMuNzAxMzUgMTMuNDg1MiAxLjYwMDkzQzE1LjIyNTkgMC45ODIzMDcgMTcuNzcyMyAwLjI5MTc1NyAyMC4yMzI0IDAuMjQ4NTk4QzIzLjc3MTUgMC4yMTk4MjUgMjcuMjA5OSAxLjMxMzIgMjYuOTc5NyA0LjcwODRDMjYuODUwMiA3LjMxMjM2IDIzLjA5NTMgMTAuOTY2NSAyMS4xMjQ0IDEzLjU5OTJDMjAuMjc1NiAxNC43NTAyIDIwLjEzMTcgMTUuNDk4MyAyMS41ODQ4IDE1LjQyNjNDMjYuODM1OCAxNS4wODEgMzEuNTgzNCAxMy4yNjg0IDM2IDExLjM4MzdDMzMuMDA3NiAxMy40MTIyIDE3LjU3MDkgMjEuMDUxNCAxNy41MTM0IDE1Ljg0MzVDMTcuNTI3OCAxNS4xODE4IDE3LjgyOTkgMTQuNDc2OCAxOC4zMzM0IDEzLjcyODdDMTguODIyNiAxMi45ODA2IDE5LjQ5ODcgMTIuMjAzOCAyMC4yMDM3IDExLjQxMjVDMjEuMjUzOSAxMC4yMTg0IDIzLjg3MjIgNy4zNDExMyAyNC43NDk4IDUuNjE0NzVDMjYuMjMxNiAyLjM5MjE4IDIyLjkyMjcgMi4yMzM5MyAyMC4wNTk4IDEuMjI2ODhMMTguODM2OSAxLjkxNzQyTDE5LjU4NSAyLjYyMjM3QzE1LjQxMyAzLjMxMjkyIDEzLjM1NTcgNC4wMDM0NyA4LjIxOTcyIDUuNzczTDguODA5NTcgNy4yNjkxOUw3LjA2ODgxIDguOTk1NTdDNy4wMjU2NSA4Ljk1MjQxIDYuNzY2NjkgOC45MzgwMyA2LjIyMDAxIDguNTkyNzVWMTEuNDdDMy45MzI1NiAxMi40NzcxIDEuOTQ3MjIgMTQuMjE3OSAzLjQ4NjU4IDE1LjcyODRDMy42NDQ4MyAxNS44NTc5IDMuODc1MDEgMTUuOTg3NCA0LjAxODg4IDE2LjAwMThDNi44Mzg2MiAxNy41ODQzIDE0LjQ3NzggMTUuNDI2MyAxNC40NjM1IDE1LjQyNjNaXCIgZmlsbD1cIiNFMjgxNDBcIiAvPlxyXG5cdFx0XHQ8L3N2Zz5cclxuXHRcdCksXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogNSxcclxuXHRcdGZpbHRlcklkOiAyLFxyXG5cdFx0dGl0bGU6ICcoMikg0J3QvtGC0LAg4oSWODEgwqvQnNGD0LvRjNGC0LjQsdCw0YDRjNC10YDCuycsXHJcblx0XHRjb2xvcjogJyMzZTQzNDgnLFxyXG5cdFx0aXNEZXNpZ246IHRydWUsXHJcblx0XHRpbnZlc3RUaW1lOiAnNSDQu9C10YInLFxyXG5cdFx0aW52ZXN0QW1vdW50OiAn0L7RgiAxIDI1MCAkJyxcclxuXHRcdGJlbmVmaXQ6IDE1LFxyXG5cdFx0aW1hZ2U6IChcclxuXHRcdFx0PHN2ZyB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcblx0XHRcdFx0PHBhdGggZmlsbFJ1bGU9XCJldmVub2RkXCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgZD1cIk01LjM0Njc5IDIuMjUyMjRlLTA3SDI2LjY1MTZDMjguMDY5OSAtMC4wMDA0MTExNDkgMjkuNDMwNCAwLjU2MjcyNyAzMC40MzM0IDEuNTY1NDlDMzEuNDM2NCAyLjU2ODI1IDMyIDMuOTI4NDYgMzIgNS4zNDY3OVYyNi42NUMzMiAyOS42MDM5IDI5LjYwNTQgMzEuOTk4NCAyNi42NTE2IDMxLjk5ODRINS4zNDY3OUMyLjM5MzU4IDMxLjk5NzUgMCAyOS42MDMzIDAgMjYuNjVWNS4zNDY3OUMwIDIuMzkzODMgMi4zOTM4MyAyLjI1MjI0ZS0wNyA1LjM0Njc5IDIuMjUyMjRlLTA3Wk0yNC40OTgzIDI2LjE4MTJDMjUuNDMwMyAyNi4xODEyIDI2LjE4NTkgMjUuNDI1NiAyNi4xODU5IDI0LjQ5MzZMMjYuMTgxMiA3LjUwNjI5QzI2LjE4MTIgNi41NzQyNyAyNS40MjU2IDUuODE4NzMgMjQuNDkzNiA1LjgxODczSDcuNTA3ODRDNy4wNjAwMSA1LjgxODczIDYuNjMwNTMgNS45OTY3NSA2LjMxNDAxIDYuMzEzNTZDNS45OTc0OSA2LjYzMDM3IDUuODE5ODggNy4wNjAwMSA1LjgyMDI5IDcuNTA3ODRWMjQuNDkzNkM1LjgyMDI5IDI1LjQyNTYgNi41NzU4MyAyNi4xODEyIDcuNTA3ODQgMjYuMTgxMkgyNC40OTgzWlwiIGZpbGw9XCIjM0U0MzQ4XCIgLz5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTEyLjYwNDcgMjAuMzM3NkMxMi4wNzI3IDIwLjMzMzQgMTEuNjQzNyAxOS45MDEgMTEuNjQzNyAxOS4zNjlWMTIuNTg3N0MxMS42NDI1IDEyLjMyOTkgMTEuNzQ0IDEyLjA4MjMgMTEuOTI1OCAxMS44OTk2QzEyLjEwNzYgMTEuNzE3IDEyLjM1NDcgMTEuNjE0MyAxMi42MTI0IDExLjYxNDNIMTkuNDAzMUMxOS42NjA3IDExLjYxNDcgMTkuOTA3NSAxMS43MTc1IDIwLjA4OTMgMTEuOTAwMUMyMC4yNzEgMTIuMDgyNyAyMC4zNzI2IDEyLjMzMDEgMjAuMzcxOCAxMi41ODc3VjE5LjM2NzRDMjAuMzcyNiAxOS42MjUgMjAuMjcxIDE5Ljg3MjQgMjAuMDg5MyAyMC4wNTQ5QzE5LjkwNzUgMjAuMjM3NiAxOS42NjA3IDIwLjM0MDQgMTkuNDAzMSAyMC4zNDA4TDEyLjYwNDcgMjAuMzM3NlpcIiBmaWxsPVwiIzNFNDM0OFwiIC8+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0KSxcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiA2LFxyXG5cdFx0ZmlsdGVySWQ6IDIsXHJcblx0XHR0aXRsZTogJygyKSDQt9Cw0YnQuNGJ0ZHQvdC90YvQtSDQuNC90LLQtdGB0YLQuNGG0LjQuCDQsiDRgdCx0LXRgNCx0LDQvdC6JyxcclxuXHRcdGNvbG9yOiAnIzUzYjU2YycsXHJcblx0XHRpc0Rlc2lnbjogZmFsc2UsXHJcblx0XHRpbnZlc3RUaW1lOiAnMyDQvNC10YEuJyxcclxuXHRcdGludmVzdEFtb3VudDogJ9C+0YIgMzAwIDAwMCDigr0nLFxyXG5cdFx0YmVuZWZpdDogMTAsXHJcblx0XHRpbWFnZTogKFxyXG5cdFx0XHQ8c3ZnIHdpZHRoPVwiMzJcIiBoZWlnaHQ9XCIzMVwiIHZpZXdCb3g9XCIwIDAgMzIgMzFcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTI5LjM5NzQgNi4wMjQ4NkMyOS4wNDg3IDUuNTQ1MTcgMjguNzAzNyA1LjA2NTQ5IDI4LjQgNC41ODIwM0w5Ljc1NjU0IDE1LjM2OTJMMC43NTcyOTMgMTAuMTcyQzAuNTUwNzQ4IDEwLjczMjggMC40MjQ0OTMgMTEuMzIwNCAwLjM4MjMyNCAxMS45MTdMOS44NDI3OCAxNy40MzUzTDI5LjM5NzQgNi4wMjQ4NlpcIiBmaWxsPVwiIzUzQjU2Q1wiIC8+XHJcblx0XHRcdFx0PHBhdGggZD1cIk05Ljc1NjQ3IDE5LjQyOTZMMC4wODk3NzMzIDEzLjgzOTVDMC4wMTgyMzk2IDE0LjE4MzQgLTAuMDEwNzI4NCAxNC41MzQ4IDAuMDAzNTMwNjQgMTQuODg1OEMwLjAwMzUzMDY0IDE5LjE1OTcgMS42ODkwMyAyMy4yNTg1IDQuNjg5MjUgMjYuMjgwNkM3LjY4OTQ2IDI5LjMwMjcgMTEuNzU4NiAzMS4wMDA1IDE2LjAwMTYgMzEuMDAwNUMyMC4yNDQ1IDMxLjAwMDUgMjQuMzEzNyAyOS4zMDI3IDI3LjMxMzkgMjYuMjgwNkMzMC4zMTQxIDIzLjI1ODUgMzEuOTk5NiAxOS4xNTk3IDMxLjk5OTYgMTQuODg1OEMzMi4wMTc1IDEyLjMzNTkgMzEuNDIzMiA5LjgxOTM5IDMwLjI2NzMgNy41NTA3OEw5Ljc1NjQ3IDE5LjQyOTZaXCIgZmlsbD1cIiM1M0I1NkNcIiAvPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNMjcuMDk4OSAzLjIyOTM3QzI2LjY0MzIgMi43OTYxOSAyNi4xNjUxIDIuMzg3NyAyNS42NjY1IDIuMDA1NjJMOS43NTY1NiAxMS4zMDg0TDIuMDg0NyA2Ljg5Njg3QzEuODI1OTcgNy4zNzY1NiAxLjU2MzQ5IDcuOTAxNTcgMS4yNTk3NyA4LjQ2ODEyTDkuNjcwMzEgMTMuMzU5NEwyNy4wOTg5IDMuMjI5MzdaXCIgZmlsbD1cIiM1M0I1NkNcIiAvPlxyXG5cdFx0XHRcdDxwYXRoIGQ9XCJNMjQuMTA2NSAwLjk1OTM2N0MyMy41MDQ0IDAuNTk2MjYxIDIyLjg3NzkgMC4yNzU3MDEgMjIuMjMxNyAwTDkuNzU2NDYgNy4yMzY4TDQuMTY1NjggNC4wNjAzMUMzLjc5MDcxIDQuNDM4MDEgMy40MTU3NCA0LjkzMjgxIDMuMDQwNzcgNS40MTI0OUw5LjcxNTIxIDkuMjU3NTFMMjQuMTA2NSAwLjk1OTM2N1pcIiBmaWxsPVwiIzUzQjU2Q1wiIC8+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0KSxcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOiA3LFxyXG5cdFx0ZmlsdGVySWQ6IDMsXHJcblx0XHR0aXRsZTogJygzKSDQt9Cw0YnQuNGJ0ZHQvdC90YvQtSDQuNC90LLQtdGB0YLQuNGG0LjQuCDQsiBBbGliYWJhJyxcclxuXHRcdGNvbG9yOiAnI2YxOGU0YicsXHJcblx0XHRpc0Rlc2lnbjogZmFsc2UsXHJcblx0XHRpbnZlc3RUaW1lOiAnMyDQvNC10YEuJyxcclxuXHRcdGludmVzdEFtb3VudDogJ9C+0YIgMzAwIDAwMCDigr0nLFxyXG5cdFx0YmVuZWZpdDogMTAsXHJcblx0XHRpbWFnZTogKFxyXG5cdFx0XHQ8c3ZnIHdpZHRoPVwiMzZcIiBoZWlnaHQ9XCIxOVwiIHZpZXdCb3g9XCIwIDAgMzYgMTlcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTMuOTMxMDggMTYuMTYzM0MzLjc4NzIyIDE2LjE0ODkgMy41NTcwMyAxNi4wMTk0IDMuMzk4NzggMTUuODlDMS44NTk0MyAxNC4zNzk0IDMuODMwMzggMTIuNjM4NiA2LjEzMjIxIDExLjYzMTZWOC43NTQyOEM2LjY2NDUxIDkuMDk5NTYgNi45NjY2MyA5LjExMzk1IDYuOTgxMDIgOS4xNTcxTDguNzM2MTYgNy40MTYzNEw4LjE0NjMyIDUuOTIwMTVDMTMuMjgyMyA0LjE1MDYxIDE1LjMzOTYgMy40NzQ0NSAxOS41MTE2IDIuNzY5NTFMMTguNzYzNSAyLjA2NDU3TDE5Ljk4NjQgMS4zNzQwMkMyMi43OTE3IDIuMjk0NzYgMjUuNDM4OSAyLjUzOTMzIDI0Ljk3ODUgNC44OTg3MUMyNS4wOTM2IDMuMzAxODEgMjMuMTA4MiAyLjY5NzU4IDIwLjA4NzEgMS44NDg3OEwxOS40OTcyIDIuMjA4NDRMMjAuNjE5NCAzLjEyOTE3QzE1LjYyNzMgMy45OTIzNiAxMi41NDg2IDQuOTcwNjQgOC44OTQ0MiA2LjIzNjY1TDkuMzk3OTQgNy41MzE0M0w3LjU1NjQ3IDkuMzU4NTFDNy44NTg1OSA5LjQ0NDgzIDExLjA2NjggMTAuNTA5NCAxNC4zOSA4LjE5MzIxQzE0LjM5IDguMTkzMjEgMTQuNDYyIDguMTUwMDUgMTQuNDYyIDguMTIxMjhDMTQuMzYxMyA3Ljk2MzAzIDE0LjEzMTEgNy43NzYgMTMuODU3NyA3LjUzMTQzQzE0LjgzNiA3LjYwMzM2IDE1LjQ2OSA4LjQ1MjE3IDE1LjM1MzkgOS4zNDQxM0gxNC44OTM2QzE0LjkyMjMgOS4wNTY0IDE0Ljg2NDggOC43Mzk4OSAxNC43NjQxIDguNTM4NDhDMTIuMTg4OSAxMC40MjMxIDkuMTk2NTMgMTAuNjk2NSA2LjY1MDEzIDkuODA0NVYxMi4wMzQ0QzUuNDEyODkgMTIuNDY2IDMuMjExNzYgMTMuODMyNyAzLjIyNjE1IDE1LjE1NjNDMy4zMTI0NiAxNS43NzQ5IDMuNjI4OTcgMTYuMDA1MSAzLjkzMTA4IDE2LjE2MzNaXCIgZmlsbD1cImJsYWNrXCIgLz5cclxuXHRcdFx0XHQ8cGF0aCBkPVwiTTE0LjQ2MzUgMTUuNDI2M0MxMS43MDEzIDE2LjgyMTggOS4wNTQxNCAxNy45NDQgNC45ODI3NyAxOC4xMDIyQy0wLjMyNTg0IDE3Ljk4NzEgLTEuMTQ1ODcgMTQuNDYyNCAxLjM1NzM4IDEwLjc3OTVDMy43MzExNSA3LjA2Nzc4IDcuNTAwNCAzLjcwMTM1IDEzLjQ4NTIgMS42MDA5M0MxNS4yMjU5IDAuOTgyMzA3IDE3Ljc3MjMgMC4yOTE3NTcgMjAuMjMyNCAwLjI0ODU5OEMyMy43NzE1IDAuMjE5ODI1IDI3LjIwOTkgMS4zMTMyIDI2Ljk3OTcgNC43MDg0QzI2Ljg1MDIgNy4zMTIzNiAyMy4wOTUzIDEwLjk2NjUgMjEuMTI0NCAxMy41OTkyQzIwLjI3NTYgMTQuNzUwMiAyMC4xMzE3IDE1LjQ5ODMgMjEuNTg0OCAxNS40MjYzQzI2LjgzNTggMTUuMDgxIDMxLjU4MzQgMTMuMjY4NCAzNiAxMS4zODM3QzMzLjAwNzYgMTMuNDEyMiAxNy41NzA5IDIxLjA1MTQgMTcuNTEzNCAxNS44NDM1QzE3LjUyNzggMTUuMTgxOCAxNy44Mjk5IDE0LjQ3NjggMTguMzMzNCAxMy43Mjg3QzE4LjgyMjYgMTIuOTgwNiAxOS40OTg3IDEyLjIwMzggMjAuMjAzNyAxMS40MTI1QzIxLjI1MzkgMTAuMjE4NCAyMy44NzIyIDcuMzQxMTMgMjQuNzQ5OCA1LjYxNDc1QzI2LjIzMTYgMi4zOTIxOCAyMi45MjI3IDIuMjMzOTMgMjAuMDU5OCAxLjIyNjg4TDE4LjgzNjkgMS45MTc0MkwxOS41ODUgMi42MjIzN0MxNS40MTMgMy4zMTI5MiAxMy4zNTU3IDQuMDAzNDcgOC4yMTk3MiA1Ljc3M0w4LjgwOTU3IDcuMjY5MTlMNy4wNjg4MSA4Ljk5NTU3QzcuMDI1NjUgOC45NTI0MSA2Ljc2NjY5IDguOTM4MDMgNi4yMjAwMSA4LjU5Mjc1VjExLjQ3QzMuOTMyNTYgMTIuNDc3MSAxLjk0NzIyIDE0LjIxNzkgMy40ODY1OCAxNS43Mjg0QzMuNjQ0ODMgMTUuODU3OSAzLjg3NTAxIDE1Ljk4NzQgNC4wMTg4OCAxNi4wMDE4QzYuODM4NjIgMTcuNTg0MyAxNC40Nzc4IDE1LjQyNjMgMTQuNDYzNSAxNS40MjYzWlwiIGZpbGw9XCIjRTI4MTQwXCIgLz5cclxuXHRcdFx0PC9zdmc+XHJcblx0XHQpLFxyXG5cdH0sXHJcbl07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU3dpcGVyLCBTd2lwZXJTbGlkZSB9IGZyb20gJ3N3aXBlci9yZWFjdCc7XHJcblxyXG5pbXBvcnQgeyBmaWx0ZXJMaXN0RGF0YSB9IGZyb20gJy4uLy4uL2RhdGEnO1xyXG5cclxuaW1wb3J0ICdzd2lwZXIvc3dpcGVyLnNjc3MnO1xyXG5cclxuaW1wb3J0ICcuL2ZpbHRlci1saXN0LnNjc3MnO1xyXG5cclxuY29uc3QgRmlsdGVyTGlzdCA9ICh7IGZpbHRlcklkLCB1cGRhdGVGaWx0ZXIgfSkgPT4ge1xyXG5cclxuXHRjb25zdCBmaWx0ZXJzVmlldyA9IGZpbHRlckxpc3REYXRhLm1hcCgoeyBpZCwgdGl0bGUgfSkgPT4ge1xyXG5cdFx0Y29uc3QgY2xhc3NOYW1lcyA9IGBmaWx0ZXJzX19idG4gJHsoaWQgPT09IGZpbHRlcklkKSA/ICdmaWx0ZXJzX19idG5fYWN0aXZlJyA6ICcnfWA7XHJcblxyXG5cdFx0cmV0dXJuIChcclxuXHRcdFx0PFN3aXBlclNsaWRlIGtleT17aWR9IHRhZz1cImRpdlwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZmlsdGVyc19fYnRuLXdyYXBcIj5cclxuXHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPXtjbGFzc05hbWVzfVxyXG5cdFx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiB1cGRhdGVGaWx0ZXIoaWQpfT5cclxuXHRcdFx0XHRcdFx0e3RpdGxlfVxyXG5cdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvU3dpcGVyU2xpZGUgPlxyXG5cdFx0KTtcclxuXHR9KTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPVwiZmlsdGVyc1wiPlxyXG5cclxuXHRcdFx0PFN3aXBlciB0YWc9XCJkaXZcIlxyXG5cdFx0XHRcdGdyYWJDdXJzb3I9e3RydWV9XHJcblx0XHRcdFx0c2xpZGVzUGVyVmlldz17J2F1dG8nfVxyXG5cdFx0XHRcdGZyZWVNb2RlPXt0cnVlfVxyXG5cdFx0XHRcdHByZXZlbnRDbGlja3M9e3RydWV9XHJcblx0XHRcdFx0dXBkYXRlT25XaW5kb3dSZXNpemU9e3RydWV9XHJcblx0XHRcdFx0d2F0Y2hPdmVyZmxvdz17dHJ1ZX1cclxuXHRcdFx0XHRicmVha3BvaW50cz17e1xyXG5cdFx0XHRcdFx0MzIwOiB7XHJcblx0XHRcdFx0XHRcdHNwYWNlQmV0d2VlbjogOFxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdDc2Nzoge1xyXG5cdFx0XHRcdFx0XHRzcGFjZUJldHdlZW46IDEyXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0MTUzNToge1xyXG5cdFx0XHRcdFx0XHRzcGFjZUJldHdlZW46IDE2XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fX1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdHtmaWx0ZXJzVmlld31cclxuXHRcdFx0PC9Td2lwZXI+XHJcblxyXG5cdFx0PC9kaXY+XHJcblx0KVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGaWx0ZXJMaXN0OyIsImltcG9ydCBGaWx0ZXJMaXN0IGZyb20gJy4vZmlsdGVyLWxpc3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRmlsdGVyTGlzdDsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBTd2lwZXIsIFN3aXBlclNsaWRlIH0gZnJvbSAnc3dpcGVyL3JlYWN0JztcclxuaW1wb3J0IFN3aXBlckNvcmUsIHsgUGFnaW5hdGlvbiB9IGZyb20gJ3N3aXBlcic7XHJcblxyXG5pbXBvcnQgUHJvZHVjdEl0ZW0gZnJvbSAnLi4vcHJvZHVjdC1pdGVtJztcclxuaW1wb3J0IEZpbHRlckxpc3QgZnJvbSAnLi4vZmlsdGVyLWxpc3QnO1xyXG5cclxuaW1wb3J0ICdzd2lwZXIvc3dpcGVyLnNjc3MnO1xyXG5pbXBvcnQgJ3N3aXBlci9jb21wb25lbnRzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5zY3NzJztcclxuXHJcbmltcG9ydCAnLi9wcm9kdWN0LWxpc3Quc2Nzcyc7XHJcblxyXG5Td2lwZXJDb3JlLnVzZShbUGFnaW5hdGlvbl0pO1xyXG5cclxuY29uc3QgUHJvZHVjdExpc3QgPSAoeyBwcm9kdWN0cywgZmlsdGVySWQsIHVwZGF0ZUZpbHRlciB9KSA9PiB7XHJcblxyXG5cdGNvbnN0IHByb2R1Y3RzVmlldyA9IHByb2R1Y3RzLm1hcCgoaXRlbSkgPT4gKFxyXG5cdFx0PFN3aXBlclNsaWRlIGtleT17aXRlbS5pZH0+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdHNfX2l0ZW1cIj5cclxuXHRcdFx0XHQ8UHJvZHVjdEl0ZW0gcHJvZHVjdD17aXRlbX0gLz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L1N3aXBlclNsaWRlPlxyXG5cdCkpO1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9XCJwcm9kdWN0LWxpc3RcIiA+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1saXN0X19oZWFkZXJcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtbGlzdF9fdGl0bGVcIj7Qm9GD0YfRiNC40LUg0LPQvtGC0L7QstGL0LUg0LjQvdCy0LXRgdGC0LjRhtC40L7QvdC90YvQtSDRgNC10YjQtdC90LjRjzwvZGl2PlxyXG5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInByb2R1Y3QtbGlzdF9fZmlsdGVyc1wiPlxyXG5cdFx0XHRcdFx0PEZpbHRlckxpc3QgZmlsdGVySWQ9e2ZpbHRlcklkfSB1cGRhdGVGaWx0ZXI9e3VwZGF0ZUZpbHRlcn0gLz5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1saXN0X19wcm9kdWN0c1wiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1saXN0X19wcm9kdWN0cy13cmFwXCI+XHJcblx0XHRcdFx0XHQ8U3dpcGVyIHRhZz1cImRpdlwiXHJcblx0XHRcdFx0XHRcdGdyYWJDdXJzb3I9e3RydWV9XHJcblx0XHRcdFx0XHRcdHNsaWRlc1BlclZpZXc9eydhdXRvJ31cclxuXHRcdFx0XHRcdFx0c3BhY2VCZXR3ZWVuPXsxMn1cclxuXHRcdFx0XHRcdFx0cHJldmVudENsaWNrcz17dHJ1ZX1cclxuXHRcdFx0XHRcdFx0dXBkYXRlT25XaW5kb3dSZXNpemU9e3RydWV9XHJcblx0XHRcdFx0XHRcdHdhdGNoT3ZlcmZsb3c9e3RydWV9XHJcblx0XHRcdFx0XHRcdGJyZWFrcG9pbnRzPXt7XHJcblx0XHRcdFx0XHRcdFx0MzIwOiB7XHJcblx0XHRcdFx0XHRcdFx0XHRzcGFjZUJldHdlZW46IDhcclxuXHRcdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRcdDc2Nzoge1xyXG5cdFx0XHRcdFx0XHRcdFx0c3BhY2VCZXR3ZWVuOiAxNlxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fX1cclxuXHRcdFx0XHRcdFx0cGFnaW5hdGlvbj17e1xyXG5cdFx0XHRcdFx0XHRcdGVsOiAnLnN3aXBlci1wYWdpbmF0aW9uJyxcclxuXHRcdFx0XHRcdFx0XHRjbGlja2FibGU6IHRydWUsXHJcblx0XHRcdFx0XHRcdH19XHJcblx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdHtwcm9kdWN0c1ZpZXd9XHJcblx0XHRcdFx0XHQ8L1N3aXBlcj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZHVjdC1saXN0X19wYWdpbmF0aW9uXCI+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwic3dpcGVyLXBhZ2luYXRpb25cIj48L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2ID5cclxuXHQpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByb2R1Y3RMaXN0OyIsImltcG9ydCBQcm9kdWN0TGlzdCBmcm9tICcuL3Byb2R1Y3QtbGlzdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0TGlzdDsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0IFByb2R1Y3RMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvcHJvZHVjdC1saXN0JztcclxuaW1wb3J0IHsgcHJvZHVjdExpc3REYXRhIH0gZnJvbSAnLi4vZGF0YSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9kdWN0TGlzdENvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XHJcblxyXG5cdHN0YXRlID0ge1xyXG5cdFx0ZmlsdGVySWQ6IG51bGwsXHJcblx0XHRwcm9kdWN0czogW10sXHJcblx0fVxyXG5cclxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcclxuXHRcdHRoaXMudXBkYXRlRmlsdGVyKDEpO1xyXG5cdH1cclxuXHJcblx0dXBkYXRlUHJvZHVjdHMgPSAoZmlsdGVySWQpID0+IHtcclxuXHRcdHJldHVybiBwcm9kdWN0TGlzdERhdGEuZmlsdGVyKChpdGVtKSA9PiAoXHJcblx0XHRcdCFmaWx0ZXJJZCB8fCBmaWx0ZXJJZCA9PT0gMSB8fCBpdGVtLmZpbHRlcklkID09PSBmaWx0ZXJJZCkpO1xyXG5cdH1cclxuXHJcblx0dXBkYXRlRmlsdGVyID0gKGZpbHRlcklkKSA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKHtcclxuXHRcdFx0ZmlsdGVySWQsXHJcblx0XHRcdHByb2R1Y3RzOiB0aGlzLnVwZGF0ZVByb2R1Y3RzKGZpbHRlcklkKVxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKSB7XHJcblx0XHRjb25zdCB7IGZpbHRlcklkLCBwcm9kdWN0cyB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8UHJvZHVjdExpc3QgZmlsdGVySWQ9e2ZpbHRlcklkfSBwcm9kdWN0cz17cHJvZHVjdHN9XHJcblx0XHRcdFx0dXBkYXRlRmlsdGVyPXt0aGlzLnVwZGF0ZUZpbHRlcn0gLz5cclxuXHRcdCk7XHJcblx0fVxyXG59IiwiaW1wb3J0IFByb2R1Y3RMaXN0Q29udGFpbmVyIGZyb20gJy4vcHJvZHVjdC1saXN0LWNvbnRhaW5lcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0TGlzdENvbnRhaW5lcjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0IE9mZmVycyBmcm9tICcuLi9vZmZlcnMnO1xyXG5pbXBvcnQgUHJvZHVjdExpc3RDb250YWluZXIgZnJvbSAnLi4vLi4vY29udGFpbmVycyc7XHJcblxyXG5pbXBvcnQgJy4vYXBwLnNjc3MnO1xyXG5cclxuY29uc3QgQXBwID0gKCkgPT4ge1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9XCJhcHBcIj5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImFwcF9fd3JhcFwiPlxyXG5cdFx0XHRcdFx0PE9mZmVycyAvPlxyXG5cdFx0XHRcdFx0PFByb2R1Y3RMaXN0Q29udGFpbmVyIC8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBwO1xyXG4iLCJpbXBvcnQgQXBwIGZyb20gJy4vYXBwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFwcDsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0ICcuL2Vycm9yLWluZGljYXRvci5zY3NzJztcclxuXHJcbmNvbnN0IEVycm9ySW5kaWNhdG9yID0gKCkgPT4ge1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9XCJlcnJvci1pbmRpY2F0b3JcIj5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImVycm9yLWluZGljYXRvcl9fdGV4dC13cmFwcGVyXCI+XHJcblx0XHRcdFx0XHQ8aDEgY2xhc3NOYW1lPVwiZXJyb3ItaW5kaWNhdG9yX190aXRsZVwiPtCh0YLRgNCw0L3QuNGG0LAg0L3QtSDQvdCw0LnQtNC10L3QsDwvaDE+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRXJyb3JJbmRpY2F0b3I7IiwiaW1wb3J0IEVycm9ySW5kaWNhdG9yIGZyb20gJy4vZXJyb3ItaW5kaWNhdG9yJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVycm9ySW5kaWNhdG9yOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgRXJyb3JJbmRpY2F0b3IgZnJvbSAnLi8uLi9lcnJvci1pbmRpY2F0b3InO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXJyb3JCb3VuZHJ5IGV4dGVuZHMgQ29tcG9uZW50IHtcclxuXHJcblx0c3RhdGUgPSB7IGhhc0Vycm9yOiBmYWxzZSB9XHJcblxyXG5cdGNvbXBvbmVudERpZENhdGNoKCkge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSh7IGhhc0Vycm9yOiB0cnVlIH0pO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyKCkge1xyXG5cdFx0aWYgKHRoaXMuc3RhdGUuaGFzRXJyb3IpIHJldHVybiA8RXJyb3JJbmRpY2F0b3IgLz5cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcclxuXHR9XHJcbn0iLCJpbXBvcnQgRXJyb3JCb3VuZHJ5IGZyb20gJy4vZXJyb3ItYm91bmRyeSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFcnJvckJvdW5kcnk7IiwiaW1wb3J0IHtcclxuXHRVUERBVEVfRklMVEVSLFxyXG59IGZyb20gJy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCB1cGRhdGVGaWx0ZXIgPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cclxuXHRpZiAoc3RhdGUgPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0ZmlsdGVySWQ6IG51bGwsXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBVUERBVEVfRklMVEVSOlxyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdGZpbHRlcklkOiBhY3Rpb24ucGF5bG9hZCxcclxuXHRcdFx0fVxyXG5cclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZS5maWx0ZXI7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1cGRhdGVGaWx0ZXI7IiwiLy8gXHJcblxyXG5leHBvcnQgY29uc3QgVVBEQVRFX0ZJTFRFUiA9ICdVUERBVEVfRklMVEVSJzsiLCJpbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3JlZHV4JztcclxuXHJcbmltcG9ydCByZWR1Y2VyIGZyb20gJy4vcmVkdWNlcnMnO1xyXG5cclxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2VyKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0b3JlOyIsImltcG9ydCB1cGRhdGVGaWx0ZXIgZnJvbSAnLi9maWx0ZXInO1xyXG5pbXBvcnQgdXBkYXRlTmV3c0l0ZW0gZnJvbSAnLi9maWx0ZXInO1xyXG5cclxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdGZpbHRlcjogdXBkYXRlRmlsdGVyKHN0YXRlLCBhY3Rpb24pLFxyXG5cdFx0bmV3c0l0ZW06IHVwZGF0ZU5ld3NJdGVtKHN0YXRlLCBhY3Rpb24pLFxyXG5cdH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZWR1Y2VyOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuXHJcbmltcG9ydCBBcHAgZnJvbSAnLi9jb21wb25lbnRzL2FwcCc7XHJcbmltcG9ydCBFcnJvckJvdW5kcnkgZnJvbSAnLi9jb21wb25lbnRzL2Vycm9yLWJvdW5kcnknO1xyXG5cclxuaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnO1xyXG5cclxuaW1wb3J0ICcuL3N0eWxlcy9zdHlsZS5zY3NzJztcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuXHQ8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuXHRcdDxFcnJvckJvdW5kcnk+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicGFnZVwiPlxyXG5cdFx0XHRcdDxBcHAgLz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L0Vycm9yQm91bmRyeT5cclxuXHQ8L1Byb3ZpZGVyPixcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXHJcbik7Il0sInNvdXJjZVJvb3QiOiIifQ==